

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Nov 11 15:34:06 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62   000000                     
    63                           ; Version 2.20
    64                           ; Generated 12/02/2020 GMT
    65                           ; 
    66                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F4580 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97   000000                     
    98                           	psect	idataCOMRAM
    99   003000                     __pidataCOMRAM:
   100                           	callstack 0
   101                           
   102                           ;initializer for read_switches@once
   103   003000  01                 	db	1
   104                           
   105                           	psect	idataBANK0
   106   001176                     __pidataBANK0:
   107                           	callstack 0
   108                           
   109                           ;initializer for _arr
   110   001176  F9                 	db	low STR_1
   111   001177  2F                 	db	high STR_1
   112   001178  F6                 	db	low STR_2
   113   001179  2F                 	db	high STR_2
   114   00117A  FC                 	db	low STR_3
   115   00117B  2F                 	db	high STR_3
   116   00117C  E7                 	db	low STR_4
   117   00117D  2F                 	db	high STR_4
   118   00117E  EA                 	db	low STR_5
   119   00117F  2F                 	db	high STR_5
   120   001180  ED                 	db	low STR_6
   121   001181  2F                 	db	high STR_6
   122   001182  F0                 	db	low STR_7
   123   001183  2F                 	db	high STR_7
   124   001184  F3                 	db	low STR_8
   125   001185  2F                 	db	high STR_8
   126   001186  E4                 	db	low STR_9
   127   001187  2F                 	db	high STR_9
   128                           
   129                           ;initializer for _menu
   130   001188  CD                 	db	low (STR_24+4)
   131   001189  2E                 	db	high (STR_24+4)
   132   00118A  9E                 	db	low STR_11
   133   00118B  2F                 	db	high STR_11
   134   00118C  F8                 	db	low STR_12
   135   00118D  2E                 	db	high STR_12
   136   00118E  8B                 	db	low STR_13
   137   00118F  2F                 	db	high STR_13
   138   000000                     _RCREG	set	4014
   139   000000                     _TXREG	set	4013
   140   000000                     _SPBRG	set	4015
   141   000000                     _SSPADD	set	4040
   142   000000                     _SSPCON1	set	4038
   143   000000                     _ADRESL	set	4035
   144   000000                     _ADRESH	set	4036
   145   000000                     _BRG16	set	32195
   146   000000                     _ACKSTAT	set	32302
   147   000000                     _CKE	set	32318
   148   000000                     _GODONE	set	32273
   149   000000                     _RBPU	set	32655
   150   000000                     _ADCON0	set	4034
   151   000000                     _PORTBbits	set	3969
   152   000000                     _TRISD	set	3989
   153   000000                     _RCIF	set	31989
   154   000000                     _TXIF	set	31988
   155   000000                     _CREN	set	32092
   156   000000                     _RX9	set	32094
   157   000000                     _BRGH	set	32098
   158   000000                     _SENDB	set	32099
   159   000000                     _SYNC	set	32100
   160   000000                     _TXEN	set	32101
   161   000000                     _TRISC6	set	31910
   162   000000                     _TRISC7	set	31911
   163   000000                     _ACKEN	set	32300
   164   000000                     _ACKDT	set	32301
   165   000000                     _RCEN	set	32299
   166   000000                     _RSEN	set	32297
   167   000000                     _PEN	set	32298
   168   000000                     _SEN	set	32296
   169   000000                     _SMP	set	32319
   170   000000                     _TRISC4	set	31908
   171   000000                     _TRISC3	set	31907
   172   000000                     _GO	set	32273
   173   000000                     _ADON	set	32272
   174   000000                     _VCFG0	set	32268
   175   000000                     _VCFG1	set	32269
   176   000000                     _ADCS2	set	32258
   177   000000                     _ADCS1	set	32257
   178   000000                     _ADCS0	set	32256
   179   000000                     _ACQT0	set	32259
   180   000000                     _ACQT1	set	32260
   181   000000                     _ACQT2	set	32261
   182   000000                     _RD7	set	31775
   183   000000                     _RC0	set	31760
   184   000000                     _RC2	set	31762
   185   000000                     _PORTB	set	3969
   186   000000                     _RC1	set	31761
   187   000000                     _TRISB	set	3987
   188   000000                     _TRISC	set	3988
   189   000000                     _PORTD	set	3971
   190   000000                     _TRISD7	set	31919
   191   000000                     _ADCON1	set	4033
   192   000000                     _SSPIF	set	31987
   193   000000                     _ADFM	set	32263
   194   000000                     _SSPBUF	set	4041
   195   000000                     _BCLIF	set	32011
   196   000000                     _SPEN	set	32095
   197   000000                     _TX9	set	32102
   198                           
   199                           	psect	mediumconst
   200   002EC8                     __pmediumconst:
   201                           	callstack 0
   202   002EC8  00                 	db	0
   203   002EC9                     STR_24:
   204   002EC9  23                 	db	35
   205   002ECA  20                 	db	32
   206   002ECB  20                 	db	32
   207   002ECC  20                 	db	32
   208   002ECD  56                 	db	86	;'V'
   209   002ECE  49                 	db	73	;'I'
   210   002ECF  45                 	db	69	;'E'
   211   002ED0  57                 	db	87	;'W'
   212   002ED1  20                 	db	32
   213   002ED2  4C                 	db	76	;'L'
   214   002ED3  4F                 	db	79	;'O'
   215   002ED4  47                 	db	71	;'G'
   216   002ED5  20                 	db	32
   217   002ED6  20                 	db	32
   218   002ED7  20                 	db	32
   219   002ED8  20                 	db	32
   220   002ED9  20                 	db	32
   221   002EDA  20                 	db	32
   222   002EDB  20                 	db	32
   223   002EDC  20                 	db	32
   224   002EDD  20                 	db	32
   225   002EDE  20                 	db	32
   226   002EDF  20                 	db	32
   227   002EE0  00                 	db	0
   228   002EE1                     STR_22:
   229   002EE1  48                 	db	72	;'H'
   230   002EE2  48                 	db	72	;'H'
   231   002EE3  3A                 	db	58	;':'
   232   002EE4  4D                 	db	77	;'M'
   233   002EE5  4D                 	db	77	;'M'
   234   002EE6  3A                 	db	58	;':'
   235   002EE7  53                 	db	83	;'S'
   236   002EE8  53                 	db	83	;'S'
   237   002EE9  20                 	db	32
   238   002EEA  20                 	db	32
   239   002EEB  20                 	db	32
   240   002EEC  20                 	db	32
   241   002EED  20                 	db	32
   242   002EEE  20                 	db	32
   243   002EEF  20                 	db	32
   244   002EF0  20                 	db	32
   245   002EF1  20                 	db	32
   246   002EF2  20                 	db	32
   247   002EF3  20                 	db	32
   248   002EF4  20                 	db	32
   249   002EF5  20                 	db	32
   250   002EF6  20                 	db	32
   251   002EF7  00                 	db	0
   252   002EF8                     STR_12:
   253   002EF8  44                 	db	68	;'D'
   254   002EF9  4F                 	db	79	;'O'
   255   002EFA  57                 	db	87	;'W'
   256   002EFB  4E                 	db	78	;'N'
   257   002EFC  4C                 	db	76	;'L'
   258   002EFD  4F                 	db	79	;'O'
   259   002EFE  41                 	db	65	;'A'
   260   002EFF  44                 	db	68	;'D'
   261   002F00  20                 	db	32
   262   002F01  4C                 	db	76	;'L'
   263   002F02  4F                 	db	79	;'O'
   264   002F03  47                 	db	71	;'G'
   265   002F04  20                 	db	32
   266   002F05  20                 	db	32
   267   002F06  20                 	db	32
   268   002F07  20                 	db	32
   269   002F08  20                 	db	32
   270   002F09  20                 	db	32
   271   002F0A  20                 	db	32
   272   002F0B  20                 	db	32
   273   002F0C  20                 	db	32
   274   002F0D  20                 	db	32
   275   002F0E  00                 	db	0
   276   002F0F                     STR_20:
   277   002F0F  49                 	db	73	;'I'
   278   002F10  44                 	db	68	;'D'
   279   002F11  20                 	db	32
   280   002F12  20                 	db	32
   281   002F13  54                 	db	84	;'T'
   282   002F14  49                 	db	73	;'I'
   283   002F15  4D                 	db	77	;'M'
   284   002F16  45                 	db	69	;'E'
   285   002F17  20                 	db	32
   286   002F18  20                 	db	32
   287   002F19  20                 	db	32
   288   002F1A  20                 	db	32
   289   002F1B  45                 	db	69	;'E'
   290   002F1C  56                 	db	86	;'V'
   291   002F1D  20                 	db	32
   292   002F1E  20                 	db	32
   293   002F1F  53                 	db	83	;'S'
   294   002F20  50                 	db	80	;'P'
   295   002F21  0A                 	db	10
   296   002F22  0D                 	db	13
   297   002F23  00                 	db	0
   298   002F24                     STR_18:
   299   002F24  44                 	db	68	;'D'
   300   002F25  6F                 	db	111	;'o'
   301   002F26  77                 	db	119	;'w'
   302   002F27  6E                 	db	110	;'n'
   303   002F28  6C                 	db	108	;'l'
   304   002F29  6F                 	db	111	;'o'
   305   002F2A  61                 	db	97	;'a'
   306   002F2B  64                 	db	100	;'d'
   307   002F2C  69                 	db	105	;'i'
   308   002F2D  6E                 	db	110	;'n'
   309   002F2E  67                 	db	103	;'g'
   310   002F2F  20                 	db	32
   311   002F30  20                 	db	32
   312   002F31  20                 	db	32
   313   002F32  20                 	db	32
   314   002F33  20                 	db	32
   315   002F34  20                 	db	32
   316   002F35  20                 	db	32
   317   002F36  20                 	db	32
   318   002F37  20                 	db	32
   319   002F38  00                 	db	0
   320   002F39                     STR_19:
   321   002F39  54                 	db	84	;'T'
   322   002F3A  68                 	db	104	;'h'
   323   002F3B  72                 	db	114	;'r'
   324   002F3C  6F                 	db	111	;'o'
   325   002F3D  75                 	db	117	;'u'
   326   002F3E  67                 	db	103	;'g'
   327   002F3F  68                 	db	104	;'h'
   328   002F40  20                 	db	32
   329   002F41  55                 	db	85	;'U'
   330   002F42  41                 	db	65	;'A'
   331   002F43  52                 	db	82	;'R'
   332   002F44  54                 	db	84	;'T'
   333   002F45  20                 	db	32
   334   002F46  20                 	db	32
   335   002F47  20                 	db	32
   336   002F48  20                 	db	32
   337   002F49  20                 	db	32
   338   002F4A  20                 	db	32
   339   002F4B  20                 	db	32
   340   002F4C  20                 	db	32
   341   002F4D  00                 	db	0
   342   002F4E                     STR_17:
   343   002F4E  20                 	db	32
   344   002F4F  20                 	db	32
   345   002F50  54                 	db	84	;'T'
   346   002F51  4F                 	db	79	;'O'
   347   002F52  20                 	db	32
   348   002F53  44                 	db	68	;'D'
   349   002F54  4F                 	db	79	;'O'
   350   002F55  57                 	db	87	;'W'
   351   002F56  4E                 	db	78	;'N'
   352   002F57  4C                 	db	76	;'L'
   353   002F58  4F                 	db	79	;'O'
   354   002F59  41                 	db	65	;'A'
   355   002F5A  44                 	db	68	;'D'
   356   002F5B  20                 	db	32
   357   002F5C  3A                 	db	58	;':'
   358   002F5D  28                 	db	40
   359   002F5E  20                 	db	32
   360   002F5F  20                 	db	32
   361   002F60  20                 	db	32
   362   002F61  20                 	db	32
   363   002F62  00                 	db	0
   364   002F63                     STR_14:
   365   002F63  4E                 	db	78	;'N'
   366   002F64  4F                 	db	79	;'O'
   367   002F65  20                 	db	32
   368   002F66  4C                 	db	76	;'L'
   369   002F67  4F                 	db	79	;'O'
   370   002F68  47                 	db	71	;'G'
   371   002F69  53                 	db	83	;'S'
   372   002F6A  2E                 	db	46
   373   002F6B  2E                 	db	46
   374   002F6C  20                 	db	32
   375   002F6D  20                 	db	32
   376   002F6E  20                 	db	32
   377   002F6F  20                 	db	32
   378   002F70  20                 	db	32
   379   002F71  20                 	db	32
   380   002F72  20                 	db	32
   381   002F73  20                 	db	32
   382   002F74  20                 	db	32
   383   002F75  20                 	db	32
   384   002F76  00                 	db	0
   385   002F77                     STR_15:
   386   002F77  20                 	db	32
   387   002F78  20                 	db	32
   388   002F79  54                 	db	84	;'T'
   389   002F7A  4F                 	db	79	;'O'
   390   002F7B  20                 	db	32
   391   002F7C  44                 	db	68	;'D'
   392   002F7D  49                 	db	73	;'I'
   393   002F7E  53                 	db	83	;'S'
   394   002F7F  50                 	db	80	;'P'
   395   002F80  4C                 	db	76	;'L'
   396   002F81  41                 	db	65	;'A'
   397   002F82  59                 	db	89	;'Y'
   398   002F83  20                 	db	32
   399   002F84  3A                 	db	58	;':'
   400   002F85  28                 	db	40
   401   002F86  20                 	db	32
   402   002F87  20                 	db	32
   403   002F88  20                 	db	32
   404   002F89  20                 	db	32
   405   002F8A  00                 	db	0
   406   002F8B                     STR_13:
   407   002F8B  53                 	db	83	;'S'
   408   002F8C  45                 	db	69	;'E'
   409   002F8D  54                 	db	84	;'T'
   410   002F8E  20                 	db	32
   411   002F8F  54                 	db	84	;'T'
   412   002F90  49                 	db	73	;'I'
   413   002F91  4D                 	db	77	;'M'
   414   002F92  45                 	db	69	;'E'
   415   002F93  20                 	db	32
   416   002F94  20                 	db	32
   417   002F95  20                 	db	32
   418   002F96  20                 	db	32
   419   002F97  20                 	db	32
   420   002F98  20                 	db	32
   421   002F99  20                 	db	32
   422   002F9A  20                 	db	32
   423   002F9B  20                 	db	32
   424   002F9C  20                 	db	32
   425   002F9D  00                 	db	0
   426   002F9E                     STR_11:
   427   002F9E  43                 	db	67	;'C'
   428   002F9F  4C                 	db	76	;'L'
   429   002FA0  45                 	db	69	;'E'
   430   002FA1  41                 	db	65	;'A'
   431   002FA2  52                 	db	82	;'R'
   432   002FA3  20                 	db	32
   433   002FA4  4C                 	db	76	;'L'
   434   002FA5  4F                 	db	79	;'O'
   435   002FA6  47                 	db	71	;'G'
   436   002FA7  20                 	db	32
   437   002FA8  20                 	db	32
   438   002FA9  20                 	db	32
   439   002FAA  20                 	db	32
   440   002FAB  20                 	db	32
   441   002FAC  20                 	db	32
   442   002FAD  20                 	db	32
   443   002FAE  20                 	db	32
   444   002FAF  00                 	db	0
   445   002FB0                     STR_26:
   446   002FB0  4A                 	db	74	;'J'
   447   002FB1  75                 	db	117	;'u'
   448   002FB2  73                 	db	115	;'s'
   449   002FB3  74                 	db	116	;'t'
   450   002FB4  20                 	db	32
   451   002FB5  77                 	db	119	;'w'
   452   002FB6  61                 	db	97	;'a'
   453   002FB7  69                 	db	105	;'i'
   454   002FB8  74                 	db	116	;'t'
   455   002FB9  20                 	db	32
   456   002FBA  61                 	db	97	;'a'
   457   002FBB  20                 	db	32
   458   002FBC  73                 	db	115	;'s'
   459   002FBD  65                 	db	101	;'e'
   460   002FBE  63                 	db	99	;'c'
   461   002FBF  2E                 	db	46
   462   002FC0  2E                 	db	46
   463   002FC1  00                 	db	0
   464   002FC2                     STR_25:
   465   002FC2  43                 	db	67	;'C'
   466   002FC3  6C                 	db	108	;'l'
   467   002FC4  65                 	db	101	;'e'
   468   002FC5  61                 	db	97	;'a'
   469   002FC6  72                 	db	114	;'r'
   470   002FC7  69                 	db	105	;'i'
   471   002FC8  6E                 	db	110	;'n'
   472   002FC9  67                 	db	103	;'g'
   473   002FCA  20                 	db	32
   474   002FCB  4C                 	db	76	;'L'
   475   002FCC  6F                 	db	111	;'o'
   476   002FCD  67                 	db	103	;'g'
   477   002FCE  73                 	db	115	;'s'
   478   002FCF  2E                 	db	46
   479   002FD0  2E                 	db	46
   480   002FD1  2E                 	db	46
   481   002FD2  00                 	db	0
   482   002FD3                     STR_23:
   483   002FD3  20                 	db	32
   484   002FD4  20                 	db	32
   485   002FD5  54                 	db	84	;'T'
   486   002FD6  49                 	db	73	;'I'
   487   002FD7  4D                 	db	77	;'M'
   488   002FD8  45                 	db	69	;'E'
   489   002FD9  20                 	db	32
   490   002FDA  20                 	db	32
   491   002FDB  20                 	db	32
   492   002FDC  20                 	db	32
   493   002FDD  45                 	db	69	;'E'
   494   002FDE  56                 	db	86	;'V'
   495   002FDF  20                 	db	32
   496   002FE0  20                 	db	32
   497   002FE1  53                 	db	83	;'S'
   498   002FE2  50                 	db	80	;'P'
   499   002FE3  00                 	db	0
   500   002FE4                     STR_9:
   501   002FE4  43                 	db	67	;'C'
   502   002FE5  20                 	db	32
   503   002FE6  00                 	db	0
   504   002FE7                     STR_4:
   505   002FE7  47                 	db	71	;'G'
   506   002FE8  31                 	db	49	;'1'
   507   002FE9  00                 	db	0
   508   002FEA                     STR_5:
   509   002FEA  47                 	db	71	;'G'
   510   002FEB  32                 	db	50	;'2'
   511   002FEC  00                 	db	0
   512   002FED                     STR_6:
   513   002FED  47                 	db	71	;'G'
   514   002FEE  33                 	db	51	;'3'
   515   002FEF  00                 	db	0
   516   002FF0                     STR_7:
   517   002FF0  47                 	db	71	;'G'
   518   002FF1  34                 	db	52	;'4'
   519   002FF2  00                 	db	0
   520   002FF3                     STR_8:
   521   002FF3  47                 	db	71	;'G'
   522   002FF4  35                 	db	53	;'5'
   523   002FF5  00                 	db	0
   524   002FF6                     STR_2:
   525   002FF6  47                 	db	71	;'G'
   526   002FF7  4E                 	db	78	;'N'
   527   002FF8  00                 	db	0
   528   002FF9                     STR_1:
   529   002FF9  4F                 	db	79	;'O'
   530   002FFA  4E                 	db	78	;'N'
   531   002FFB  00                 	db	0
   532   002FFC                     STR_3:
   533   002FFC  47                 	db	71	;'G'
   534   002FFD  52                 	db	82	;'R'
   535   002FFE  00                 	db	0
   536   002FFF  00                 	db	0	; dummy byte at the end
   537   000000                     
   538                           ; #config settings
   539                           
   540                           	psect	cinit
   541   0013A6                     __pcinit:
   542                           	callstack 0
   543   0013A6                     start_initialization:
   544                           	callstack 0
   545   0013A6                     __initialization:
   546                           	callstack 0
   547                           
   548                           ; Initialize objects allocated to BANK0 (26 bytes)
   549                           ; load TBLPTR registers with __pidataBANK0
   550   0013A6  0E76               	movlw	low __pidataBANK0
   551   0013A8  6EF6               	movwf	tblptrl,c
   552   0013AA  0E11               	movlw	high __pidataBANK0
   553   0013AC  6EF7               	movwf	tblptrh,c
   554   0013AE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   555   0013B0  6EF8               	movwf	tblptru,c
   556   0013B2  EE00  F060         	lfsr	0,__pdataBANK0
   557   0013B6  EE10 F01A          	lfsr	1,26
   558   0013BA                     copy_data0:
   559   0013BA  0009               	tblrd		*+
   560   0013BC  CFF5 FFEE          	movff	tablat,postinc0
   561   0013C0  50E5               	movf	postdec1,w,c
   562   0013C2  50E1               	movf	fsr1l,w,c
   563   0013C4  E1FA               	bnz	copy_data0
   564                           
   565                           ; Initialize objects allocated to COMRAM (1 bytes)
   566                           ; load TBLPTR registers with __pidataCOMRAM
   567   0013C6  0E00               	movlw	low __pidataCOMRAM
   568   0013C8  6EF6               	movwf	tblptrl,c
   569   0013CA  0E30               	movlw	high __pidataCOMRAM
   570   0013CC  6EF7               	movwf	tblptrh,c
   571   0013CE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   572   0013D0  6EF8               	movwf	tblptru,c
   573   0013D2  0009               	tblrd		*+	;fetch initializer
   574   0013D4  CFF5 F05B          	movff	tablat,__pdataCOMRAM
   575                           
   576                           ; Clear objects allocated to BANK1 (150 bytes)
   577   0013D8  EE01  F000         	lfsr	0,__pbssBANK1
   578   0013DC  0E96               	movlw	150
   579   0013DE                     clear_0:
   580   0013DE  6AEE               	clrf	postinc0,c
   581   0013E0  06E8               	decf	wreg,f,c
   582   0013E2  E1FD               	bnz	clear_0
   583                           
   584                           ; Clear objects allocated to COMRAM (54 bytes)
   585   0013E4  EE00  F001         	lfsr	0,__pbssCOMRAM
   586   0013E8  0E36               	movlw	54
   587   0013EA                     clear_1:
   588   0013EA  6AEE               	clrf	postinc0,c
   589   0013EC  06E8               	decf	wreg,f,c
   590   0013EE  E1FD               	bnz	clear_1
   591   0013F0                     end_of_initialization:
   592                           	callstack 0
   593   0013F0                     __end_of__initialization:
   594                           	callstack 0
   595   0013F0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   596   0013F2  6EF8               	movwf	tblptru,c
   597   0013F4  0100               	movlb	0
   598   0013F6  EF64  F010         	goto	_main	;jump to C main() function
   599                           
   600                           	psect	bssCOMRAM
   601   000001                     __pbssCOMRAM:
   602                           	callstack 0
   603   000001                     _delay:
   604                           	callstack 0
   605   000001                     	ds	4
   606   000005                     _speed:
   607                           	callstack 0
   608   000005                     	ds	4
   609   000009                     _clock_reg:
   610                           	callstack 0
   611   000009                     	ds	3
   612   00000C                     view_log@view_flag:
   613                           	callstack 0
   614   00000C                     	ds	2
   615   00000E                     view_log@view_address:
   616                           	callstack 0
   617   00000E                     	ds	2
   618   000010                     	ds	2
   619   000012                     _start_index:
   620                           	callstack 0
   621   000012                     	ds	2
   622   000014                     	ds	2
   623   000016                     _i:
   624                           	callstack 0
   625   000016                     	ds	2
   626   000018                     _menu_cnt:
   627                           	callstack 0
   628   000018                     	ds	2
   629   00001A                     _eeprom_address:
   630                           	callstack 0
   631   00001A                     	ds	2
   632   00001C                     _menu_flag:
   633                           	callstack 0
   634   00001C                     	ds	2
   635   00001E                     _event_count:
   636                           	callstack 0
   637   00001E                     	ds	2
   638   000020                     _count:
   639                           	callstack 0
   640   000020                     	ds	2
   641   000022                     _flag:
   642                           	callstack 0
   643   000022                     	ds	2
   644   000024                     _index:
   645                           	callstack 0
   646   000024                     	ds	2
   647   000026                     _s_flag:
   648                           	callstack 0
   649   000026                     	ds	2
   650   000028                     read_switches@key:
   651                           	callstack 0
   652   000028                     	ds	1
   653   000029                     _secs:
   654                           	callstack 0
   655   000029                     	ds	1
   656   00002A                     _mins:
   657                           	callstack 0
   658   00002A                     	ds	1
   659   00002B                     _hrs:
   660                           	callstack 0
   661   00002B                     	ds	1
   662   00002C                     _feild:
   663                           	callstack 0
   664   00002C                     	ds	1
   665   00002D                     _key:
   666                           	callstack 0
   667   00002D                     	ds	1
   668   00002E                     _time:
   669                           	callstack 0
   670   00002E                     	ds	9
   671                           
   672                           	psect	dataCOMRAM
   673   00005B                     __pdataCOMRAM:
   674                           	callstack 0
   675   00005B                     read_switches@once:
   676                           	callstack 0
   677   00005B                     	ds	1
   678                           
   679                           	psect	dataBANK0
   680   000060                     __pdataBANK0:
   681                           	callstack 0
   682   000060                     _arr:
   683                           	callstack 0
   684   000060                     	ds	18
   685   000072                     _menu:
   686                           	callstack 0
   687   000072                     	ds	8
   688                           
   689                           	psect	bssBANK1
   690   000100                     __pbssBANK1:
   691                           	callstack 0
   692   000100                     _time_v:
   693                           	callstack 0
   694   000100                     	ds	150
   695                           
   696                           	psect	cstackCOMRAM
   697   000037                     __pcstackCOMRAM:
   698                           	callstack 0
   699   000037                     ?_read_adc:
   700                           	callstack 0
   701   000037                     ?___wmul:
   702                           	callstack 0
   703   000037                     ?___awdiv:
   704                           	callstack 0
   705   000037                     ?___awmod:
   706                           	callstack 0
   707   000037                     ?___lmul:
   708                           	callstack 0
   709   000037                     ?___llmod:
   710                           	callstack 0
   711   000037                     clcd_write@control_bit:
   712                           	callstack 0
   713   000037                     read_switches@detection_type:
   714                           	callstack 0
   715   000037                     i2c_write@data:
   716                           	callstack 0
   717   000037                     putch@byte:
   718                           	callstack 0
   719   000037                     ___wmul@multiplier:
   720                           	callstack 0
   721   000037                     ___awdiv@dividend:
   722                           	callstack 0
   723   000037                     ___awmod@dividend:
   724                           	callstack 0
   725   000037                     ___lmul@multiplier:
   726                           	callstack 0
   727   000037                     ___llmod@dividend:
   728                           	callstack 0
   729                           
   730                           ; 4 bytes @ 0x0
   731   000037                     	ds	1
   732   000038                     clcd_write@byte:
   733                           	callstack 0
   734   000038                     read_ds1307@address:
   735                           	callstack 0
   736   000038                     read_external_eeprom@address:
   737                           	callstack 0
   738   000038                     puts@s:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x1
   742   000038                     	ds	1
   743   000039                     ??_init_clcd:
   744   000039                     ??_read_adc:
   745   000039                     read_ds1307@data:
   746                           	callstack 0
   747   000039                     read_external_eeprom@data:
   748                           	callstack 0
   749   000039                     ___wmul@multiplicand:
   750                           	callstack 0
   751   000039                     ___awdiv@divisor:
   752                           	callstack 0
   753   000039                     ___awmod@divisor:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x2
   757   000039                     	ds	1
   758   00003A                     
   759                           ; 1 bytes @ 0x3
   760   00003A                     	ds	1
   761   00003B                     ___awdiv@counter:
   762                           	callstack 0
   763   00003B                     ___awmod@counter:
   764                           	callstack 0
   765   00003B                     read_adc@reg_val:
   766                           	callstack 0
   767   00003B                     ___wmul@product:
   768                           	callstack 0
   769   00003B                     ___lmul@multiplicand:
   770                           	callstack 0
   771   00003B                     ___llmod@divisor:
   772                           	callstack 0
   773                           
   774                           ; 4 bytes @ 0x4
   775   00003B                     	ds	1
   776   00003C                     ___awdiv@sign:
   777                           	callstack 0
   778   00003C                     ___awmod@sign:
   779                           	callstack 0
   780                           
   781                           ; 1 bytes @ 0x5
   782   00003C                     	ds	1
   783   00003D                     read_adc@channel:
   784                           	callstack 0
   785   00003D                     clcd_print@data:
   786                           	callstack 0
   787   00003D                     ___awdiv@quotient:
   788                           	callstack 0
   789                           
   790                           ; 2 bytes @ 0x6
   791   00003D                     	ds	2
   792   00003F                     clcd_print@addr:
   793                           	callstack 0
   794   00003F                     write_ds1307@data:
   795                           	callstack 0
   796   00003F                     ___llmod@counter:
   797                           	callstack 0
   798   00003F                     ___lmul@product:
   799                           	callstack 0
   800                           
   801                           ; 4 bytes @ 0x8
   802   00003F                     	ds	1
   803   000040                     ??_download_logs:
   804   000040                     write_ds1307@address:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0x9
   808   000040                     	ds	1
   809   000041                     init_ds1307@dummy:
   810                           	callstack 0
   811                           
   812                           ; 1 bytes @ 0xA
   813   000041                     	ds	1
   814   000042                     download_logs@j:
   815                           	callstack 0
   816                           
   817                           ; 2 bytes @ 0xB
   818   000042                     	ds	1
   819   000043                     ?___lldiv:
   820                           	callstack 0
   821   000043                     ___lldiv@dividend:
   822                           	callstack 0
   823                           
   824                           ; 4 bytes @ 0xC
   825   000043                     	ds	1
   826   000044                     download_logs@i:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0xD
   830   000044                     	ds	3
   831   000047                     ___lldiv@divisor:
   832                           	callstack 0
   833                           
   834                           ; 4 bytes @ 0x10
   835   000047                     	ds	4
   836   00004B                     ___lldiv@quotient:
   837                           	callstack 0
   838                           
   839                           ; 4 bytes @ 0x14
   840   00004B                     	ds	4
   841   00004F                     ___lldiv@counter:
   842                           	callstack 0
   843                           
   844                           ; 1 bytes @ 0x18
   845   00004F                     	ds	1
   846   000050                     clcd_putch@addr:
   847                           	callstack 0
   848   000050                     write_external_eeprom@data:
   849                           	callstack 0
   850                           
   851                           ; 1 bytes @ 0x19
   852   000050                     	ds	1
   853   000051                     clcd_putch@data:
   854                           	callstack 0
   855   000051                     write_external_eeprom@wait:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x1A
   859   000051                     	ds	1
   860   000052                     ??_view_log:
   861   000052                     ??_set_time:
   862   000052                     display_speed@adc_val:
   863                           	callstack 0
   864                           
   865                           ; 4 bytes @ 0x1B
   866   000052                     	ds	1
   867   000053                     write_external_eeprom@address:
   868                           	callstack 0
   869                           
   870                           ; 1 bytes @ 0x1C
   871   000053                     	ds	1
   872   000054                     ??_log_event:
   873   000054                     clear_logs@addr:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0x1D
   877   000054                     	ds	1
   878   000055                     view_log@entry_index:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x1E
   882   000055                     	ds	1
   883   000056                     log_event@i:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0x1F
   887   000056                     	ds	1
   888   000057                     view_log@i:
   889                           	callstack 0
   890                           
   891                           ; 2 bytes @ 0x20
   892   000057                     	ds	1
   893   000058                     
   894                           ; 1 bytes @ 0x21
   895   000058                     	ds	1
   896   000059                     ??_main:
   897                           
   898                           ; 1 bytes @ 0x22
   899   000059                     	ds	2
   900                           
   901 ;;
   902 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   903 ;;
   904 ;; *************** function _main *****************
   905 ;; Defined at:
   906 ;;		line 357 in file "main.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;		None
   909 ;; Auto vars:     Size  Location     Type
   910 ;;		None
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      void 
   913 ;; Registers used:
   914 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   920 ;;      Params:         0       0       0       0       0       0       0
   921 ;;      Locals:         0       0       0       0       0       0       0
   922 ;;      Temps:          2       0       0       0       0       0       0
   923 ;;      Totals:         2       0       0       0       0       0       0
   924 ;;Total ram usage:        2 bytes
   925 ;; Hardware stack levels required when called: 6
   926 ;; This function calls:
   927 ;;		_check_matrix_keypad
   928 ;;		_clcd_print
   929 ;;		_clcd_write
   930 ;;		_clear_logs
   931 ;;		_display_menu
   932 ;;		_display_speed
   933 ;;		_display_time
   934 ;;		_download_logs
   935 ;;		_get_time
   936 ;;		_init_config
   937 ;;		_read_switches
   938 ;;		_set_time
   939 ;;		_view_log
   940 ;; This function is called by:
   941 ;;		Startup code after reset
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           	psect	text0
   946   0020C8                     __ptext0:
   947                           	callstack 0
   948   0020C8                     _main:
   949                           	callstack 25
   950   0020C8                     
   951                           ;main.c: 358:     init_config();
   952   0020C8  ECAE  F008         	call	_init_config	;wreg free
   953   0020CC                     
   954                           ;main.c: 359:     flag = 0;
   955   0020CC  0E00               	movlw	0
   956   0020CE  6E23               	movwf	(_flag+1)^0,c
   957   0020D0  0E00               	movlw	0
   958   0020D2  6E22               	movwf	_flag^0,c
   959   0020D4                     l2915:
   960                           
   961                           ;main.c: 362:         key = read_switches(1);
   962   0020D4  0E01               	movlw	1
   963   0020D6  EC9A  F00A         	call	_read_switches
   964   0020DA  6E2D               	movwf	_key^0,c
   965   0020DC                     
   966                           ;main.c: 365:         if (flag == 0) {
   967   0020DC  5022               	movf	_flag^0,w,c
   968   0020DE  1023               	iorwf	(_flag+1)^0,w,c
   969   0020E0  A4D8               	btfss	status,2,c
   970   0020E2  EF75  F010         	goto	u2081
   971   0020E6  EF77  F010         	goto	u2080
   972   0020EA                     u2081:
   973   0020EA  EF9B  F010         	goto	l2935
   974   0020EE                     u2080:
   975   0020EE                     
   976                           ;main.c: 366:             clcd_print("  TIME    EV  SP", (0x80 + (0)));
   977   0020EE  0ED3               	movlw	low STR_23
   978   0020F0  6E3D               	movwf	clcd_print@data^0,c
   979   0020F2  0E2F               	movlw	high STR_23
   980   0020F4  6E3E               	movwf	(clcd_print@data+1)^0,c
   981   0020F6  0E80               	movlw	128
   982   0020F8  6E3F               	movwf	clcd_print@addr^0,c
   983   0020FA  EC64  F00A         	call	_clcd_print	;wreg free
   984   0020FE                     
   985                           ;main.c: 367:             check_matrix_keypad();
   986   0020FE  ECA3  F00D         	call	_check_matrix_keypad	;wreg free
   987   002102                     
   988                           ;main.c: 368:             display_speed();
   989   002102  ECB9  F00C         	call	_display_speed	;wreg free
   990   002106                     
   991                           ;main.c: 369:             display_time();
   992   002106  EC79  F008         	call	_display_time	;wreg free
   993   00210A                     
   994                           ;main.c: 370:             get_time();
   995   00210A  ECD5  F00A         	call	_get_time	;wreg free
   996   00210E                     
   997                           ;main.c: 372:             if (key == 11) {
   998   00210E  0E0B               	movlw	11
   999   002110  182D               	xorwf	_key^0,w,c
  1000   002112  A4D8               	btfss	status,2,c
  1001   002114  EF8E  F010         	goto	u2091
  1002   002118  EF90  F010         	goto	u2090
  1003   00211C                     u2091:
  1004   00211C  EF6A  F010         	goto	l2915
  1005   002120                     u2090:
  1006   002120                     
  1007                           ;main.c: 373:                 clcd_write(0x01, 0);
  1008   002120  0E00               	movlw	0
  1009   002122  6E37               	movwf	clcd_write@control_bit^0,c
  1010   002124  0E01               	movlw	1
  1011   002126  EC4F  F009         	call	_clcd_write
  1012   00212A                     
  1013                           ;main.c: 374:                 flag = 1;
  1014   00212A  0E00               	movlw	0
  1015   00212C  6E23               	movwf	(_flag+1)^0,c
  1016   00212E  0E01               	movlw	1
  1017   002130  6E22               	movwf	_flag^0,c
  1018   002132  EF6A  F010         	goto	l2915
  1019   002136                     l2935:
  1020   002136  0422               	decf	_flag^0,w,c
  1021   002138  1023               	iorwf	(_flag+1)^0,w,c
  1022   00213A  A4D8               	btfss	status,2,c
  1023   00213C  EFA2  F010         	goto	u2101
  1024   002140  EFA4  F010         	goto	u2100
  1025   002144                     u2101:
  1026   002144  EF99  F011         	goto	l3007
  1027   002148                     u2100:
  1028   002148                     
  1029                           ;main.c: 379:             display_menu();
  1030   002148  EC2B  F00E         	call	_display_menu	;wreg free
  1031   00214C                     
  1032                           ;main.c: 381:             if (key == 11) {
  1033   00214C  0E0B               	movlw	11
  1034   00214E  182D               	xorwf	_key^0,w,c
  1035   002150  A4D8               	btfss	status,2,c
  1036   002152  EFAD  F010         	goto	u2111
  1037   002156  EFAF  F010         	goto	u2110
  1038   00215A                     u2111:
  1039   00215A  EF7D  F011         	goto	l2997
  1040   00215E                     u2110:
  1041   00215E                     
  1042                           ;main.c: 382:                 if (menu_cnt == 0 && i == 0) {
  1043   00215E  5018               	movf	_menu_cnt^0,w,c
  1044   002160  1019               	iorwf	(_menu_cnt+1)^0,w,c
  1045   002162  A4D8               	btfss	status,2,c
  1046   002164  EFB6  F010         	goto	u2121
  1047   002168  EFB8  F010         	goto	u2120
  1048   00216C                     u2121:
  1049   00216C  EFD8  F010         	goto	l2953
  1050   002170                     u2120:
  1051   002170  5016               	movf	_i^0,w,c
  1052   002172  1017               	iorwf	(_i+1)^0,w,c
  1053   002174  A4D8               	btfss	status,2,c
  1054   002176  EFBF  F010         	goto	u2131
  1055   00217A  EFC1  F010         	goto	u2130
  1056   00217E                     u2131:
  1057   00217E  EFD8  F010         	goto	l2953
  1058   002182                     u2130:
  1059   002182                     
  1060                           ;main.c: 383:                     clcd_write(0x01, 0);
  1061   002182  0E00               	movlw	0
  1062   002184  6E37               	movwf	clcd_write@control_bit^0,c
  1063   002186  0E01               	movlw	1
  1064   002188  EC4F  F009         	call	_clcd_write
  1065   00218C                     
  1066                           ;main.c: 384:                     clcd_print("#   VIEW LOG           ", (0x80 + (0)));
  1067   00218C  0EC9               	movlw	low STR_24
  1068   00218E  6E3D               	movwf	clcd_print@data^0,c
  1069   002190  0E2E               	movlw	high STR_24
  1070   002192  6E3E               	movwf	(clcd_print@data+1)^0,c
  1071   002194  0E80               	movlw	128
  1072   002196  6E3F               	movwf	clcd_print@addr^0,c
  1073   002198  EC64  F00A         	call	_clcd_print	;wreg free
  1074   00219C                     
  1075                           ;main.c: 385:                     flag = 2;
  1076   00219C  0E00               	movlw	0
  1077   00219E  6E23               	movwf	(_flag+1)^0,c
  1078   0021A0  0E02               	movlw	2
  1079   0021A2  6E22               	movwf	_flag^0,c
  1080   0021A4                     
  1081                           ;main.c: 386:                     menu_flag = 1;
  1082   0021A4  0E00               	movlw	0
  1083   0021A6  6E1D               	movwf	(_menu_flag+1)^0,c
  1084   0021A8  0E01               	movlw	1
  1085   0021AA  6E1C               	movwf	_menu_flag^0,c
  1086                           
  1087                           ;main.c: 387:                 }
  1088   0021AC  EF7D  F011         	goto	l2997
  1089   0021B0                     l2953:
  1090   0021B0  5018               	movf	_menu_cnt^0,w,c
  1091   0021B2  1019               	iorwf	(_menu_cnt+1)^0,w,c
  1092   0021B4  A4D8               	btfss	status,2,c
  1093   0021B6  EFDF  F010         	goto	u2141
  1094   0021BA  EFE1  F010         	goto	u2140
  1095   0021BE                     u2141:
  1096   0021BE  EFEA  F010         	goto	l2957
  1097   0021C2                     u2140:
  1098   0021C2  0416               	decf	_i^0,w,c
  1099   0021C4  1017               	iorwf	(_i+1)^0,w,c
  1100   0021C6  B4D8               	btfsc	status,2,c
  1101   0021C8  EFE8  F010         	goto	u2151
  1102   0021CC  EFEA  F010         	goto	u2150
  1103   0021D0                     u2151:
  1104   0021D0  EFFC  F010         	goto	l2961
  1105   0021D4                     u2150:
  1106   0021D4                     l2957:
  1107   0021D4  0418               	decf	_menu_cnt^0,w,c
  1108   0021D6  1019               	iorwf	(_menu_cnt+1)^0,w,c
  1109   0021D8  A4D8               	btfss	status,2,c
  1110   0021DA  EFF1  F010         	goto	u2161
  1111   0021DE  EFF3  F010         	goto	u2160
  1112   0021E2                     u2161:
  1113   0021E2  EF27  F011         	goto	l2973
  1114   0021E6                     u2160:
  1115   0021E6  5016               	movf	_i^0,w,c
  1116   0021E8  1017               	iorwf	(_i+1)^0,w,c
  1117   0021EA  A4D8               	btfss	status,2,c
  1118   0021EC  EFFA  F010         	goto	u2171
  1119   0021F0  EFFC  F010         	goto	u2170
  1120   0021F4                     u2171:
  1121   0021F4  EF27  F011         	goto	l2973
  1122   0021F8                     u2170:
  1123   0021F8                     l2961:
  1124                           
  1125                           ;main.c: 390:                     clcd_write(0x01, 0);
  1126   0021F8  0E00               	movlw	0
  1127   0021FA  6E37               	movwf	clcd_write@control_bit^0,c
  1128   0021FC  0E01               	movlw	1
  1129   0021FE  EC4F  F009         	call	_clcd_write
  1130   002202                     
  1131                           ;main.c: 391:                     clcd_print("Clearing Logs...", (0x80 + (0)));
  1132   002202  0EC2               	movlw	low STR_25
  1133   002204  6E3D               	movwf	clcd_print@data^0,c
  1134   002206  0E2F               	movlw	high STR_25
  1135   002208  6E3E               	movwf	(clcd_print@data+1)^0,c
  1136   00220A  0E80               	movlw	128
  1137   00220C  6E3F               	movwf	clcd_print@addr^0,c
  1138   00220E  EC64  F00A         	call	_clcd_print	;wreg free
  1139   002212                     
  1140                           ;main.c: 392:                     clcd_print("Just wait a sec..", (0xC0 + (0)));
  1141   002212  0EB0               	movlw	low STR_26
  1142   002214  6E3D               	movwf	clcd_print@data^0,c
  1143   002216  0E2F               	movlw	high STR_26
  1144   002218  6E3E               	movwf	(clcd_print@data+1)^0,c
  1145   00221A  0EC0               	movlw	192
  1146   00221C  6E3F               	movwf	clcd_print@addr^0,c
  1147   00221E  EC64  F00A         	call	_clcd_print	;wreg free
  1148   002222                     
  1149                           ;main.c: 393:                     _delay((unsigned long)((1000)*(20000000/4000.0)));
  1150   002222  0E1A               	movlw	26
  1151   002224  6E5A               	movwf	(??_main+1)^0,c
  1152   002226  0E5E               	movlw	94
  1153   002228  6E59               	movwf	??_main^0,c
  1154   00222A  0E6E               	movlw	110
  1155   00222C                     u2377:
  1156   00222C  2EE8               	decfsz	wreg,f,c
  1157   00222E  D7FE               	bra	u2377
  1158   002230  2E59               	decfsz	??_main^0,f,c
  1159   002232  D7FC               	bra	u2377
  1160   002234  2E5A               	decfsz	(??_main+1)^0,f,c
  1161   002236  D7FA               	bra	u2377
  1162   002238  D000               	nop2	
  1163   00223A                     
  1164                           ;main.c: 394:                     flag = 3;
  1165   00223A  0E00               	movlw	0
  1166   00223C  6E23               	movwf	(_flag+1)^0,c
  1167   00223E  0E03               	movlw	3
  1168   002240  6E22               	movwf	_flag^0,c
  1169   002242                     
  1170                           ;main.c: 395:                     menu_flag = 2;
  1171   002242  0E00               	movlw	0
  1172   002244  6E1D               	movwf	(_menu_flag+1)^0,c
  1173   002246  0E02               	movlw	2
  1174   002248  6E1C               	movwf	_menu_flag^0,c
  1175                           
  1176                           ;main.c: 396:                 }
  1177   00224A  EF7D  F011         	goto	l2997
  1178   00224E                     l2973:
  1179   00224E  0418               	decf	_menu_cnt^0,w,c
  1180   002250  1019               	iorwf	(_menu_cnt+1)^0,w,c
  1181   002252  A4D8               	btfss	status,2,c
  1182   002254  EF2E  F011         	goto	u2181
  1183   002258  EF30  F011         	goto	u2180
  1184   00225C                     u2181:
  1185   00225C  EF39  F011         	goto	l2977
  1186   002260                     u2180:
  1187   002260  0416               	decf	_i^0,w,c
  1188   002262  1017               	iorwf	(_i+1)^0,w,c
  1189   002264  B4D8               	btfsc	status,2,c
  1190   002266  EF37  F011         	goto	u2191
  1191   00226A  EF39  F011         	goto	u2190
  1192   00226E                     u2191:
  1193   00226E  EF4C  F011         	goto	l2981
  1194   002272                     u2190:
  1195   002272                     l2977:
  1196   002272  0E02               	movlw	2
  1197   002274  1818               	xorwf	_menu_cnt^0,w,c
  1198   002276  1019               	iorwf	(_menu_cnt+1)^0,w,c
  1199   002278  A4D8               	btfss	status,2,c
  1200   00227A  EF41  F011         	goto	u2201
  1201   00227E  EF43  F011         	goto	u2200
  1202   002282                     u2201:
  1203   002282  EF5B  F011         	goto	l2987
  1204   002286                     u2200:
  1205   002286  5016               	movf	_i^0,w,c
  1206   002288  1017               	iorwf	(_i+1)^0,w,c
  1207   00228A  A4D8               	btfss	status,2,c
  1208   00228C  EF4A  F011         	goto	u2211
  1209   002290  EF4C  F011         	goto	u2210
  1210   002294                     u2211:
  1211   002294  EF5B  F011         	goto	l2987
  1212   002298                     u2210:
  1213   002298                     l2981:
  1214                           
  1215                           ;main.c: 399:                     clcd_write(0x01, 0);
  1216   002298  0E00               	movlw	0
  1217   00229A  6E37               	movwf	clcd_write@control_bit^0,c
  1218   00229C  0E01               	movlw	1
  1219   00229E  EC4F  F009         	call	_clcd_write
  1220   0022A2                     
  1221                           ;main.c: 400:                     flag = 4;
  1222   0022A2  0E00               	movlw	0
  1223   0022A4  6E23               	movwf	(_flag+1)^0,c
  1224   0022A6  0E04               	movlw	4
  1225   0022A8  6E22               	movwf	_flag^0,c
  1226   0022AA                     
  1227                           ;main.c: 401:                     menu_flag = 3;
  1228   0022AA  0E00               	movlw	0
  1229   0022AC  6E1D               	movwf	(_menu_flag+1)^0,c
  1230   0022AE  0E03               	movlw	3
  1231   0022B0  6E1C               	movwf	_menu_flag^0,c
  1232                           
  1233                           ;main.c: 402:                 }
  1234   0022B2  EF7D  F011         	goto	l2997
  1235   0022B6                     l2987:
  1236   0022B6  0E02               	movlw	2
  1237   0022B8  1818               	xorwf	_menu_cnt^0,w,c
  1238   0022BA  1019               	iorwf	(_menu_cnt+1)^0,w,c
  1239   0022BC  A4D8               	btfss	status,2,c
  1240   0022BE  EF63  F011         	goto	u2221
  1241   0022C2  EF65  F011         	goto	u2220
  1242   0022C6                     u2221:
  1243   0022C6  EF7D  F011         	goto	l212
  1244   0022CA                     u2220:
  1245   0022CA  0416               	decf	_i^0,w,c
  1246   0022CC  1017               	iorwf	(_i+1)^0,w,c
  1247   0022CE  A4D8               	btfss	status,2,c
  1248   0022D0  EF6C  F011         	goto	u2231
  1249   0022D4  EF6E  F011         	goto	u2230
  1250   0022D8                     u2231:
  1251   0022D8  EF7D  F011         	goto	l212
  1252   0022DC                     u2230:
  1253   0022DC                     
  1254                           ;main.c: 405:                     clcd_write(0x01, 0);
  1255   0022DC  0E00               	movlw	0
  1256   0022DE  6E37               	movwf	clcd_write@control_bit^0,c
  1257   0022E0  0E01               	movlw	1
  1258   0022E2  EC4F  F009         	call	_clcd_write
  1259   0022E6                     
  1260                           ;main.c: 407:                     flag = 5;
  1261   0022E6  0E00               	movlw	0
  1262   0022E8  6E23               	movwf	(_flag+1)^0,c
  1263   0022EA  0E05               	movlw	5
  1264   0022EC  6E22               	movwf	_flag^0,c
  1265   0022EE                     
  1266                           ;main.c: 408:                     menu_flag = 4;
  1267   0022EE  0E00               	movlw	0
  1268   0022F0  6E1D               	movwf	(_menu_flag+1)^0,c
  1269   0022F2  0E04               	movlw	4
  1270   0022F4  6E1C               	movwf	_menu_flag^0,c
  1271   0022F6  EF7D  F011         	goto	l2997
  1272   0022FA                     l212:
  1273   0022FA                     l2997:
  1274                           
  1275                           ;main.c: 412:             if (key == 12) {
  1276   0022FA  0E0C               	movlw	12
  1277   0022FC  182D               	xorwf	_key^0,w,c
  1278   0022FE  A4D8               	btfss	status,2,c
  1279   002300  EF84  F011         	goto	u2241
  1280   002304  EF86  F011         	goto	u2240
  1281   002308                     u2241:
  1282   002308  EF6A  F010         	goto	l2915
  1283   00230C                     u2240:
  1284   00230C                     
  1285                           ;main.c: 413:                 clcd_write(0x01, 0);
  1286   00230C  0E00               	movlw	0
  1287   00230E  6E37               	movwf	clcd_write@control_bit^0,c
  1288   002310  0E01               	movlw	1
  1289   002312  EC4F  F009         	call	_clcd_write
  1290   002316                     
  1291                           ;main.c: 414:                 flag = 0;
  1292   002316  0E00               	movlw	0
  1293   002318  6E23               	movwf	(_flag+1)^0,c
  1294   00231A  0E00               	movlw	0
  1295   00231C  6E22               	movwf	_flag^0,c
  1296   00231E                     
  1297                           ;main.c: 415:                 menu_cnt = 0;
  1298   00231E  0E00               	movlw	0
  1299   002320  6E19               	movwf	(_menu_cnt+1)^0,c
  1300   002322  0E00               	movlw	0
  1301   002324  6E18               	movwf	_menu_cnt^0,c
  1302   002326                     l3005:
  1303                           
  1304                           ;main.c: 416:                 menu_flag = 0;
  1305   002326  0E00               	movlw	0
  1306   002328  6E1D               	movwf	(_menu_flag+1)^0,c
  1307   00232A  0E00               	movlw	0
  1308   00232C  6E1C               	movwf	_menu_flag^0,c
  1309   00232E  EF6A  F010         	goto	l2915
  1310   002332                     l3007:
  1311   002332  0E02               	movlw	2
  1312   002334  1822               	xorwf	_flag^0,w,c
  1313   002336  1023               	iorwf	(_flag+1)^0,w,c
  1314   002338  A4D8               	btfss	status,2,c
  1315   00233A  EFA1  F011         	goto	u2251
  1316   00233E  EFA3  F011         	goto	u2250
  1317   002342                     u2251:
  1318   002342  EFC6  F011         	goto	l3023
  1319   002346                     u2250:
  1320   002346  041C               	decf	_menu_flag^0,w,c
  1321   002348  101D               	iorwf	(_menu_flag+1)^0,w,c
  1322   00234A  A4D8               	btfss	status,2,c
  1323   00234C  EFAA  F011         	goto	u2261
  1324   002350  EFAC  F011         	goto	u2260
  1325   002354                     u2261:
  1326   002354  EFC6  F011         	goto	l3023
  1327   002358                     u2260:
  1328   002358                     
  1329                           ;main.c: 420:             view_log();
  1330   002358  EC59  F012         	call	_view_log	;wreg free
  1331   00235C                     
  1332                           ;main.c: 422:             if (key == 12) {
  1333   00235C  0E0C               	movlw	12
  1334   00235E  182D               	xorwf	_key^0,w,c
  1335   002360  A4D8               	btfss	status,2,c
  1336   002362  EFB5  F011         	goto	u2271
  1337   002366  EFB7  F011         	goto	u2270
  1338   00236A                     u2271:
  1339   00236A  EF6A  F010         	goto	l2915
  1340   00236E                     u2270:
  1341   00236E                     
  1342                           ;main.c: 423:                 index =0 ;
  1343   00236E  0E00               	movlw	0
  1344   002370  6E25               	movwf	(_index+1)^0,c
  1345   002372  0E00               	movlw	0
  1346   002374  6E24               	movwf	_index^0,c
  1347   002376                     
  1348                           ;main.c: 424:                 clcd_write(0x01, 0);
  1349   002376  0E00               	movlw	0
  1350   002378  6E37               	movwf	clcd_write@control_bit^0,c
  1351   00237A  0E01               	movlw	1
  1352   00237C  EC4F  F009         	call	_clcd_write
  1353   002380                     l3019:
  1354                           
  1355                           ;main.c: 425:                 flag = 1;
  1356   002380  0E00               	movlw	0
  1357   002382  6E23               	movwf	(_flag+1)^0,c
  1358   002384  0E01               	movlw	1
  1359   002386  6E22               	movwf	_flag^0,c
  1360   002388  EF93  F011         	goto	l3005
  1361   00238C                     l3023:
  1362   00238C  0E03               	movlw	3
  1363   00238E  1822               	xorwf	_flag^0,w,c
  1364   002390  1023               	iorwf	(_flag+1)^0,w,c
  1365   002392  A4D8               	btfss	status,2,c
  1366   002394  EFCE  F011         	goto	u2281
  1367   002398  EFD0  F011         	goto	u2280
  1368   00239C                     u2281:
  1369   00239C  EFEC  F011         	goto	l3037
  1370   0023A0                     u2280:
  1371   0023A0  0E02               	movlw	2
  1372   0023A2  181C               	xorwf	_menu_flag^0,w,c
  1373   0023A4  101D               	iorwf	(_menu_flag+1)^0,w,c
  1374   0023A6  A4D8               	btfss	status,2,c
  1375   0023A8  EFD8  F011         	goto	u2291
  1376   0023AC  EFDA  F011         	goto	u2290
  1377   0023B0                     u2291:
  1378   0023B0  EFEC  F011         	goto	l3037
  1379   0023B4                     u2290:
  1380   0023B4                     
  1381                           ;main.c: 430:             clear_logs();
  1382   0023B4  ECFD  F009         	call	_clear_logs	;wreg free
  1383   0023B8                     
  1384                           ;main.c: 432:             if (key == 12) {
  1385   0023B8  0E0C               	movlw	12
  1386   0023BA  182D               	xorwf	_key^0,w,c
  1387   0023BC  A4D8               	btfss	status,2,c
  1388   0023BE  EFE3  F011         	goto	u2301
  1389   0023C2  EFE5  F011         	goto	u2300
  1390   0023C6                     u2301:
  1391   0023C6  EF6A  F010         	goto	l2915
  1392   0023CA                     u2300:
  1393   0023CA                     
  1394                           ;main.c: 433:                 clcd_write(0x01, 0);
  1395   0023CA  0E00               	movlw	0
  1396   0023CC  6E37               	movwf	clcd_write@control_bit^0,c
  1397   0023CE  0E01               	movlw	1
  1398   0023D0  EC4F  F009         	call	_clcd_write
  1399   0023D4  EFC0  F011         	goto	l3019
  1400   0023D8                     l3037:
  1401   0023D8  0E04               	movlw	4
  1402   0023DA  1822               	xorwf	_flag^0,w,c
  1403   0023DC  1023               	iorwf	(_flag+1)^0,w,c
  1404   0023DE  A4D8               	btfss	status,2,c
  1405   0023E0  EFF4  F011         	goto	u2311
  1406   0023E4  EFF6  F011         	goto	u2310
  1407   0023E8                     u2311:
  1408   0023E8  EF04  F012         	goto	l3047
  1409   0023EC                     u2310:
  1410   0023EC  0E03               	movlw	3
  1411   0023EE  181C               	xorwf	_menu_flag^0,w,c
  1412   0023F0  101D               	iorwf	(_menu_flag+1)^0,w,c
  1413   0023F2  A4D8               	btfss	status,2,c
  1414   0023F4  EFFE  F011         	goto	u2321
  1415   0023F8  EF00  F012         	goto	u2320
  1416   0023FC                     u2321:
  1417   0023FC  EF04  F012         	goto	l3047
  1418   002400                     u2320:
  1419   002400                     
  1420                           ;main.c: 439:             download_logs();
  1421   002400  ECC9  F00E         	call	_download_logs	;wreg free
  1422   002404  EFC0  F011         	goto	l3019
  1423   002408                     l3047:
  1424   002408  0E05               	movlw	5
  1425   00240A  1822               	xorwf	_flag^0,w,c
  1426   00240C  1023               	iorwf	(_flag+1)^0,w,c
  1427   00240E  A4D8               	btfss	status,2,c
  1428   002410  EF0C  F012         	goto	u2331
  1429   002414  EF0E  F012         	goto	u2330
  1430   002418                     u2331:
  1431   002418  EF6A  F010         	goto	l2915
  1432   00241C                     u2330:
  1433   00241C  0E04               	movlw	4
  1434   00241E  181C               	xorwf	_menu_flag^0,w,c
  1435   002420  101D               	iorwf	(_menu_flag+1)^0,w,c
  1436   002422  A4D8               	btfss	status,2,c
  1437   002424  EF16  F012         	goto	u2341
  1438   002428  EF18  F012         	goto	u2340
  1439   00242C                     u2341:
  1440   00242C  EF6A  F010         	goto	l2915
  1441   002430                     u2340:
  1442   002430                     
  1443                           ;main.c: 444:             if ( s_flag == 0)
  1444   002430  5026               	movf	_s_flag^0,w,c
  1445   002432  1027               	iorwf	(_s_flag+1)^0,w,c
  1446   002434  A4D8               	btfss	status,2,c
  1447   002436  EF1F  F012         	goto	u2351
  1448   00243A  EF21  F012         	goto	u2350
  1449   00243E                     u2351:
  1450   00243E  EF37  F012         	goto	l3057
  1451   002442                     u2350:
  1452   002442                     
  1453                           ;main.c: 445:             {;main.c: 446:             hrs = ((time[0] - 48 )*10) + (time[
      +                          1] - 48);
  1454   002442  502E               	movf	_time^0,w,c
  1455   002444  0D0A               	mullw	10
  1456   002446  50F3               	movf	243,w,c
  1457   002448  242F               	addwf	(_time+1)^0,w,c
  1458   00244A  0FF0               	addlw	240
  1459   00244C  6E2B               	movwf	_hrs^0,c
  1460                           
  1461                           ;main.c: 447:             mins = ((time[3] - 48 )*10) + (time[4] - 48);
  1462   00244E  5031               	movf	(_time+3)^0,w,c
  1463   002450  0D0A               	mullw	10
  1464   002452  50F3               	movf	243,w,c
  1465   002454  2432               	addwf	(_time+4)^0,w,c
  1466   002456  0FF0               	addlw	240
  1467   002458  6E2A               	movwf	_mins^0,c
  1468                           
  1469                           ;main.c: 448:             secs = ((time[6] - 48 )*10) + (time[7] - 48);
  1470   00245A  5034               	movf	(_time+6)^0,w,c
  1471   00245C  0D0A               	mullw	10
  1472   00245E  50F3               	movf	243,w,c
  1473   002460  2435               	addwf	(_time+7)^0,w,c
  1474   002462  0FF0               	addlw	240
  1475   002464  6E29               	movwf	_secs^0,c
  1476   002466                     
  1477                           ;main.c: 449:             s_flag = 1;
  1478   002466  0E00               	movlw	0
  1479   002468  6E27               	movwf	(_s_flag+1)^0,c
  1480   00246A  0E01               	movlw	1
  1481   00246C  6E26               	movwf	_s_flag^0,c
  1482   00246E                     l3057:
  1483                           
  1484                           ;main.c: 451:             set_time();
  1485   00246E  EC55  F014         	call	_set_time	;wreg free
  1486   002472                     
  1487                           ;main.c: 452:             if (key == 12) {
  1488   002472  0E0C               	movlw	12
  1489   002474  182D               	xorwf	_key^0,w,c
  1490   002476  A4D8               	btfss	status,2,c
  1491   002478  EF40  F012         	goto	u2361
  1492   00247C  EF42  F012         	goto	u2360
  1493   002480                     u2361:
  1494   002480  EF55  F012         	goto	l208
  1495   002484                     u2360:
  1496   002484                     
  1497                           ;main.c: 453:                 clcd_write(0x01, 0);
  1498   002484  0E00               	movlw	0
  1499   002486  6E37               	movwf	clcd_write@control_bit^0,c
  1500   002488  0E01               	movlw	1
  1501   00248A  EC4F  F009         	call	_clcd_write
  1502   00248E                     
  1503                           ;main.c: 454:                 flag = 1;
  1504   00248E  0E00               	movlw	0
  1505   002490  6E23               	movwf	(_flag+1)^0,c
  1506   002492  0E01               	movlw	1
  1507   002494  6E22               	movwf	_flag^0,c
  1508   002496                     
  1509                           ;main.c: 455:                 menu_flag = 0;
  1510   002496  0E00               	movlw	0
  1511   002498  6E1D               	movwf	(_menu_flag+1)^0,c
  1512   00249A  0E00               	movlw	0
  1513   00249C  6E1C               	movwf	_menu_flag^0,c
  1514   00249E                     
  1515                           ;main.c: 456:                 s_flag = 0;
  1516   00249E  0E00               	movlw	0
  1517   0024A0  6E27               	movwf	(_s_flag+1)^0,c
  1518   0024A2  0E00               	movlw	0
  1519   0024A4  6E26               	movwf	_s_flag^0,c
  1520   0024A6  EF6A  F010         	goto	l2915
  1521   0024AA                     l208:
  1522   0024AA  EF6A  F010         	goto	l2915
  1523   0024AE  EF00  F000         	goto	start
  1524   0024B2                     __end_of_main:
  1525                           	callstack 0
  1526                           
  1527 ;; *************** function _view_log *****************
  1528 ;; Defined at:
  1529 ;;		line 172 in file "main.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;		None
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;  entry_index     2   30[COMRAM] int 
  1534 ;;  i               2   32[COMRAM] int 
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      void 
  1537 ;; Registers used:
  1538 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1544 ;;      Params:         0       0       0       0       0       0       0
  1545 ;;      Locals:         4       0       0       0       0       0       0
  1546 ;;      Temps:          3       0       0       0       0       0       0
  1547 ;;      Totals:         7       0       0       0       0       0       0
  1548 ;;Total ram usage:        7 bytes
  1549 ;; Hardware stack levels used: 1
  1550 ;; Hardware stack levels required when called: 4
  1551 ;; This function calls:
  1552 ;;		___awmod
  1553 ;;		___wmul
  1554 ;;		_clcd_print
  1555 ;;		_clcd_putch
  1556 ;;		_clcd_write
  1557 ;;		_read_external_eeprom
  1558 ;; This function is called by:
  1559 ;;		_main
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           	psect	text1
  1564   0024B2                     __ptext1:
  1565                           	callstack 0
  1566   0024B2                     _view_log:
  1567                           	callstack 26
  1568   0024B2                     
  1569                           ;main.c: 174:     static unsigned int view_address = 0x00;;main.c: 176:     static int v
      +                          iew_flag = 0;;main.c: 178:     if (event_count == 0) {
  1570   0024B2  501E               	movf	_event_count^0,w,c
  1571   0024B4  101F               	iorwf	(_event_count+1)^0,w,c
  1572   0024B6  A4D8               	btfss	status,2,c
  1573   0024B8  EF60  F012         	goto	u1821
  1574   0024BC  EF62  F012         	goto	u1820
  1575   0024C0                     u1821:
  1576   0024C0  EF89  F012         	goto	l2677
  1577   0024C4                     u1820:
  1578   0024C4                     
  1579                           ;main.c: 179:         clcd_print("NO LOGS..          ", (0x80 + (0)));
  1580   0024C4  0E63               	movlw	low STR_14
  1581   0024C6  6E3D               	movwf	clcd_print@data^0,c
  1582   0024C8  0E2F               	movlw	high STR_14
  1583   0024CA  6E3E               	movwf	(clcd_print@data+1)^0,c
  1584   0024CC  0E80               	movlw	128
  1585   0024CE  6E3F               	movwf	clcd_print@addr^0,c
  1586   0024D0  EC64  F00A         	call	_clcd_print	;wreg free
  1587                           
  1588                           ;main.c: 180:         clcd_print("  TO DISPLAY :(    ", (0xC0 + (0)));
  1589   0024D4  0E77               	movlw	low STR_15
  1590   0024D6  6E3D               	movwf	clcd_print@data^0,c
  1591   0024D8  0E2F               	movlw	high STR_15
  1592   0024DA  6E3E               	movwf	(clcd_print@data+1)^0,c
  1593   0024DC  0EC0               	movlw	192
  1594   0024DE  6E3F               	movwf	clcd_print@addr^0,c
  1595   0024E0  EC64  F00A         	call	_clcd_print	;wreg free
  1596   0024E4                     
  1597                           ;main.c: 181:         _delay((unsigned long)((1000)*(20000000/4000.0)));
  1598   0024E4  0E1A               	movlw	26
  1599   0024E6  6E53               	movwf	(??_view_log+1)^0,c
  1600   0024E8  0E5E               	movlw	94
  1601   0024EA  6E52               	movwf	??_view_log^0,c
  1602   0024EC  0E6E               	movlw	110
  1603   0024EE                     u2387:
  1604   0024EE  2EE8               	decfsz	wreg,f,c
  1605   0024F0  D7FE               	bra	u2387
  1606   0024F2  2E52               	decfsz	??_view_log^0,f,c
  1607   0024F4  D7FC               	bra	u2387
  1608   0024F6  2E53               	decfsz	(??_view_log+1)^0,f,c
  1609   0024F8  D7FA               	bra	u2387
  1610   0024FA  D000               	nop2	
  1611   0024FC                     
  1612                           ;main.c: 182:         flag = 1;
  1613   0024FC  0E00               	movlw	0
  1614   0024FE  6E23               	movwf	(_flag+1)^0,c
  1615   002500  0E01               	movlw	1
  1616   002502  6E22               	movwf	_flag^0,c
  1617   002504                     
  1618                           ;main.c: 183:         clcd_write(0x01, 0);
  1619   002504  0E00               	movlw	0
  1620   002506  6E37               	movwf	clcd_write@control_bit^0,c
  1621   002508  0E01               	movlw	1
  1622   00250A  EC4F  F009         	call	_clcd_write
  1623                           
  1624                           ;main.c: 184:     }
  1625   00250E  EF00  F014         	goto	l2741
  1626   002512                     l2677:
  1627   002512  500C               	movf	view_log@view_flag^0,w,c
  1628   002514  100D               	iorwf	(view_log@view_flag+1)^0,w,c
  1629   002516  A4D8               	btfss	status,2,c
  1630   002518  EF90  F012         	goto	u1831
  1631   00251C  EF92  F012         	goto	u1830
  1632   002520                     u1831:
  1633   002520  EF00  F014         	goto	l2741
  1634   002524                     u1830:
  1635   002524                     
  1636                           ;main.c: 188:     for (int i = 0; i < event_count; i++) {
  1637   002524  0E00               	movlw	0
  1638   002526  6E58               	movwf	(view_log@i+1)^0,c
  1639   002528  0E00               	movlw	0
  1640   00252A  6E57               	movwf	view_log@i^0,c
  1641   00252C  EFED  F013         	goto	l2737
  1642   002530                     l2681:
  1643                           
  1644                           ;main.c: 189:         int entry_index = (start_index + i) % 10;
  1645   002530  5057               	movf	view_log@i^0,w,c
  1646   002532  2412               	addwf	_start_index^0,w,c
  1647   002534  6E37               	movwf	___awmod@dividend^0,c
  1648   002536  5058               	movf	(view_log@i+1)^0,w,c
  1649   002538  2013               	addwfc	(_start_index+1)^0,w,c
  1650   00253A  6E38               	movwf	(___awmod@dividend+1)^0,c
  1651   00253C  0E00               	movlw	0
  1652   00253E  6E3A               	movwf	(___awmod@divisor+1)^0,c
  1653   002540  0E0A               	movlw	10
  1654   002542  6E39               	movwf	___awmod@divisor^0,c
  1655   002544  ECFF  F00B         	call	___awmod	;wreg free
  1656   002548  C037  F055         	movff	?___awmod,view_log@entry_index
  1657   00254C  C038  F056         	movff	?___awmod+1,view_log@entry_index+1
  1658   002550                     
  1659                           ;main.c: 190:         view_address = entry_index * 10;
  1660   002550  C055  F037         	movff	view_log@entry_index,___wmul@multiplier
  1661   002554  C056  F038         	movff	view_log@entry_index+1,___wmul@multiplier+1
  1662   002558  0E00               	movlw	0
  1663   00255A  6E3A               	movwf	(___wmul@multiplicand+1)^0,c
  1664   00255C  0E0A               	movlw	10
  1665   00255E  6E39               	movwf	___wmul@multiplicand^0,c
  1666   002560  ECF7  F008         	call	___wmul	;wreg free
  1667   002564  C037  F00E         	movff	?___wmul,view_log@view_address
  1668   002568  C038  F00F         	movff	?___wmul+1,view_log@view_address+1
  1669   00256C                     
  1670                           ;main.c: 192:         time_v[i][0] = read_external_eeprom(view_address++);
  1671   00256C  C057  F037         	movff	view_log@i,___wmul@multiplier
  1672   002570  C058  F038         	movff	view_log@i+1,___wmul@multiplier+1
  1673   002574  0E00               	movlw	0
  1674   002576  6E3A               	movwf	(___wmul@multiplicand+1)^0,c
  1675   002578  0E0F               	movlw	15
  1676   00257A  6E39               	movwf	___wmul@multiplicand^0,c
  1677   00257C  ECF7  F008         	call	___wmul	;wreg free
  1678   002580  0E00               	movlw	low _time_v
  1679   002582  2437               	addwf	?___wmul^0,w,c
  1680   002584  6ED9               	movwf	fsr2l,c
  1681   002586  0E01               	movlw	high _time_v
  1682   002588  2038               	addwfc	(?___wmul+1)^0,w,c
  1683   00258A  6EDA               	movwf	fsr2h,c
  1684   00258C  500E               	movf	view_log@view_address^0,w,c
  1685   00258E  EC1F  F009         	call	_read_external_eeprom
  1686   002592  6EDF               	movwf	indf2,c
  1687   002594  4A0E               	infsnz	view_log@view_address^0,f,c
  1688   002596  2A0F               	incf	(view_log@view_address+1)^0,f,c
  1689   002598                     
  1690                           ;main.c: 193:         time_v[i][1] = read_external_eeprom(view_address++);
  1691   002598  C057  F037         	movff	view_log@i,___wmul@multiplier
  1692   00259C  C058  F038         	movff	view_log@i+1,___wmul@multiplier+1
  1693   0025A0  0E00               	movlw	0
  1694   0025A2  6E3A               	movwf	(___wmul@multiplicand+1)^0,c
  1695   0025A4  0E0F               	movlw	15
  1696   0025A6  6E39               	movwf	___wmul@multiplicand^0,c
  1697   0025A8  ECF7  F008         	call	___wmul	;wreg free
  1698   0025AC  0E01               	movlw	low (_time_v+1)
  1699   0025AE  2437               	addwf	?___wmul^0,w,c
  1700   0025B0  6ED9               	movwf	fsr2l,c
  1701   0025B2  0E01               	movlw	high (_time_v+1)
  1702   0025B4  2038               	addwfc	(?___wmul+1)^0,w,c
  1703   0025B6  6EDA               	movwf	fsr2h,c
  1704   0025B8  500E               	movf	view_log@view_address^0,w,c
  1705   0025BA  EC1F  F009         	call	_read_external_eeprom
  1706   0025BE  6EDF               	movwf	indf2,c
  1707   0025C0  4A0E               	infsnz	view_log@view_address^0,f,c
  1708   0025C2  2A0F               	incf	(view_log@view_address+1)^0,f,c
  1709   0025C4                     
  1710                           ;main.c: 194:         time_v[i][2] = ':';
  1711   0025C4  C057  F037         	movff	view_log@i,___wmul@multiplier
  1712   0025C8  C058  F038         	movff	view_log@i+1,___wmul@multiplier+1
  1713   0025CC  0E00               	movlw	0
  1714   0025CE  6E3A               	movwf	(___wmul@multiplicand+1)^0,c
  1715   0025D0  0E0F               	movlw	15
  1716   0025D2  6E39               	movwf	___wmul@multiplicand^0,c
  1717   0025D4  ECF7  F008         	call	___wmul	;wreg free
  1718   0025D8  0E02               	movlw	low (_time_v+2)
  1719   0025DA  2437               	addwf	?___wmul^0,w,c
  1720   0025DC  6ED9               	movwf	fsr2l,c
  1721   0025DE  0E01               	movlw	high (_time_v+2)
  1722   0025E0  2038               	addwfc	(?___wmul+1)^0,w,c
  1723   0025E2  6EDA               	movwf	fsr2h,c
  1724   0025E4  0E3A               	movlw	58
  1725   0025E6  6EDF               	movwf	indf2,c
  1726   0025E8                     
  1727                           ;main.c: 195:         time_v[i][3] = read_external_eeprom(view_address++);
  1728   0025E8  C057  F037         	movff	view_log@i,___wmul@multiplier
  1729   0025EC  C058  F038         	movff	view_log@i+1,___wmul@multiplier+1
  1730   0025F0  0E00               	movlw	0
  1731   0025F2  6E3A               	movwf	(___wmul@multiplicand+1)^0,c
  1732   0025F4  0E0F               	movlw	15
  1733   0025F6  6E39               	movwf	___wmul@multiplicand^0,c
  1734   0025F8  ECF7  F008         	call	___wmul	;wreg free
  1735   0025FC  0E03               	movlw	low (_time_v+3)
  1736   0025FE  2437               	addwf	?___wmul^0,w,c
  1737   002600  6ED9               	movwf	fsr2l,c
  1738   002602  0E01               	movlw	high (_time_v+3)
  1739   002604  2038               	addwfc	(?___wmul+1)^0,w,c
  1740   002606  6EDA               	movwf	fsr2h,c
  1741   002608  500E               	movf	view_log@view_address^0,w,c
  1742   00260A  EC1F  F009         	call	_read_external_eeprom
  1743   00260E  6EDF               	movwf	indf2,c
  1744   002610  4A0E               	infsnz	view_log@view_address^0,f,c
  1745   002612  2A0F               	incf	(view_log@view_address+1)^0,f,c
  1746   002614                     
  1747                           ;main.c: 196:         time_v[i][4] = read_external_eeprom(view_address++);
  1748   002614  C057  F037         	movff	view_log@i,___wmul@multiplier
  1749   002618  C058  F038         	movff	view_log@i+1,___wmul@multiplier+1
  1750   00261C  0E00               	movlw	0
  1751   00261E  6E3A               	movwf	(___wmul@multiplicand+1)^0,c
  1752   002620  0E0F               	movlw	15
  1753   002622  6E39               	movwf	___wmul@multiplicand^0,c
  1754   002624  ECF7  F008         	call	___wmul	;wreg free
  1755   002628  0E04               	movlw	low (_time_v+4)
  1756   00262A  2437               	addwf	?___wmul^0,w,c
  1757   00262C  6ED9               	movwf	fsr2l,c
  1758   00262E  0E01               	movlw	high (_time_v+4)
  1759   002630  2038               	addwfc	(?___wmul+1)^0,w,c
  1760   002632  6EDA               	movwf	fsr2h,c
  1761   002634  500E               	movf	view_log@view_address^0,w,c
  1762   002636  EC1F  F009         	call	_read_external_eeprom
  1763   00263A  6EDF               	movwf	indf2,c
  1764   00263C  4A0E               	infsnz	view_log@view_address^0,f,c
  1765   00263E  2A0F               	incf	(view_log@view_address+1)^0,f,c
  1766   002640                     
  1767                           ;main.c: 197:         time_v[i][5] = ':';
  1768   002640  C057  F037         	movff	view_log@i,___wmul@multiplier
  1769   002644  C058  F038         	movff	view_log@i+1,___wmul@multiplier+1
  1770   002648  0E00               	movlw	0
  1771   00264A  6E3A               	movwf	(___wmul@multiplicand+1)^0,c
  1772   00264C  0E0F               	movlw	15
  1773   00264E  6E39               	movwf	___wmul@multiplicand^0,c
  1774   002650  ECF7  F008         	call	___wmul	;wreg free
  1775   002654  0E05               	movlw	low (_time_v+5)
  1776   002656  2437               	addwf	?___wmul^0,w,c
  1777   002658  6ED9               	movwf	fsr2l,c
  1778   00265A  0E01               	movlw	high (_time_v+5)
  1779   00265C  2038               	addwfc	(?___wmul+1)^0,w,c
  1780   00265E  6EDA               	movwf	fsr2h,c
  1781   002660  0E3A               	movlw	58
  1782   002662  6EDF               	movwf	indf2,c
  1783   002664                     
  1784                           ;main.c: 198:         time_v[i][6] = read_external_eeprom(view_address++);
  1785   002664  C057  F037         	movff	view_log@i,___wmul@multiplier
  1786   002668  C058  F038         	movff	view_log@i+1,___wmul@multiplier+1
  1787   00266C  0E00               	movlw	0
  1788   00266E  6E3A               	movwf	(___wmul@multiplicand+1)^0,c
  1789   002670  0E0F               	movlw	15
  1790   002672  6E39               	movwf	___wmul@multiplicand^0,c
  1791   002674  ECF7  F008         	call	___wmul	;wreg free
  1792   002678  0E06               	movlw	low (_time_v+6)
  1793   00267A  2437               	addwf	?___wmul^0,w,c
  1794   00267C  6ED9               	movwf	fsr2l,c
  1795   00267E  0E01               	movlw	high (_time_v+6)
  1796   002680  2038               	addwfc	(?___wmul+1)^0,w,c
  1797   002682  6EDA               	movwf	fsr2h,c
  1798   002684  500E               	movf	view_log@view_address^0,w,c
  1799   002686  EC1F  F009         	call	_read_external_eeprom
  1800   00268A  6EDF               	movwf	indf2,c
  1801   00268C  4A0E               	infsnz	view_log@view_address^0,f,c
  1802   00268E  2A0F               	incf	(view_log@view_address+1)^0,f,c
  1803   002690                     
  1804                           ;main.c: 199:         time_v[i][7] = read_external_eeprom(view_address++);
  1805   002690  C057  F037         	movff	view_log@i,___wmul@multiplier
  1806   002694  C058  F038         	movff	view_log@i+1,___wmul@multiplier+1
  1807   002698  0E00               	movlw	0
  1808   00269A  6E3A               	movwf	(___wmul@multiplicand+1)^0,c
  1809   00269C  0E0F               	movlw	15
  1810   00269E  6E39               	movwf	___wmul@multiplicand^0,c
  1811   0026A0  ECF7  F008         	call	___wmul	;wreg free
  1812   0026A4  0E07               	movlw	low (_time_v+7)
  1813   0026A6  2437               	addwf	?___wmul^0,w,c
  1814   0026A8  6ED9               	movwf	fsr2l,c
  1815   0026AA  0E01               	movlw	high (_time_v+7)
  1816   0026AC  2038               	addwfc	(?___wmul+1)^0,w,c
  1817   0026AE  6EDA               	movwf	fsr2h,c
  1818   0026B0  500E               	movf	view_log@view_address^0,w,c
  1819   0026B2  EC1F  F009         	call	_read_external_eeprom
  1820   0026B6  6EDF               	movwf	indf2,c
  1821   0026B8  4A0E               	infsnz	view_log@view_address^0,f,c
  1822   0026BA  2A0F               	incf	(view_log@view_address+1)^0,f,c
  1823   0026BC                     
  1824                           ;main.c: 200:         time_v[i][8] = ' ';
  1825   0026BC  C057  F037         	movff	view_log@i,___wmul@multiplier
  1826   0026C0  C058  F038         	movff	view_log@i+1,___wmul@multiplier+1
  1827   0026C4  0E00               	movlw	0
  1828   0026C6  6E3A               	movwf	(___wmul@multiplicand+1)^0,c
  1829   0026C8  0E0F               	movlw	15
  1830   0026CA  6E39               	movwf	___wmul@multiplicand^0,c
  1831   0026CC  ECF7  F008         	call	___wmul	;wreg free
  1832   0026D0  0E08               	movlw	low (_time_v+8)
  1833   0026D2  2437               	addwf	?___wmul^0,w,c
  1834   0026D4  6ED9               	movwf	fsr2l,c
  1835   0026D6  0E01               	movlw	high (_time_v+8)
  1836   0026D8  2038               	addwfc	(?___wmul+1)^0,w,c
  1837   0026DA  6EDA               	movwf	fsr2h,c
  1838   0026DC  0E20               	movlw	32
  1839   0026DE  6EDF               	movwf	indf2,c
  1840   0026E0                     
  1841                           ;main.c: 201:         time_v[i][9] = read_external_eeprom(view_address++);
  1842   0026E0  C057  F037         	movff	view_log@i,___wmul@multiplier
  1843   0026E4  C058  F038         	movff	view_log@i+1,___wmul@multiplier+1
  1844   0026E8  0E00               	movlw	0
  1845   0026EA  6E3A               	movwf	(___wmul@multiplicand+1)^0,c
  1846   0026EC  0E0F               	movlw	15
  1847   0026EE  6E39               	movwf	___wmul@multiplicand^0,c
  1848   0026F0  ECF7  F008         	call	___wmul	;wreg free
  1849   0026F4  0E09               	movlw	low (_time_v+9)
  1850   0026F6  2437               	addwf	?___wmul^0,w,c
  1851   0026F8  6ED9               	movwf	fsr2l,c
  1852   0026FA  0E01               	movlw	high (_time_v+9)
  1853   0026FC  2038               	addwfc	(?___wmul+1)^0,w,c
  1854   0026FE  6EDA               	movwf	fsr2h,c
  1855   002700  500E               	movf	view_log@view_address^0,w,c
  1856   002702  EC1F  F009         	call	_read_external_eeprom
  1857   002706  6EDF               	movwf	indf2,c
  1858   002708  4A0E               	infsnz	view_log@view_address^0,f,c
  1859   00270A  2A0F               	incf	(view_log@view_address+1)^0,f,c
  1860   00270C                     
  1861                           ;main.c: 202:         time_v[i][10] = read_external_eeprom(view_address++);
  1862   00270C  C057  F037         	movff	view_log@i,___wmul@multiplier
  1863   002710  C058  F038         	movff	view_log@i+1,___wmul@multiplier+1
  1864   002714  0E00               	movlw	0
  1865   002716  6E3A               	movwf	(___wmul@multiplicand+1)^0,c
  1866   002718  0E0F               	movlw	15
  1867   00271A  6E39               	movwf	___wmul@multiplicand^0,c
  1868   00271C  ECF7  F008         	call	___wmul	;wreg free
  1869   002720  0E0A               	movlw	low (_time_v+10)
  1870   002722  2437               	addwf	?___wmul^0,w,c
  1871   002724  6ED9               	movwf	fsr2l,c
  1872   002726  0E01               	movlw	high (_time_v+10)
  1873   002728  2038               	addwfc	(?___wmul+1)^0,w,c
  1874   00272A  6EDA               	movwf	fsr2h,c
  1875   00272C  500E               	movf	view_log@view_address^0,w,c
  1876   00272E  EC1F  F009         	call	_read_external_eeprom
  1877   002732  6EDF               	movwf	indf2,c
  1878   002734  4A0E               	infsnz	view_log@view_address^0,f,c
  1879   002736  2A0F               	incf	(view_log@view_address+1)^0,f,c
  1880   002738                     
  1881                           ;main.c: 203:         time_v[i][11] = ' ';
  1882   002738  C057  F037         	movff	view_log@i,___wmul@multiplier
  1883   00273C  C058  F038         	movff	view_log@i+1,___wmul@multiplier+1
  1884   002740  0E00               	movlw	0
  1885   002742  6E3A               	movwf	(___wmul@multiplicand+1)^0,c
  1886   002744  0E0F               	movlw	15
  1887   002746  6E39               	movwf	___wmul@multiplicand^0,c
  1888   002748  ECF7  F008         	call	___wmul	;wreg free
  1889   00274C  0E0B               	movlw	low (_time_v+11)
  1890   00274E  2437               	addwf	?___wmul^0,w,c
  1891   002750  6ED9               	movwf	fsr2l,c
  1892   002752  0E01               	movlw	high (_time_v+11)
  1893   002754  2038               	addwfc	(?___wmul+1)^0,w,c
  1894   002756  6EDA               	movwf	fsr2h,c
  1895   002758  0E20               	movlw	32
  1896   00275A  6EDF               	movwf	indf2,c
  1897   00275C                     
  1898                           ;main.c: 204:         time_v[i][12] = read_external_eeprom(view_address++);
  1899   00275C  C057  F037         	movff	view_log@i,___wmul@multiplier
  1900   002760  C058  F038         	movff	view_log@i+1,___wmul@multiplier+1
  1901   002764  0E00               	movlw	0
  1902   002766  6E3A               	movwf	(___wmul@multiplicand+1)^0,c
  1903   002768  0E0F               	movlw	15
  1904   00276A  6E39               	movwf	___wmul@multiplicand^0,c
  1905   00276C  ECF7  F008         	call	___wmul	;wreg free
  1906   002770  0E0C               	movlw	low (_time_v+12)
  1907   002772  2437               	addwf	?___wmul^0,w,c
  1908   002774  6ED9               	movwf	fsr2l,c
  1909   002776  0E01               	movlw	high (_time_v+12)
  1910   002778  2038               	addwfc	(?___wmul+1)^0,w,c
  1911   00277A  6EDA               	movwf	fsr2h,c
  1912   00277C  500E               	movf	view_log@view_address^0,w,c
  1913   00277E  EC1F  F009         	call	_read_external_eeprom
  1914   002782  6EDF               	movwf	indf2,c
  1915   002784  4A0E               	infsnz	view_log@view_address^0,f,c
  1916   002786  2A0F               	incf	(view_log@view_address+1)^0,f,c
  1917   002788                     
  1918                           ;main.c: 205:         time_v[i][13] = read_external_eeprom(view_address++);
  1919   002788  C057  F037         	movff	view_log@i,___wmul@multiplier
  1920   00278C  C058  F038         	movff	view_log@i+1,___wmul@multiplier+1
  1921   002790  0E00               	movlw	0
  1922   002792  6E3A               	movwf	(___wmul@multiplicand+1)^0,c
  1923   002794  0E0F               	movlw	15
  1924   002796  6E39               	movwf	___wmul@multiplicand^0,c
  1925   002798  ECF7  F008         	call	___wmul	;wreg free
  1926   00279C  0E0D               	movlw	low (_time_v+13)
  1927   00279E  2437               	addwf	?___wmul^0,w,c
  1928   0027A0  6ED9               	movwf	fsr2l,c
  1929   0027A2  0E01               	movlw	high (_time_v+13)
  1930   0027A4  2038               	addwfc	(?___wmul+1)^0,w,c
  1931   0027A6  6EDA               	movwf	fsr2h,c
  1932   0027A8  500E               	movf	view_log@view_address^0,w,c
  1933   0027AA  EC1F  F009         	call	_read_external_eeprom
  1934   0027AE  6EDF               	movwf	indf2,c
  1935   0027B0  4A0E               	infsnz	view_log@view_address^0,f,c
  1936   0027B2  2A0F               	incf	(view_log@view_address+1)^0,f,c
  1937   0027B4                     
  1938                           ;main.c: 206:         time_v[i][14] = '\0';
  1939   0027B4  C057  F037         	movff	view_log@i,___wmul@multiplier
  1940   0027B8  C058  F038         	movff	view_log@i+1,___wmul@multiplier+1
  1941   0027BC  0E00               	movlw	0
  1942   0027BE  6E3A               	movwf	(___wmul@multiplicand+1)^0,c
  1943   0027C0  0E0F               	movlw	15
  1944   0027C2  6E39               	movwf	___wmul@multiplicand^0,c
  1945   0027C4  ECF7  F008         	call	___wmul	;wreg free
  1946   0027C8  0E0E               	movlw	low (_time_v+14)
  1947   0027CA  2437               	addwf	?___wmul^0,w,c
  1948   0027CC  6ED9               	movwf	fsr2l,c
  1949   0027CE  0E01               	movlw	high (_time_v+14)
  1950   0027D0  2038               	addwfc	(?___wmul+1)^0,w,c
  1951   0027D2  6EDA               	movwf	fsr2h,c
  1952   0027D4  6ADF               	clrf	indf2,c
  1953   0027D6                     
  1954                           ;main.c: 207:     }
  1955   0027D6  4A57               	infsnz	view_log@i^0,f,c
  1956   0027D8  2A58               	incf	(view_log@i+1)^0,f,c
  1957   0027DA                     l2737:
  1958   0027DA  501E               	movf	_event_count^0,w,c
  1959   0027DC  5C57               	subwf	view_log@i^0,w,c
  1960   0027DE  5058               	movf	(view_log@i+1)^0,w,c
  1961   0027E0  0A80               	xorlw	128
  1962   0027E2  6E52               	movwf	??_view_log^0,c
  1963   0027E4  501F               	movf	(_event_count+1)^0,w,c
  1964   0027E6  0A80               	xorlw	128
  1965   0027E8  5852               	subwfb	??_view_log^0,w,c
  1966   0027EA  A0D8               	btfss	status,0,c
  1967   0027EC  EFFA  F013         	goto	u1841
  1968   0027F0  EFFC  F013         	goto	u1840
  1969   0027F4                     u1841:
  1970   0027F4  EF98  F012         	goto	l2681
  1971   0027F8                     u1840:
  1972   0027F8                     
  1973                           ;main.c: 208:     view_flag = 1;
  1974   0027F8  0E00               	movlw	0
  1975   0027FA  6E0D               	movwf	(view_log@view_flag+1)^0,c
  1976   0027FC  0E01               	movlw	1
  1977   0027FE  6E0C               	movwf	view_log@view_flag^0,c
  1978   002800                     l2741:
  1979                           
  1980                           ;main.c: 212:     if (key == 2 && index < event_count - 1) {
  1981   002800  0E02               	movlw	2
  1982   002802  182D               	xorwf	_key^0,w,c
  1983   002804  A4D8               	btfss	status,2,c
  1984   002806  EF07  F014         	goto	u1851
  1985   00280A  EF09  F014         	goto	u1850
  1986   00280E                     u1851:
  1987   00280E  EF22  F014         	goto	l2747
  1988   002812                     u1850:
  1989   002812  0EFF               	movlw	255
  1990   002814  241E               	addwf	_event_count^0,w,c
  1991   002816  6E52               	movwf	??_view_log^0,c
  1992   002818  0EFF               	movlw	255
  1993   00281A  201F               	addwfc	(_event_count+1)^0,w,c
  1994   00281C  6E53               	movwf	(??_view_log+1)^0,c
  1995   00281E  5052               	movf	??_view_log^0,w,c
  1996   002820  5C24               	subwf	_index^0,w,c
  1997   002822  5025               	movf	(_index+1)^0,w,c
  1998   002824  0A80               	xorlw	128
  1999   002826  6E54               	movwf	(??_view_log+2)^0,c
  2000   002828  5053               	movf	(??_view_log+1)^0,w,c
  2001   00282A  0A80               	xorlw	128
  2002   00282C  5854               	subwfb	(??_view_log+2)^0,w,c
  2003   00282E  B0D8               	btfsc	status,0,c
  2004   002830  EF1C  F014         	goto	u1861
  2005   002834  EF1E  F014         	goto	u1860
  2006   002838                     u1861:
  2007   002838  EF22  F014         	goto	l2747
  2008   00283C                     u1860:
  2009   00283C                     
  2010                           ;main.c: 213:         index++;
  2011   00283C  4A24               	infsnz	_index^0,f,c
  2012   00283E  2A25               	incf	(_index+1)^0,f,c
  2013                           
  2014                           ;main.c: 214:     } else if (key == 1 && index > 0) {
  2015   002840  EF3A  F014         	goto	l2753
  2016   002844                     l2747:
  2017   002844  042D               	decf	_key^0,w,c
  2018   002846  A4D8               	btfss	status,2,c
  2019   002848  EF28  F014         	goto	u1871
  2020   00284C  EF2A  F014         	goto	u1870
  2021   002850                     u1871:
  2022   002850  EF3A  F014         	goto	l2753
  2023   002854                     u1870:
  2024   002854  BE25               	btfsc	(_index+1)^0,7,c
  2025   002856  EF35  F014         	goto	u1881
  2026   00285A  5025               	movf	(_index+1)^0,w,c
  2027   00285C  E108               	bnz	u1880
  2028   00285E  0424               	decf	_index^0,w,c
  2029   002860  A0D8               	btfss	status,0,c
  2030   002862  EF35  F014         	goto	u1881
  2031   002866  EF37  F014         	goto	u1880
  2032   00286A                     u1881:
  2033   00286A  EF3A  F014         	goto	l2753
  2034   00286E                     u1880:
  2035   00286E                     
  2036                           ;main.c: 215:         index--;
  2037   00286E  0624               	decf	_index^0,f,c
  2038   002870  A0D8               	btfss	status,0,c
  2039   002872  0625               	decf	(_index+1)^0,f,c
  2040   002874                     l2753:
  2041                           
  2042                           ;main.c: 218:     clcd_print(time_v[index], (0xC0 + (2)));
  2043   002874  C024  F037         	movff	_index,___wmul@multiplier
  2044   002878  C025  F038         	movff	_index+1,___wmul@multiplier+1
  2045   00287C  0E00               	movlw	0
  2046   00287E  6E3A               	movwf	(___wmul@multiplicand+1)^0,c
  2047   002880  0E0F               	movlw	15
  2048   002882  6E39               	movwf	___wmul@multiplicand^0,c
  2049   002884  ECF7  F008         	call	___wmul	;wreg free
  2050   002888  0E00               	movlw	low _time_v
  2051   00288A  2437               	addwf	?___wmul^0,w,c
  2052   00288C  6E3D               	movwf	clcd_print@data^0,c
  2053   00288E  0E01               	movlw	high _time_v
  2054   002890  2038               	addwfc	(?___wmul+1)^0,w,c
  2055   002892  6E3E               	movwf	(clcd_print@data+1)^0,c
  2056   002894  0EC2               	movlw	194
  2057   002896  6E3F               	movwf	clcd_print@addr^0,c
  2058   002898  EC64  F00A         	call	_clcd_print	;wreg free
  2059   00289C                     
  2060                           ;main.c: 219:     clcd_putch(index + 48,(0xC0 + (0)));
  2061   00289C  0EC0               	movlw	192
  2062   00289E  6E50               	movwf	clcd_putch@addr^0,c
  2063   0028A0  5024               	movf	_index^0,w,c
  2064   0028A2  0F30               	addlw	48
  2065   0028A4  EC96  F008         	call	_clcd_putch
  2066   0028A8  0012               	return		;funcret
  2067   0028AA                     __end_of_view_log:
  2068                           	callstack 0
  2069                           
  2070 ;; *************** function _read_external_eeprom *****************
  2071 ;; Defined at:
  2072 ;;		line 24 in file "external_eeprom.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;  address         1    wreg     unsigned char 
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;  address         1    1[COMRAM] unsigned char 
  2077 ;;  data            1    2[COMRAM] unsigned char 
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  1    wreg      unsigned char 
  2080 ;; Registers used:
  2081 ;;		wreg, status,2, cstack
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2087 ;;      Params:         0       0       0       0       0       0       0
  2088 ;;      Locals:         2       0       0       0       0       0       0
  2089 ;;      Temps:          0       0       0       0       0       0       0
  2090 ;;      Totals:         2       0       0       0       0       0       0
  2091 ;;Total ram usage:        2 bytes
  2092 ;; Hardware stack levels used: 1
  2093 ;; Hardware stack levels required when called: 3
  2094 ;; This function calls:
  2095 ;;		_i2c_read
  2096 ;;		_i2c_rep_start
  2097 ;;		_i2c_start
  2098 ;;		_i2c_stop
  2099 ;;		_i2c_write
  2100 ;; This function is called by:
  2101 ;;		_view_log
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           	psect	text2
  2106   00123E                     __ptext2:
  2107                           	callstack 0
  2108   00123E                     _read_external_eeprom:
  2109                           	callstack 26
  2110                           
  2111                           ;incstack = 0
  2112                           ;read_external_eeprom@address stored from wreg
  2113   00123E  6E38               	movwf	read_external_eeprom@address^0,c
  2114   001240                     
  2115                           ;external_eeprom.c: 24: unsigned char read_external_eeprom(unsigned char address);extern
      +                          al_eeprom.c: 25: {;external_eeprom.c: 26:     unsigned char data;;external_eeprom.c: 28:
      +                               i2c_start();
  2116   001240  EC54  F008         	call	_i2c_start	;wreg free
  2117   001244                     
  2118                           ;external_eeprom.c: 29:     i2c_write(0xA0);
  2119   001244  0EA0               	movlw	160
  2120   001246  EC64  F008         	call	_i2c_write
  2121   00124A                     
  2122                           ;external_eeprom.c: 30:     i2c_write(address);
  2123   00124A  5038               	movf	read_external_eeprom@address^0,w,c
  2124   00124C  EC64  F008         	call	_i2c_write
  2125   001250                     
  2126                           ;external_eeprom.c: 31:     i2c_rep_start();
  2127   001250  EC60  F008         	call	_i2c_rep_start	;wreg free
  2128   001254                     
  2129                           ;external_eeprom.c: 32:     i2c_write(0xA1);
  2130   001254  0EA1               	movlw	161
  2131   001256  EC64  F008         	call	_i2c_write
  2132                           
  2133                           ;external_eeprom.c: 33:     data = i2c_read();
  2134   00125A  EC6A  F008         	call	_i2c_read	;wreg free
  2135   00125E  6E39               	movwf	read_external_eeprom@data^0,c
  2136   001260                     
  2137                           ;external_eeprom.c: 34:     i2c_stop();
  2138   001260  EC58  F008         	call	_i2c_stop	;wreg free
  2139                           
  2140                           ;external_eeprom.c: 36:     return data;
  2141   001264  5039               	movf	read_external_eeprom@data^0,w,c
  2142   001266  0012               	return		;funcret
  2143   001268                     __end_of_read_external_eeprom:
  2144                           	callstack 0
  2145                           
  2146 ;; *************** function _set_time *****************
  2147 ;; Defined at:
  2148 ;;		line 268 in file "main.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;		None
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;		None
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  1    wreg      void 
  2155 ;; Registers used:
  2156 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2162 ;;      Params:         0       0       0       0       0       0       0
  2163 ;;      Locals:         0       0       0       0       0       0       0
  2164 ;;      Temps:          4       0       0       0       0       0       0
  2165 ;;      Totals:         4       0       0       0       0       0       0
  2166 ;;Total ram usage:        4 bytes
  2167 ;; Hardware stack levels used: 1
  2168 ;; Hardware stack levels required when called: 5
  2169 ;; This function calls:
  2170 ;;		___awdiv
  2171 ;;		___awmod
  2172 ;;		_clcd_print
  2173 ;;		_clcd_putch
  2174 ;;		_get_time
  2175 ;;		_write_ds1307
  2176 ;; This function is called by:
  2177 ;;		_main
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           	psect	text3
  2182   0028AA                     __ptext3:
  2183                           	callstack 0
  2184   0028AA                     _set_time:
  2185                           	callstack 25
  2186   0028AA                     
  2187                           ;main.c: 270:     clcd_print("HH:MM:SS              ", (0x80 + (0)));
  2188   0028AA  0EE1               	movlw	low STR_22
  2189   0028AC  6E3D               	movwf	clcd_print@data^0,c
  2190   0028AE  0E2E               	movlw	high STR_22
  2191   0028B0  6E3E               	movwf	(clcd_print@data+1)^0,c
  2192   0028B2  0E80               	movlw	128
  2193   0028B4  6E3F               	movwf	clcd_print@addr^0,c
  2194   0028B6  EC64  F00A         	call	_clcd_print	;wreg free
  2195   0028BA                     
  2196                           ;main.c: 271:     if(feild == 0) {
  2197   0028BA  502C               	movf	_feild^0,w,c
  2198   0028BC  A4D8               	btfss	status,2,c
  2199   0028BE  EF63  F014         	goto	u1931
  2200   0028C2  EF65  F014         	goto	u1930
  2201   0028C6                     u1931:
  2202   0028C6  EF15  F015         	goto	l2837
  2203   0028CA                     u1930:
  2204   0028CA                     
  2205                           ;main.c: 272:         if (delay++ < 500){
  2206   0028CA  C001  F052         	movff	_delay,??_set_time
  2207   0028CE  C002  F053         	movff	_delay+1,??_set_time+1
  2208   0028D2  C003  F054         	movff	_delay+2,??_set_time+2
  2209   0028D6  C004  F055         	movff	_delay+3,??_set_time+3
  2210   0028DA  2A01               	incf	_delay^0,f,c
  2211   0028DC  0E00               	movlw	0
  2212   0028DE  2202               	addwfc	(_delay+1)^0,f,c
  2213   0028E0  2203               	addwfc	(_delay+2)^0,f,c
  2214   0028E2  2204               	addwfc	(_delay+3)^0,f,c
  2215   0028E4  5055               	movf	(??_set_time+3)^0,w,c
  2216   0028E6  1054               	iorwf	(??_set_time+2)^0,w,c
  2217   0028E8  E109               	bnz	u1941
  2218   0028EA  0EF4               	movlw	244
  2219   0028EC  5C52               	subwf	??_set_time^0,w,c
  2220   0028EE  0E01               	movlw	1
  2221   0028F0  5853               	subwfb	(??_set_time+1)^0,w,c
  2222   0028F2  B0D8               	btfsc	status,0,c
  2223   0028F4  EF7E  F014         	goto	u1941
  2224   0028F8  EF80  F014         	goto	u1940
  2225   0028FC                     u1941:
  2226   0028FC  EFE6  F014         	goto	l2831
  2227   002900                     u1940:
  2228   002900                     
  2229                           ;main.c: 273:         clcd_putch((hrs / 10)+'0', (0xC0 + (0)));
  2230   002900  0EC0               	movlw	192
  2231   002902  6E50               	movwf	clcd_putch@addr^0,c
  2232   002904  C02B  F037         	movff	_hrs,___awdiv@dividend
  2233   002908  6A38               	clrf	(___awdiv@dividend+1)^0,c
  2234   00290A  0E00               	movlw	0
  2235   00290C  6E3A               	movwf	(___awdiv@divisor+1)^0,c
  2236   00290E  0E0A               	movlw	10
  2237   002910  6E39               	movwf	___awdiv@divisor^0,c
  2238   002912  EC57  F00C         	call	___awdiv	;wreg free
  2239   002916  5037               	movf	?___awdiv^0,w,c
  2240   002918  0F30               	addlw	48
  2241   00291A  EC96  F008         	call	_clcd_putch
  2242                           
  2243                           ;main.c: 274:         clcd_putch((hrs % 10)+'0', (0xC0 + (1)));
  2244   00291E  0EC1               	movlw	193
  2245   002920  6E50               	movwf	clcd_putch@addr^0,c
  2246   002922  C02B  F037         	movff	_hrs,___awmod@dividend
  2247   002926  6A38               	clrf	(___awmod@dividend+1)^0,c
  2248   002928  0E00               	movlw	0
  2249   00292A  6E3A               	movwf	(___awmod@divisor+1)^0,c
  2250   00292C  0E0A               	movlw	10
  2251   00292E  6E39               	movwf	___awmod@divisor^0,c
  2252   002930  ECFF  F00B         	call	___awmod	;wreg free
  2253   002934  5037               	movf	?___awmod^0,w,c
  2254   002936  0F30               	addlw	48
  2255   002938  EC96  F008         	call	_clcd_putch
  2256   00293C                     
  2257                           ;main.c: 275:         clcd_putch(':', (0xC0 + (2)));
  2258   00293C  0EC2               	movlw	194
  2259   00293E  6E50               	movwf	clcd_putch@addr^0,c
  2260   002940  0E3A               	movlw	58
  2261   002942  EC96  F008         	call	_clcd_putch
  2262   002946                     
  2263                           ;main.c: 276:         clcd_putch((mins / 10)+'0', (0xC0 + (3)));
  2264   002946  0EC3               	movlw	195
  2265   002948  6E50               	movwf	clcd_putch@addr^0,c
  2266   00294A  C02A  F037         	movff	_mins,___awdiv@dividend
  2267   00294E  6A38               	clrf	(___awdiv@dividend+1)^0,c
  2268   002950  0E00               	movlw	0
  2269   002952  6E3A               	movwf	(___awdiv@divisor+1)^0,c
  2270   002954  0E0A               	movlw	10
  2271   002956  6E39               	movwf	___awdiv@divisor^0,c
  2272   002958  EC57  F00C         	call	___awdiv	;wreg free
  2273   00295C  5037               	movf	?___awdiv^0,w,c
  2274   00295E  0F30               	addlw	48
  2275   002960  EC96  F008         	call	_clcd_putch
  2276   002964                     
  2277                           ;main.c: 277:         clcd_putch((mins % 10)+'0', (0xC0 + (4)));
  2278   002964  0EC4               	movlw	196
  2279   002966  6E50               	movwf	clcd_putch@addr^0,c
  2280   002968  C02A  F037         	movff	_mins,___awmod@dividend
  2281   00296C  6A38               	clrf	(___awmod@dividend+1)^0,c
  2282   00296E  0E00               	movlw	0
  2283   002970  6E3A               	movwf	(___awmod@divisor+1)^0,c
  2284   002972  0E0A               	movlw	10
  2285   002974  6E39               	movwf	___awmod@divisor^0,c
  2286   002976  ECFF  F00B         	call	___awmod	;wreg free
  2287   00297A  5037               	movf	?___awmod^0,w,c
  2288   00297C  0F30               	addlw	48
  2289   00297E  EC96  F008         	call	_clcd_putch
  2290   002982                     
  2291                           ;main.c: 278:         clcd_putch(':', (0xC0 + (5)));
  2292   002982  0EC5               	movlw	197
  2293   002984  6E50               	movwf	clcd_putch@addr^0,c
  2294   002986  0E3A               	movlw	58
  2295   002988  EC96  F008         	call	_clcd_putch
  2296                           
  2297                           ;main.c: 279:         clcd_putch((secs / 10)+'0', (0xC0 + (6)));
  2298   00298C  0EC6               	movlw	198
  2299   00298E  6E50               	movwf	clcd_putch@addr^0,c
  2300   002990  C029  F037         	movff	_secs,___awdiv@dividend
  2301   002994  6A38               	clrf	(___awdiv@dividend+1)^0,c
  2302   002996  0E00               	movlw	0
  2303   002998  6E3A               	movwf	(___awdiv@divisor+1)^0,c
  2304   00299A  0E0A               	movlw	10
  2305   00299C  6E39               	movwf	___awdiv@divisor^0,c
  2306   00299E  EC57  F00C         	call	___awdiv	;wreg free
  2307   0029A2  5037               	movf	?___awdiv^0,w,c
  2308   0029A4  0F30               	addlw	48
  2309   0029A6  EC96  F008         	call	_clcd_putch
  2310                           
  2311                           ;main.c: 280:         clcd_putch((secs % 10)+'0', (0xC0 + (7)));
  2312   0029AA  0EC7               	movlw	199
  2313   0029AC  6E50               	movwf	clcd_putch@addr^0,c
  2314   0029AE  C029  F037         	movff	_secs,___awmod@dividend
  2315   0029B2  6A38               	clrf	(___awmod@dividend+1)^0,c
  2316   0029B4  0E00               	movlw	0
  2317   0029B6  6E3A               	movwf	(___awmod@divisor+1)^0,c
  2318   0029B8  0E0A               	movlw	10
  2319   0029BA  6E39               	movwf	___awmod@divisor^0,c
  2320   0029BC  ECFF  F00B         	call	___awmod	;wreg free
  2321   0029C0  5037               	movf	?___awmod^0,w,c
  2322   0029C2  0F30               	addlw	48
  2323   0029C4  EC96  F008         	call	_clcd_putch
  2324                           
  2325                           ;main.c: 281:         }
  2326   0029C8  EF15  F015         	goto	l2837
  2327   0029CC                     l2831:
  2328   0029CC  C001  F052         	movff	_delay,??_set_time
  2329   0029D0  C002  F053         	movff	_delay+1,??_set_time+1
  2330   0029D4  C003  F054         	movff	_delay+2,??_set_time+2
  2331   0029D8  C004  F055         	movff	_delay+3,??_set_time+3
  2332   0029DC  2A01               	incf	_delay^0,f,c
  2333   0029DE  0E00               	movlw	0
  2334   0029E0  2202               	addwfc	(_delay+1)^0,f,c
  2335   0029E2  2203               	addwfc	(_delay+2)^0,f,c
  2336   0029E4  2204               	addwfc	(_delay+3)^0,f,c
  2337   0029E6  5055               	movf	(??_set_time+3)^0,w,c
  2338   0029E8  1054               	iorwf	(??_set_time+2)^0,w,c
  2339   0029EA  E109               	bnz	u1951
  2340   0029EC  0EE8               	movlw	232
  2341   0029EE  5C52               	subwf	??_set_time^0,w,c
  2342   0029F0  0E03               	movlw	3
  2343   0029F2  5853               	subwfb	(??_set_time+1)^0,w,c
  2344   0029F4  B0D8               	btfsc	status,0,c
  2345   0029F6  EFFF  F014         	goto	u1951
  2346   0029FA  EF01  F015         	goto	u1950
  2347   0029FE                     u1951:
  2348   0029FE  EF0D  F015         	goto	l2835
  2349   002A02                     u1950:
  2350   002A02                     
  2351                           ;main.c: 283:             clcd_putch(' ', (0xC0 + (0)));
  2352   002A02  0EC0               	movlw	192
  2353   002A04  6E50               	movwf	clcd_putch@addr^0,c
  2354   002A06  0E20               	movlw	32
  2355   002A08  EC96  F008         	call	_clcd_putch
  2356                           
  2357                           ;main.c: 284:             clcd_putch(' ', (0xC0 + (1)));
  2358   002A0C  0EC1               	movlw	193
  2359   002A0E  6E50               	movwf	clcd_putch@addr^0,c
  2360   002A10  0E20               	movlw	32
  2361   002A12  EC96  F008         	call	_clcd_putch
  2362                           
  2363                           ;main.c: 285:         }
  2364   002A16  EF15  F015         	goto	l2837
  2365   002A1A                     l2835:
  2366                           
  2367                           ;main.c: 287:             delay = 0;
  2368   002A1A  0E00               	movlw	0
  2369   002A1C  6E01               	movwf	_delay^0,c
  2370   002A1E  0E00               	movlw	0
  2371   002A20  6E02               	movwf	(_delay+1)^0,c
  2372   002A22  0E00               	movlw	0
  2373   002A24  6E03               	movwf	(_delay+2)^0,c
  2374   002A26  0E00               	movlw	0
  2375   002A28  6E04               	movwf	(_delay+3)^0,c
  2376   002A2A                     l2837:
  2377                           
  2378                           ;main.c: 290:     if(feild == 1) {
  2379   002A2A  042C               	decf	_feild^0,w,c
  2380   002A2C  A4D8               	btfss	status,2,c
  2381   002A2E  EF1B  F015         	goto	u1961
  2382   002A32  EF1D  F015         	goto	u1960
  2383   002A36                     u1961:
  2384   002A36  EFCD  F015         	goto	l2857
  2385   002A3A                     u1960:
  2386   002A3A                     
  2387                           ;main.c: 291:         if (delay++ < 500){
  2388   002A3A  C001  F052         	movff	_delay,??_set_time
  2389   002A3E  C002  F053         	movff	_delay+1,??_set_time+1
  2390   002A42  C003  F054         	movff	_delay+2,??_set_time+2
  2391   002A46  C004  F055         	movff	_delay+3,??_set_time+3
  2392   002A4A  2A01               	incf	_delay^0,f,c
  2393   002A4C  0E00               	movlw	0
  2394   002A4E  2202               	addwfc	(_delay+1)^0,f,c
  2395   002A50  2203               	addwfc	(_delay+2)^0,f,c
  2396   002A52  2204               	addwfc	(_delay+3)^0,f,c
  2397   002A54  5055               	movf	(??_set_time+3)^0,w,c
  2398   002A56  1054               	iorwf	(??_set_time+2)^0,w,c
  2399   002A58  E109               	bnz	u1971
  2400   002A5A  0EF4               	movlw	244
  2401   002A5C  5C52               	subwf	??_set_time^0,w,c
  2402   002A5E  0E01               	movlw	1
  2403   002A60  5853               	subwfb	(??_set_time+1)^0,w,c
  2404   002A62  B0D8               	btfsc	status,0,c
  2405   002A64  EF36  F015         	goto	u1971
  2406   002A68  EF38  F015         	goto	u1970
  2407   002A6C                     u1971:
  2408   002A6C  EF9E  F015         	goto	l2851
  2409   002A70                     u1970:
  2410   002A70                     
  2411                           ;main.c: 292:         clcd_putch((hrs / 10)+'0', (0xC0 + (0)));
  2412   002A70  0EC0               	movlw	192
  2413   002A72  6E50               	movwf	clcd_putch@addr^0,c
  2414   002A74  C02B  F037         	movff	_hrs,___awdiv@dividend
  2415   002A78  6A38               	clrf	(___awdiv@dividend+1)^0,c
  2416   002A7A  0E00               	movlw	0
  2417   002A7C  6E3A               	movwf	(___awdiv@divisor+1)^0,c
  2418   002A7E  0E0A               	movlw	10
  2419   002A80  6E39               	movwf	___awdiv@divisor^0,c
  2420   002A82  EC57  F00C         	call	___awdiv	;wreg free
  2421   002A86  5037               	movf	?___awdiv^0,w,c
  2422   002A88  0F30               	addlw	48
  2423   002A8A  EC96  F008         	call	_clcd_putch
  2424                           
  2425                           ;main.c: 293:         clcd_putch((hrs % 10)+'0', (0xC0 + (1)));
  2426   002A8E  0EC1               	movlw	193
  2427   002A90  6E50               	movwf	clcd_putch@addr^0,c
  2428   002A92  C02B  F037         	movff	_hrs,___awmod@dividend
  2429   002A96  6A38               	clrf	(___awmod@dividend+1)^0,c
  2430   002A98  0E00               	movlw	0
  2431   002A9A  6E3A               	movwf	(___awmod@divisor+1)^0,c
  2432   002A9C  0E0A               	movlw	10
  2433   002A9E  6E39               	movwf	___awmod@divisor^0,c
  2434   002AA0  ECFF  F00B         	call	___awmod	;wreg free
  2435   002AA4  5037               	movf	?___awmod^0,w,c
  2436   002AA6  0F30               	addlw	48
  2437   002AA8  EC96  F008         	call	_clcd_putch
  2438   002AAC                     
  2439                           ;main.c: 294:         clcd_putch(':', (0xC0 + (2)));
  2440   002AAC  0EC2               	movlw	194
  2441   002AAE  6E50               	movwf	clcd_putch@addr^0,c
  2442   002AB0  0E3A               	movlw	58
  2443   002AB2  EC96  F008         	call	_clcd_putch
  2444   002AB6                     
  2445                           ;main.c: 295:         clcd_putch((mins / 10)+'0', (0xC0 + (3)));
  2446   002AB6  0EC3               	movlw	195
  2447   002AB8  6E50               	movwf	clcd_putch@addr^0,c
  2448   002ABA  C02A  F037         	movff	_mins,___awdiv@dividend
  2449   002ABE  6A38               	clrf	(___awdiv@dividend+1)^0,c
  2450   002AC0  0E00               	movlw	0
  2451   002AC2  6E3A               	movwf	(___awdiv@divisor+1)^0,c
  2452   002AC4  0E0A               	movlw	10
  2453   002AC6  6E39               	movwf	___awdiv@divisor^0,c
  2454   002AC8  EC57  F00C         	call	___awdiv	;wreg free
  2455   002ACC  5037               	movf	?___awdiv^0,w,c
  2456   002ACE  0F30               	addlw	48
  2457   002AD0  EC96  F008         	call	_clcd_putch
  2458   002AD4                     
  2459                           ;main.c: 296:         clcd_putch((mins % 10)+'0', (0xC0 + (4)));
  2460   002AD4  0EC4               	movlw	196
  2461   002AD6  6E50               	movwf	clcd_putch@addr^0,c
  2462   002AD8  C02A  F037         	movff	_mins,___awmod@dividend
  2463   002ADC  6A38               	clrf	(___awmod@dividend+1)^0,c
  2464   002ADE  0E00               	movlw	0
  2465   002AE0  6E3A               	movwf	(___awmod@divisor+1)^0,c
  2466   002AE2  0E0A               	movlw	10
  2467   002AE4  6E39               	movwf	___awmod@divisor^0,c
  2468   002AE6  ECFF  F00B         	call	___awmod	;wreg free
  2469   002AEA  5037               	movf	?___awmod^0,w,c
  2470   002AEC  0F30               	addlw	48
  2471   002AEE  EC96  F008         	call	_clcd_putch
  2472   002AF2                     
  2473                           ;main.c: 297:         clcd_putch(':', (0xC0 + (5)));
  2474   002AF2  0EC5               	movlw	197
  2475   002AF4  6E50               	movwf	clcd_putch@addr^0,c
  2476   002AF6  0E3A               	movlw	58
  2477   002AF8  EC96  F008         	call	_clcd_putch
  2478                           
  2479                           ;main.c: 298:         clcd_putch((secs / 10)+'0', (0xC0 + (6)));
  2480   002AFC  0EC6               	movlw	198
  2481   002AFE  6E50               	movwf	clcd_putch@addr^0,c
  2482   002B00  C029  F037         	movff	_secs,___awdiv@dividend
  2483   002B04  6A38               	clrf	(___awdiv@dividend+1)^0,c
  2484   002B06  0E00               	movlw	0
  2485   002B08  6E3A               	movwf	(___awdiv@divisor+1)^0,c
  2486   002B0A  0E0A               	movlw	10
  2487   002B0C  6E39               	movwf	___awdiv@divisor^0,c
  2488   002B0E  EC57  F00C         	call	___awdiv	;wreg free
  2489   002B12  5037               	movf	?___awdiv^0,w,c
  2490   002B14  0F30               	addlw	48
  2491   002B16  EC96  F008         	call	_clcd_putch
  2492                           
  2493                           ;main.c: 299:         clcd_putch((secs % 10)+'0', (0xC0 + (7)));
  2494   002B1A  0EC7               	movlw	199
  2495   002B1C  6E50               	movwf	clcd_putch@addr^0,c
  2496   002B1E  C029  F037         	movff	_secs,___awmod@dividend
  2497   002B22  6A38               	clrf	(___awmod@dividend+1)^0,c
  2498   002B24  0E00               	movlw	0
  2499   002B26  6E3A               	movwf	(___awmod@divisor+1)^0,c
  2500   002B28  0E0A               	movlw	10
  2501   002B2A  6E39               	movwf	___awmod@divisor^0,c
  2502   002B2C  ECFF  F00B         	call	___awmod	;wreg free
  2503   002B30  5037               	movf	?___awmod^0,w,c
  2504   002B32  0F30               	addlw	48
  2505   002B34  EC96  F008         	call	_clcd_putch
  2506                           
  2507                           ;main.c: 300:         }
  2508   002B38  EFCD  F015         	goto	l2857
  2509   002B3C                     l2851:
  2510   002B3C  C001  F052         	movff	_delay,??_set_time
  2511   002B40  C002  F053         	movff	_delay+1,??_set_time+1
  2512   002B44  C003  F054         	movff	_delay+2,??_set_time+2
  2513   002B48  C004  F055         	movff	_delay+3,??_set_time+3
  2514   002B4C  2A01               	incf	_delay^0,f,c
  2515   002B4E  0E00               	movlw	0
  2516   002B50  2202               	addwfc	(_delay+1)^0,f,c
  2517   002B52  2203               	addwfc	(_delay+2)^0,f,c
  2518   002B54  2204               	addwfc	(_delay+3)^0,f,c
  2519   002B56  5055               	movf	(??_set_time+3)^0,w,c
  2520   002B58  1054               	iorwf	(??_set_time+2)^0,w,c
  2521   002B5A  E109               	bnz	u1981
  2522   002B5C  0EE8               	movlw	232
  2523   002B5E  5C52               	subwf	??_set_time^0,w,c
  2524   002B60  0E03               	movlw	3
  2525   002B62  5853               	subwfb	(??_set_time+1)^0,w,c
  2526   002B64  B0D8               	btfsc	status,0,c
  2527   002B66  EFB7  F015         	goto	u1981
  2528   002B6A  EFB9  F015         	goto	u1980
  2529   002B6E                     u1981:
  2530   002B6E  EFC5  F015         	goto	l2855
  2531   002B72                     u1980:
  2532   002B72                     
  2533                           ;main.c: 302:             clcd_putch(' ', (0xC0 + (3)));
  2534   002B72  0EC3               	movlw	195
  2535   002B74  6E50               	movwf	clcd_putch@addr^0,c
  2536   002B76  0E20               	movlw	32
  2537   002B78  EC96  F008         	call	_clcd_putch
  2538                           
  2539                           ;main.c: 303:             clcd_putch(' ', (0xC0 + (4)));
  2540   002B7C  0EC4               	movlw	196
  2541   002B7E  6E50               	movwf	clcd_putch@addr^0,c
  2542   002B80  0E20               	movlw	32
  2543   002B82  EC96  F008         	call	_clcd_putch
  2544                           
  2545                           ;main.c: 304:         }
  2546   002B86  EFCD  F015         	goto	l2857
  2547   002B8A                     l2855:
  2548                           
  2549                           ;main.c: 306:             delay = 0;
  2550   002B8A  0E00               	movlw	0
  2551   002B8C  6E01               	movwf	_delay^0,c
  2552   002B8E  0E00               	movlw	0
  2553   002B90  6E02               	movwf	(_delay+1)^0,c
  2554   002B92  0E00               	movlw	0
  2555   002B94  6E03               	movwf	(_delay+2)^0,c
  2556   002B96  0E00               	movlw	0
  2557   002B98  6E04               	movwf	(_delay+3)^0,c
  2558   002B9A                     l2857:
  2559                           
  2560                           ;main.c: 308:         clcd_putch(':', (0xC0 + (5)));
  2561   002B9A  0EC5               	movlw	197
  2562   002B9C  6E50               	movwf	clcd_putch@addr^0,c
  2563   002B9E  0E3A               	movlw	58
  2564   002BA0  EC96  F008         	call	_clcd_putch
  2565   002BA4                     
  2566                           ;main.c: 309:     if(feild == 2) {
  2567   002BA4  0E02               	movlw	2
  2568   002BA6  182C               	xorwf	_feild^0,w,c
  2569   002BA8  A4D8               	btfss	status,2,c
  2570   002BAA  EFD9  F015         	goto	u1991
  2571   002BAE  EFDB  F015         	goto	u1990
  2572   002BB2                     u1991:
  2573   002BB2  EF8B  F016         	goto	l2879
  2574   002BB6                     u1990:
  2575   002BB6                     
  2576                           ;main.c: 310:         if (delay++ < 500){
  2577   002BB6  C001  F052         	movff	_delay,??_set_time
  2578   002BBA  C002  F053         	movff	_delay+1,??_set_time+1
  2579   002BBE  C003  F054         	movff	_delay+2,??_set_time+2
  2580   002BC2  C004  F055         	movff	_delay+3,??_set_time+3
  2581   002BC6  2A01               	incf	_delay^0,f,c
  2582   002BC8  0E00               	movlw	0
  2583   002BCA  2202               	addwfc	(_delay+1)^0,f,c
  2584   002BCC  2203               	addwfc	(_delay+2)^0,f,c
  2585   002BCE  2204               	addwfc	(_delay+3)^0,f,c
  2586   002BD0  5055               	movf	(??_set_time+3)^0,w,c
  2587   002BD2  1054               	iorwf	(??_set_time+2)^0,w,c
  2588   002BD4  E109               	bnz	u2001
  2589   002BD6  0EF4               	movlw	244
  2590   002BD8  5C52               	subwf	??_set_time^0,w,c
  2591   002BDA  0E01               	movlw	1
  2592   002BDC  5853               	subwfb	(??_set_time+1)^0,w,c
  2593   002BDE  B0D8               	btfsc	status,0,c
  2594   002BE0  EFF4  F015         	goto	u2001
  2595   002BE4  EFF6  F015         	goto	u2000
  2596   002BE8                     u2001:
  2597   002BE8  EF5C  F016         	goto	l2873
  2598   002BEC                     u2000:
  2599   002BEC                     
  2600                           ;main.c: 311:         clcd_putch((hrs / 10)+'0', (0xC0 + (0)));
  2601   002BEC  0EC0               	movlw	192
  2602   002BEE  6E50               	movwf	clcd_putch@addr^0,c
  2603   002BF0  C02B  F037         	movff	_hrs,___awdiv@dividend
  2604   002BF4  6A38               	clrf	(___awdiv@dividend+1)^0,c
  2605   002BF6  0E00               	movlw	0
  2606   002BF8  6E3A               	movwf	(___awdiv@divisor+1)^0,c
  2607   002BFA  0E0A               	movlw	10
  2608   002BFC  6E39               	movwf	___awdiv@divisor^0,c
  2609   002BFE  EC57  F00C         	call	___awdiv	;wreg free
  2610   002C02  5037               	movf	?___awdiv^0,w,c
  2611   002C04  0F30               	addlw	48
  2612   002C06  EC96  F008         	call	_clcd_putch
  2613                           
  2614                           ;main.c: 312:         clcd_putch((hrs % 10)+'0', (0xC0 + (1)));
  2615   002C0A  0EC1               	movlw	193
  2616   002C0C  6E50               	movwf	clcd_putch@addr^0,c
  2617   002C0E  C02B  F037         	movff	_hrs,___awmod@dividend
  2618   002C12  6A38               	clrf	(___awmod@dividend+1)^0,c
  2619   002C14  0E00               	movlw	0
  2620   002C16  6E3A               	movwf	(___awmod@divisor+1)^0,c
  2621   002C18  0E0A               	movlw	10
  2622   002C1A  6E39               	movwf	___awmod@divisor^0,c
  2623   002C1C  ECFF  F00B         	call	___awmod	;wreg free
  2624   002C20  5037               	movf	?___awmod^0,w,c
  2625   002C22  0F30               	addlw	48
  2626   002C24  EC96  F008         	call	_clcd_putch
  2627   002C28                     
  2628                           ;main.c: 313:         clcd_putch(':', (0xC0 + (2)));
  2629   002C28  0EC2               	movlw	194
  2630   002C2A  6E50               	movwf	clcd_putch@addr^0,c
  2631   002C2C  0E3A               	movlw	58
  2632   002C2E  EC96  F008         	call	_clcd_putch
  2633   002C32                     
  2634                           ;main.c: 314:         clcd_putch((mins / 10)+'0', (0xC0 + (3)));
  2635   002C32  0EC3               	movlw	195
  2636   002C34  6E50               	movwf	clcd_putch@addr^0,c
  2637   002C36  C02A  F037         	movff	_mins,___awdiv@dividend
  2638   002C3A  6A38               	clrf	(___awdiv@dividend+1)^0,c
  2639   002C3C  0E00               	movlw	0
  2640   002C3E  6E3A               	movwf	(___awdiv@divisor+1)^0,c
  2641   002C40  0E0A               	movlw	10
  2642   002C42  6E39               	movwf	___awdiv@divisor^0,c
  2643   002C44  EC57  F00C         	call	___awdiv	;wreg free
  2644   002C48  5037               	movf	?___awdiv^0,w,c
  2645   002C4A  0F30               	addlw	48
  2646   002C4C  EC96  F008         	call	_clcd_putch
  2647   002C50                     
  2648                           ;main.c: 315:         clcd_putch((mins % 10)+'0', (0xC0 + (4)));
  2649   002C50  0EC4               	movlw	196
  2650   002C52  6E50               	movwf	clcd_putch@addr^0,c
  2651   002C54  C02A  F037         	movff	_mins,___awmod@dividend
  2652   002C58  6A38               	clrf	(___awmod@dividend+1)^0,c
  2653   002C5A  0E00               	movlw	0
  2654   002C5C  6E3A               	movwf	(___awmod@divisor+1)^0,c
  2655   002C5E  0E0A               	movlw	10
  2656   002C60  6E39               	movwf	___awmod@divisor^0,c
  2657   002C62  ECFF  F00B         	call	___awmod	;wreg free
  2658   002C66  5037               	movf	?___awmod^0,w,c
  2659   002C68  0F30               	addlw	48
  2660   002C6A  EC96  F008         	call	_clcd_putch
  2661   002C6E                     
  2662                           ;main.c: 316:         clcd_putch(':', (0xC0 + (5)));
  2663   002C6E  0EC5               	movlw	197
  2664   002C70  6E50               	movwf	clcd_putch@addr^0,c
  2665   002C72  0E3A               	movlw	58
  2666   002C74  EC96  F008         	call	_clcd_putch
  2667                           
  2668                           ;main.c: 317:         clcd_putch((secs / 10)+'0', (0xC0 + (6)));
  2669   002C78  0EC6               	movlw	198
  2670   002C7A  6E50               	movwf	clcd_putch@addr^0,c
  2671   002C7C  C029  F037         	movff	_secs,___awdiv@dividend
  2672   002C80  6A38               	clrf	(___awdiv@dividend+1)^0,c
  2673   002C82  0E00               	movlw	0
  2674   002C84  6E3A               	movwf	(___awdiv@divisor+1)^0,c
  2675   002C86  0E0A               	movlw	10
  2676   002C88  6E39               	movwf	___awdiv@divisor^0,c
  2677   002C8A  EC57  F00C         	call	___awdiv	;wreg free
  2678   002C8E  5037               	movf	?___awdiv^0,w,c
  2679   002C90  0F30               	addlw	48
  2680   002C92  EC96  F008         	call	_clcd_putch
  2681                           
  2682                           ;main.c: 318:         clcd_putch((secs % 10)+'0', (0xC0 + (7)));
  2683   002C96  0EC7               	movlw	199
  2684   002C98  6E50               	movwf	clcd_putch@addr^0,c
  2685   002C9A  C029  F037         	movff	_secs,___awmod@dividend
  2686   002C9E  6A38               	clrf	(___awmod@dividend+1)^0,c
  2687   002CA0  0E00               	movlw	0
  2688   002CA2  6E3A               	movwf	(___awmod@divisor+1)^0,c
  2689   002CA4  0E0A               	movlw	10
  2690   002CA6  6E39               	movwf	___awmod@divisor^0,c
  2691   002CA8  ECFF  F00B         	call	___awmod	;wreg free
  2692   002CAC  5037               	movf	?___awmod^0,w,c
  2693   002CAE  0F30               	addlw	48
  2694   002CB0  EC96  F008         	call	_clcd_putch
  2695                           
  2696                           ;main.c: 319:         }
  2697   002CB4  EF8B  F016         	goto	l2879
  2698   002CB8                     l2873:
  2699   002CB8  C001  F052         	movff	_delay,??_set_time
  2700   002CBC  C002  F053         	movff	_delay+1,??_set_time+1
  2701   002CC0  C003  F054         	movff	_delay+2,??_set_time+2
  2702   002CC4  C004  F055         	movff	_delay+3,??_set_time+3
  2703   002CC8  2A01               	incf	_delay^0,f,c
  2704   002CCA  0E00               	movlw	0
  2705   002CCC  2202               	addwfc	(_delay+1)^0,f,c
  2706   002CCE  2203               	addwfc	(_delay+2)^0,f,c
  2707   002CD0  2204               	addwfc	(_delay+3)^0,f,c
  2708   002CD2  5055               	movf	(??_set_time+3)^0,w,c
  2709   002CD4  1054               	iorwf	(??_set_time+2)^0,w,c
  2710   002CD6  E109               	bnz	u2011
  2711   002CD8  0EE8               	movlw	232
  2712   002CDA  5C52               	subwf	??_set_time^0,w,c
  2713   002CDC  0E03               	movlw	3
  2714   002CDE  5853               	subwfb	(??_set_time+1)^0,w,c
  2715   002CE0  B0D8               	btfsc	status,0,c
  2716   002CE2  EF75  F016         	goto	u2011
  2717   002CE6  EF77  F016         	goto	u2010
  2718   002CEA                     u2011:
  2719   002CEA  EF83  F016         	goto	l2877
  2720   002CEE                     u2010:
  2721   002CEE                     
  2722                           ;main.c: 321:             clcd_putch(' ', (0xC0 + (6)));
  2723   002CEE  0EC6               	movlw	198
  2724   002CF0  6E50               	movwf	clcd_putch@addr^0,c
  2725   002CF2  0E20               	movlw	32
  2726   002CF4  EC96  F008         	call	_clcd_putch
  2727                           
  2728                           ;main.c: 322:             clcd_putch(' ', (0xC0 + (7)));
  2729   002CF8  0EC7               	movlw	199
  2730   002CFA  6E50               	movwf	clcd_putch@addr^0,c
  2731   002CFC  0E20               	movlw	32
  2732   002CFE  EC96  F008         	call	_clcd_putch
  2733                           
  2734                           ;main.c: 323:         }
  2735   002D02  EF8B  F016         	goto	l2879
  2736   002D06                     l2877:
  2737                           
  2738                           ;main.c: 325:             delay = 0;
  2739   002D06  0E00               	movlw	0
  2740   002D08  6E01               	movwf	_delay^0,c
  2741   002D0A  0E00               	movlw	0
  2742   002D0C  6E02               	movwf	(_delay+1)^0,c
  2743   002D0E  0E00               	movlw	0
  2744   002D10  6E03               	movwf	(_delay+2)^0,c
  2745   002D12  0E00               	movlw	0
  2746   002D14  6E04               	movwf	(_delay+3)^0,c
  2747   002D16                     l2879:
  2748                           
  2749                           ;main.c: 328:         if (key == 2) {
  2750   002D16  0E02               	movlw	2
  2751   002D18  182D               	xorwf	_key^0,w,c
  2752   002D1A  A4D8               	btfss	status,2,c
  2753   002D1C  EF92  F016         	goto	u2021
  2754   002D20  EF94  F016         	goto	u2020
  2755   002D24                     u2021:
  2756   002D24  EFA0  F016         	goto	l2885
  2757   002D28                     u2020:
  2758   002D28                     
  2759                           ;main.c: 329:             feild++;
  2760   002D28  2A2C               	incf	_feild^0,f,c
  2761   002D2A                     
  2762                           ;main.c: 330:             feild = (feild) % 3;
  2763   002D2A  C02C  F037         	movff	_feild,___awmod@dividend
  2764   002D2E  6A38               	clrf	(___awmod@dividend+1)^0,c
  2765   002D30  0E00               	movlw	0
  2766   002D32  6E3A               	movwf	(___awmod@divisor+1)^0,c
  2767   002D34  0E03               	movlw	3
  2768   002D36  6E39               	movwf	___awmod@divisor^0,c
  2769   002D38  ECFF  F00B         	call	___awmod	;wreg free
  2770   002D3C  5037               	movf	?___awmod^0,w,c
  2771   002D3E  6E2C               	movwf	_feild^0,c
  2772   002D40                     l2885:
  2773                           
  2774                           ;main.c: 334:         if (key == 1) {
  2775   002D40  042D               	decf	_key^0,w,c
  2776   002D42  A4D8               	btfss	status,2,c
  2777   002D44  EFA6  F016         	goto	u2031
  2778   002D48  EFA8  F016         	goto	u2030
  2779   002D4C                     u2031:
  2780   002D4C  EFF1  F016         	goto	l2899
  2781   002D50                     u2030:
  2782   002D50                     
  2783                           ;main.c: 335:             if (feild == 0) {
  2784   002D50  502C               	movf	_feild^0,w,c
  2785   002D52  A4D8               	btfss	status,2,c
  2786   002D54  EFAE  F016         	goto	u2041
  2787   002D58  EFB0  F016         	goto	u2040
  2788   002D5C                     u2041:
  2789   002D5C  EFC0  F016         	goto	l2891
  2790   002D60                     u2040:
  2791   002D60                     
  2792                           ;main.c: 336:                 hrs = (hrs + 1) % 24;
  2793   002D60  0E01               	movlw	1
  2794   002D62  242B               	addwf	_hrs^0,w,c
  2795   002D64  6E37               	movwf	___awmod@dividend^0,c
  2796   002D66  6A38               	clrf	(___awmod@dividend+1)^0,c
  2797   002D68  0E00               	movlw	0
  2798   002D6A  2238               	addwfc	(___awmod@dividend+1)^0,f,c
  2799   002D6C  0E00               	movlw	0
  2800   002D6E  6E3A               	movwf	(___awmod@divisor+1)^0,c
  2801   002D70  0E18               	movlw	24
  2802   002D72  6E39               	movwf	___awmod@divisor^0,c
  2803   002D74  ECFF  F00B         	call	___awmod	;wreg free
  2804   002D78  5037               	movf	?___awmod^0,w,c
  2805   002D7A  6E2B               	movwf	_hrs^0,c
  2806                           
  2807                           ;main.c: 337:             } else if (feild == 1) {
  2808   002D7C  EFF1  F016         	goto	l2899
  2809   002D80                     l2891:
  2810   002D80  042C               	decf	_feild^0,w,c
  2811   002D82  A4D8               	btfss	status,2,c
  2812   002D84  EFC6  F016         	goto	u2051
  2813   002D88  EFC8  F016         	goto	u2050
  2814   002D8C                     u2051:
  2815   002D8C  EFD8  F016         	goto	l2895
  2816   002D90                     u2050:
  2817   002D90                     
  2818                           ;main.c: 338:                 mins = (mins + 1) % 60;
  2819   002D90  0E01               	movlw	1
  2820   002D92  242A               	addwf	_mins^0,w,c
  2821   002D94  6E37               	movwf	___awmod@dividend^0,c
  2822   002D96  6A38               	clrf	(___awmod@dividend+1)^0,c
  2823   002D98  0E00               	movlw	0
  2824   002D9A  2238               	addwfc	(___awmod@dividend+1)^0,f,c
  2825   002D9C  0E00               	movlw	0
  2826   002D9E  6E3A               	movwf	(___awmod@divisor+1)^0,c
  2827   002DA0  0E3C               	movlw	60
  2828   002DA2  6E39               	movwf	___awmod@divisor^0,c
  2829   002DA4  ECFF  F00B         	call	___awmod	;wreg free
  2830   002DA8  5037               	movf	?___awmod^0,w,c
  2831   002DAA  6E2A               	movwf	_mins^0,c
  2832                           
  2833                           ;main.c: 339:             } else if (feild == 2) {
  2834   002DAC  EFF1  F016         	goto	l2899
  2835   002DB0                     l2895:
  2836   002DB0  0E02               	movlw	2
  2837   002DB2  182C               	xorwf	_feild^0,w,c
  2838   002DB4  A4D8               	btfss	status,2,c
  2839   002DB6  EFDF  F016         	goto	u2061
  2840   002DBA  EFE1  F016         	goto	u2060
  2841   002DBE                     u2061:
  2842   002DBE  EFF1  F016         	goto	l195
  2843   002DC2                     u2060:
  2844   002DC2                     
  2845                           ;main.c: 340:                 secs = (secs + 1) % 60;
  2846   002DC2  0E01               	movlw	1
  2847   002DC4  2429               	addwf	_secs^0,w,c
  2848   002DC6  6E37               	movwf	___awmod@dividend^0,c
  2849   002DC8  6A38               	clrf	(___awmod@dividend+1)^0,c
  2850   002DCA  0E00               	movlw	0
  2851   002DCC  2238               	addwfc	(___awmod@dividend+1)^0,f,c
  2852   002DCE  0E00               	movlw	0
  2853   002DD0  6E3A               	movwf	(___awmod@divisor+1)^0,c
  2854   002DD2  0E3C               	movlw	60
  2855   002DD4  6E39               	movwf	___awmod@divisor^0,c
  2856   002DD6  ECFF  F00B         	call	___awmod	;wreg free
  2857   002DDA  5037               	movf	?___awmod^0,w,c
  2858   002DDC  6E29               	movwf	_secs^0,c
  2859   002DDE  EFF1  F016         	goto	l2899
  2860   002DE2                     l195:
  2861   002DE2                     l2899:
  2862                           
  2863                           ;main.c: 344:         if (key == 11) {
  2864   002DE2  0E0B               	movlw	11
  2865   002DE4  182D               	xorwf	_key^0,w,c
  2866   002DE6  A4D8               	btfss	status,2,c
  2867   002DE8  EFF8  F016         	goto	u2071
  2868   002DEC  EFFA  F016         	goto	u2070
  2869   002DF0                     u2071:
  2870   002DF0  EF5B  F017         	goto	l199
  2871   002DF4                     u2070:
  2872   002DF4                     
  2873                           ;main.c: 345:         s_flag = 0;
  2874   002DF4  0E00               	movlw	0
  2875   002DF6  6E27               	movwf	(_s_flag+1)^0,c
  2876   002DF8  0E00               	movlw	0
  2877   002DFA  6E26               	movwf	_s_flag^0,c
  2878   002DFC                     
  2879                           ;main.c: 346:         write_ds1307(0x02, ((hrs / 10) << 4) | (hrs % 10));
  2880   002DFC  C02B  F037         	movff	_hrs,___awmod@dividend
  2881   002E00  6A38               	clrf	(___awmod@dividend+1)^0,c
  2882   002E02  0E00               	movlw	0
  2883   002E04  6E3A               	movwf	(___awmod@divisor+1)^0,c
  2884   002E06  0E0A               	movlw	10
  2885   002E08  6E39               	movwf	___awmod@divisor^0,c
  2886   002E0A  ECFF  F00B         	call	___awmod	;wreg free
  2887   002E0E  C037  F052         	movff	?___awmod,??_set_time
  2888   002E12  C038  F053         	movff	?___awmod+1,??_set_time+1
  2889   002E16  C02B  F037         	movff	_hrs,___awdiv@dividend
  2890   002E1A  6A38               	clrf	(___awdiv@dividend+1)^0,c
  2891   002E1C  0E00               	movlw	0
  2892   002E1E  6E3A               	movwf	(___awdiv@divisor+1)^0,c
  2893   002E20  0E0A               	movlw	10
  2894   002E22  6E39               	movwf	___awdiv@divisor^0,c
  2895   002E24  EC57  F00C         	call	___awdiv	;wreg free
  2896   002E28  3837               	swapf	?___awdiv^0,w,c
  2897   002E2A  0BF0               	andlw	240
  2898   002E2C  1052               	iorwf	??_set_time^0,w,c
  2899   002E2E  6E3F               	movwf	write_ds1307@data^0,c
  2900   002E30  0E02               	movlw	2
  2901   002E32  ECC8  F008         	call	_write_ds1307
  2902   002E36                     
  2903                           ;main.c: 347:         write_ds1307(0x01, ((mins / 10) << 4) | (mins % 10));
  2904   002E36  C02A  F037         	movff	_mins,___awmod@dividend
  2905   002E3A  6A38               	clrf	(___awmod@dividend+1)^0,c
  2906   002E3C  0E00               	movlw	0
  2907   002E3E  6E3A               	movwf	(___awmod@divisor+1)^0,c
  2908   002E40  0E0A               	movlw	10
  2909   002E42  6E39               	movwf	___awmod@divisor^0,c
  2910   002E44  ECFF  F00B         	call	___awmod	;wreg free
  2911   002E48  C037  F052         	movff	?___awmod,??_set_time
  2912   002E4C  C038  F053         	movff	?___awmod+1,??_set_time+1
  2913   002E50  C02A  F037         	movff	_mins,___awdiv@dividend
  2914   002E54  6A38               	clrf	(___awdiv@dividend+1)^0,c
  2915   002E56  0E00               	movlw	0
  2916   002E58  6E3A               	movwf	(___awdiv@divisor+1)^0,c
  2917   002E5A  0E0A               	movlw	10
  2918   002E5C  6E39               	movwf	___awdiv@divisor^0,c
  2919   002E5E  EC57  F00C         	call	___awdiv	;wreg free
  2920   002E62  3837               	swapf	?___awdiv^0,w,c
  2921   002E64  0BF0               	andlw	240
  2922   002E66  1052               	iorwf	??_set_time^0,w,c
  2923   002E68  6E3F               	movwf	write_ds1307@data^0,c
  2924   002E6A  0E01               	movlw	1
  2925   002E6C  ECC8  F008         	call	_write_ds1307
  2926   002E70                     
  2927                           ;main.c: 348:         write_ds1307(0x00, ((secs / 10) << 4) | (secs % 10));
  2928   002E70  C029  F037         	movff	_secs,___awmod@dividend
  2929   002E74  6A38               	clrf	(___awmod@dividend+1)^0,c
  2930   002E76  0E00               	movlw	0
  2931   002E78  6E3A               	movwf	(___awmod@divisor+1)^0,c
  2932   002E7A  0E0A               	movlw	10
  2933   002E7C  6E39               	movwf	___awmod@divisor^0,c
  2934   002E7E  ECFF  F00B         	call	___awmod	;wreg free
  2935   002E82  C037  F052         	movff	?___awmod,??_set_time
  2936   002E86  C038  F053         	movff	?___awmod+1,??_set_time+1
  2937   002E8A  C029  F037         	movff	_secs,___awdiv@dividend
  2938   002E8E  6A38               	clrf	(___awdiv@dividend+1)^0,c
  2939   002E90  0E00               	movlw	0
  2940   002E92  6E3A               	movwf	(___awdiv@divisor+1)^0,c
  2941   002E94  0E0A               	movlw	10
  2942   002E96  6E39               	movwf	___awdiv@divisor^0,c
  2943   002E98  EC57  F00C         	call	___awdiv	;wreg free
  2944   002E9C  3837               	swapf	?___awdiv^0,w,c
  2945   002E9E  0BF0               	andlw	240
  2946   002EA0  1052               	iorwf	??_set_time^0,w,c
  2947   002EA2  6E3F               	movwf	write_ds1307@data^0,c
  2948   002EA4  0E00               	movlw	0
  2949   002EA6  ECC8  F008         	call	_write_ds1307
  2950   002EAA                     
  2951                           ;main.c: 349:         get_time();
  2952   002EAA  ECD5  F00A         	call	_get_time	;wreg free
  2953                           
  2954                           ;main.c: 350:         flag = 0;
  2955   002EAE  0E00               	movlw	0
  2956   002EB0  6E23               	movwf	(_flag+1)^0,c
  2957   002EB2  0E00               	movlw	0
  2958   002EB4  6E22               	movwf	_flag^0,c
  2959   002EB6                     l199:
  2960                           
  2961                           ;main.c: 352:     menu_cnt = 0;
  2962   002EB6  0E00               	movlw	0
  2963   002EB8  6E19               	movwf	(_menu_cnt+1)^0,c
  2964   002EBA  0E00               	movlw	0
  2965   002EBC  6E18               	movwf	_menu_cnt^0,c
  2966                           
  2967                           ;main.c: 353:     i=0;
  2968   002EBE  0E00               	movlw	0
  2969   002EC0  6E17               	movwf	(_i+1)^0,c
  2970   002EC2  0E00               	movlw	0
  2971   002EC4  6E16               	movwf	_i^0,c
  2972   002EC6  0012               	return		;funcret
  2973   002EC8                     __end_of_set_time:
  2974                           	callstack 0
  2975                           
  2976 ;; *************** function _get_time *****************
  2977 ;; Defined at:
  2978 ;;		line 91 in file "main.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;		None
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;		None
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  1    wreg      void 
  2985 ;; Registers used:
  2986 ;;		wreg, status,2, status,0, cstack
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2992 ;;      Params:         0       0       0       0       0       0       0
  2993 ;;      Locals:         0       0       0       0       0       0       0
  2994 ;;      Temps:          0       0       0       0       0       0       0
  2995 ;;      Totals:         0       0       0       0       0       0       0
  2996 ;;Total ram usage:        0 bytes
  2997 ;; Hardware stack levels used: 1
  2998 ;; Hardware stack levels required when called: 4
  2999 ;; This function calls:
  3000 ;;		_read_ds1307
  3001 ;; This function is called by:
  3002 ;;		_set_time
  3003 ;;		_main
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           	psect	text4
  3008   0015AA                     __ptext4:
  3009                           	callstack 0
  3010   0015AA                     _get_time:
  3011                           	callstack 25
  3012   0015AA                     
  3013                           ;main.c: 92:     clock_reg[0] = read_ds1307(0x02);
  3014   0015AA  0E02               	movlw	2
  3015   0015AC  EC0A  F009         	call	_read_ds1307
  3016   0015B0  6E09               	movwf	_clock_reg^0,c
  3017                           
  3018                           ;main.c: 93:     clock_reg[1] = read_ds1307(0x01);
  3019   0015B2  0E01               	movlw	1
  3020   0015B4  EC0A  F009         	call	_read_ds1307
  3021   0015B8  6E0A               	movwf	(_clock_reg+1)^0,c
  3022                           
  3023                           ;main.c: 94:     clock_reg[2] = read_ds1307(0x00);
  3024   0015BA  0E00               	movlw	0
  3025   0015BC  EC0A  F009         	call	_read_ds1307
  3026   0015C0  6E0B               	movwf	(_clock_reg+2)^0,c
  3027   0015C2                     
  3028                           ;main.c: 96:     if (clock_reg[0] & 0x40) {
  3029   0015C2  AC09               	btfss	_clock_reg^0,6,c
  3030   0015C4  EFE6  F00A         	goto	u1551
  3031   0015C8  EFE8  F00A         	goto	u1550
  3032   0015CC                     u1551:
  3033   0015CC  EFF3  F00A         	goto	l2489
  3034   0015D0                     u1550:
  3035   0015D0                     
  3036                           ;main.c: 97:         time[0] = '0' + ((clock_reg[0] >> 4) & 0x01);
  3037   0015D0  3809               	swapf	_clock_reg^0,w,c
  3038   0015D2  0B0F               	andlw	15
  3039   0015D4  0B01               	andlw	1
  3040   0015D6  0F30               	addlw	48
  3041   0015D8  6E2E               	movwf	_time^0,c
  3042                           
  3043                           ;main.c: 98:         time[1] = '0' + (clock_reg[0] & 0x0F);
  3044   0015DA  5009               	movf	_clock_reg^0,w,c
  3045   0015DC  0B0F               	andlw	15
  3046   0015DE  0F30               	addlw	48
  3047   0015E0  6E2F               	movwf	(_time+1)^0,c
  3048                           
  3049                           ;main.c: 99:     } else {
  3050   0015E2  EFFC  F00A         	goto	l2491
  3051   0015E6                     l2489:
  3052                           
  3053                           ;main.c: 100:         time[0] = '0' + ((clock_reg[0] >> 4) & 0x03);
  3054   0015E6  3809               	swapf	_clock_reg^0,w,c
  3055   0015E8  0B0F               	andlw	15
  3056   0015EA  0B03               	andlw	3
  3057   0015EC  0F30               	addlw	48
  3058   0015EE  6E2E               	movwf	_time^0,c
  3059                           
  3060                           ;main.c: 101:         time[1] = '0' + (clock_reg[0] & 0x0F);
  3061   0015F0  5009               	movf	_clock_reg^0,w,c
  3062   0015F2  0B0F               	andlw	15
  3063   0015F4  0F30               	addlw	48
  3064   0015F6  6E2F               	movwf	(_time+1)^0,c
  3065   0015F8                     l2491:
  3066                           
  3067                           ;main.c: 103:     time[2] = ':';
  3068   0015F8  0E3A               	movlw	58
  3069   0015FA  6E30               	movwf	(_time+2)^0,c
  3070   0015FC                     
  3071                           ;main.c: 104:     time[3] = '0' + ((clock_reg[1] >> 4) & 0x0F);
  3072   0015FC  380A               	swapf	(_clock_reg+1)^0,w,c
  3073   0015FE  0B0F               	andlw	15
  3074   001600  0B0F               	andlw	15
  3075   001602  0F30               	addlw	48
  3076   001604  6E31               	movwf	(_time+3)^0,c
  3077   001606                     
  3078                           ;main.c: 105:     time[4] = '0' + (clock_reg[1] & 0x0F);
  3079   001606  500A               	movf	(_clock_reg+1)^0,w,c
  3080   001608  0B0F               	andlw	15
  3081   00160A  0F30               	addlw	48
  3082   00160C  6E32               	movwf	(_time+4)^0,c
  3083   00160E                     
  3084                           ;main.c: 106:     time[5] = ':';
  3085   00160E  0E3A               	movlw	58
  3086   001610  6E33               	movwf	(_time+5)^0,c
  3087                           
  3088                           ;main.c: 107:     time[6] = '0' + ((clock_reg[2] >> 4) & 0x0F);
  3089   001612  380B               	swapf	(_clock_reg+2)^0,w,c
  3090   001614  0B0F               	andlw	15
  3091   001616  0B0F               	andlw	15
  3092   001618  0F30               	addlw	48
  3093   00161A  6E34               	movwf	(_time+6)^0,c
  3094                           
  3095                           ;main.c: 108:     time[7] = '0' + (clock_reg[2] & 0x0F);
  3096   00161C  500B               	movf	(_clock_reg+2)^0,w,c
  3097   00161E  0B0F               	andlw	15
  3098   001620  0F30               	addlw	48
  3099   001622  6E35               	movwf	(_time+7)^0,c
  3100   001624                     
  3101                           ;main.c: 109:     time[8] = '\0';
  3102   001624  0E00               	movlw	0
  3103   001626  6E36               	movwf	(_time+8)^0,c
  3104   001628  0012               	return		;funcret
  3105   00162A                     __end_of_get_time:
  3106                           	callstack 0
  3107                           
  3108 ;; *************** function ___awdiv *****************
  3109 ;; Defined at:
  3110 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;  dividend        2    0[COMRAM] int 
  3113 ;;  divisor         2    2[COMRAM] int 
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;  quotient        2    6[COMRAM] int 
  3116 ;;  sign            1    5[COMRAM] unsigned char 
  3117 ;;  counter         1    4[COMRAM] unsigned char 
  3118 ;; Return value:  Size  Location     Type
  3119 ;;                  2    0[COMRAM] int 
  3120 ;; Registers used:
  3121 ;;		wreg, status,2, status,0
  3122 ;; Tracked objects:
  3123 ;;		On entry : 0/0
  3124 ;;		On exit  : 0/0
  3125 ;;		Unchanged: 0/0
  3126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3127 ;;      Params:         4       0       0       0       0       0       0
  3128 ;;      Locals:         4       0       0       0       0       0       0
  3129 ;;      Temps:          0       0       0       0       0       0       0
  3130 ;;      Totals:         8       0       0       0       0       0       0
  3131 ;;Total ram usage:        8 bytes
  3132 ;; Hardware stack levels used: 1
  3133 ;; This function calls:
  3134 ;;		Nothing
  3135 ;; This function is called by:
  3136 ;;		_set_time
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140                           	psect	text5
  3141   0018AE                     __ptext5:
  3142                           	callstack 0
  3143   0018AE                     ___awdiv:
  3144                           	callstack 29
  3145   0018AE  0E00               	movlw	0
  3146   0018B0  6E3C               	movwf	___awdiv@sign^0,c
  3147   0018B2  BE3A               	btfsc	(___awdiv@divisor+1)^0,7,c
  3148   0018B4  EF60  F00C         	goto	u1590
  3149   0018B8  EF5E  F00C         	goto	u1591
  3150   0018BC                     u1591:
  3151   0018BC  EF66  F00C         	goto	l2547
  3152   0018C0                     u1590:
  3153   0018C0  6C39               	negf	___awdiv@divisor^0,c
  3154   0018C2  1E3A               	comf	(___awdiv@divisor+1)^0,f,c
  3155   0018C4  B0D8               	btfsc	status,0,c
  3156   0018C6  2A3A               	incf	(___awdiv@divisor+1)^0,f,c
  3157   0018C8  0E01               	movlw	1
  3158   0018CA  6E3C               	movwf	___awdiv@sign^0,c
  3159   0018CC                     l2547:
  3160   0018CC  BE38               	btfsc	(___awdiv@dividend+1)^0,7,c
  3161   0018CE  EF6D  F00C         	goto	u1600
  3162   0018D2  EF6B  F00C         	goto	u1601
  3163   0018D6                     u1601:
  3164   0018D6  EF73  F00C         	goto	l2553
  3165   0018DA                     u1600:
  3166   0018DA  6C37               	negf	___awdiv@dividend^0,c
  3167   0018DC  1E38               	comf	(___awdiv@dividend+1)^0,f,c
  3168   0018DE  B0D8               	btfsc	status,0,c
  3169   0018E0  2A38               	incf	(___awdiv@dividend+1)^0,f,c
  3170   0018E2  0E01               	movlw	1
  3171   0018E4  1A3C               	xorwf	___awdiv@sign^0,f,c
  3172   0018E6                     l2553:
  3173   0018E6  0E00               	movlw	0
  3174   0018E8  6E3E               	movwf	(___awdiv@quotient+1)^0,c
  3175   0018EA  0E00               	movlw	0
  3176   0018EC  6E3D               	movwf	___awdiv@quotient^0,c
  3177   0018EE  5039               	movf	___awdiv@divisor^0,w,c
  3178   0018F0  103A               	iorwf	(___awdiv@divisor+1)^0,w,c
  3179   0018F2  B4D8               	btfsc	status,2,c
  3180   0018F4  EF7E  F00C         	goto	u1611
  3181   0018F8  EF80  F00C         	goto	u1610
  3182   0018FC                     u1611:
  3183   0018FC  EFA8  F00C         	goto	l2575
  3184   001900                     u1610:
  3185   001900  0E01               	movlw	1
  3186   001902  6E3B               	movwf	___awdiv@counter^0,c
  3187   001904  EF88  F00C         	goto	l2561
  3188   001908                     l2559:
  3189   001908  90D8               	bcf	status,0,c
  3190   00190A  3639               	rlcf	___awdiv@divisor^0,f,c
  3191   00190C  363A               	rlcf	(___awdiv@divisor+1)^0,f,c
  3192   00190E  2A3B               	incf	___awdiv@counter^0,f,c
  3193   001910                     l2561:
  3194   001910  AE3A               	btfss	(___awdiv@divisor+1)^0,7,c
  3195   001912  EF8D  F00C         	goto	u1621
  3196   001916  EF8F  F00C         	goto	u1620
  3197   00191A                     u1621:
  3198   00191A  EF84  F00C         	goto	l2559
  3199   00191E                     u1620:
  3200   00191E                     l2563:
  3201   00191E  90D8               	bcf	status,0,c
  3202   001920  363D               	rlcf	___awdiv@quotient^0,f,c
  3203   001922  363E               	rlcf	(___awdiv@quotient+1)^0,f,c
  3204   001924  5039               	movf	___awdiv@divisor^0,w,c
  3205   001926  5C37               	subwf	___awdiv@dividend^0,w,c
  3206   001928  503A               	movf	(___awdiv@divisor+1)^0,w,c
  3207   00192A  5838               	subwfb	(___awdiv@dividend+1)^0,w,c
  3208   00192C  A0D8               	btfss	status,0,c
  3209   00192E  EF9B  F00C         	goto	u1631
  3210   001932  EF9D  F00C         	goto	u1630
  3211   001936                     u1631:
  3212   001936  EFA2  F00C         	goto	l2571
  3213   00193A                     u1630:
  3214   00193A  5039               	movf	___awdiv@divisor^0,w,c
  3215   00193C  5E37               	subwf	___awdiv@dividend^0,f,c
  3216   00193E  503A               	movf	(___awdiv@divisor+1)^0,w,c
  3217   001940  5A38               	subwfb	(___awdiv@dividend+1)^0,f,c
  3218   001942  803D               	bsf	___awdiv@quotient^0,0,c
  3219   001944                     l2571:
  3220   001944  90D8               	bcf	status,0,c
  3221   001946  323A               	rrcf	(___awdiv@divisor+1)^0,f,c
  3222   001948  3239               	rrcf	___awdiv@divisor^0,f,c
  3223   00194A  2E3B               	decfsz	___awdiv@counter^0,f,c
  3224   00194C  EF8F  F00C         	goto	l2563
  3225   001950                     l2575:
  3226   001950  503C               	movf	___awdiv@sign^0,w,c
  3227   001952  B4D8               	btfsc	status,2,c
  3228   001954  EFAE  F00C         	goto	u1641
  3229   001958  EFB0  F00C         	goto	u1640
  3230   00195C                     u1641:
  3231   00195C  EFB4  F00C         	goto	l2579
  3232   001960                     u1640:
  3233   001960  6C3D               	negf	___awdiv@quotient^0,c
  3234   001962  1E3E               	comf	(___awdiv@quotient+1)^0,f,c
  3235   001964  B0D8               	btfsc	status,0,c
  3236   001966  2A3E               	incf	(___awdiv@quotient+1)^0,f,c
  3237   001968                     l2579:
  3238   001968  C03D  F037         	movff	___awdiv@quotient,?___awdiv
  3239   00196C  C03E  F038         	movff	___awdiv@quotient+1,?___awdiv+1
  3240   001970  0012               	return		;funcret
  3241   001972                     __end_of___awdiv:
  3242                           	callstack 0
  3243                           
  3244 ;; *************** function _read_switches *****************
  3245 ;; Defined at:
  3246 ;;		line 96 in file "matrix_keypad.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;  detection_ty    1    wreg     unsigned char 
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;  detection_ty    1    0[COMRAM] unsigned char 
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  1    wreg      unsigned char 
  3253 ;; Registers used:
  3254 ;;		wreg, status,2, status,0, cstack
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3260 ;;      Params:         0       0       0       0       0       0       0
  3261 ;;      Locals:         1       0       0       0       0       0       0
  3262 ;;      Temps:          0       0       0       0       0       0       0
  3263 ;;      Totals:         1       0       0       0       0       0       0
  3264 ;;Total ram usage:        1 bytes
  3265 ;; Hardware stack levels used: 1
  3266 ;; Hardware stack levels required when called: 1
  3267 ;; This function calls:
  3268 ;;		_scan_key
  3269 ;; This function is called by:
  3270 ;;		_main
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274                           	psect	text6
  3275   001534                     __ptext6:
  3276                           	callstack 0
  3277   001534                     _read_switches:
  3278                           	callstack 29
  3279                           
  3280                           ;incstack = 0
  3281                           ;read_switches@detection_type stored from wreg
  3282   001534  6E37               	movwf	read_switches@detection_type^0,c
  3283   001536                     
  3284                           ;matrix_keypad.c: 96: unsigned char read_switches(unsigned char detection_type);matrix_k
      +                          eypad.c: 97: {;matrix_keypad.c: 98:  static unsigned char once = 1, key;;matrix_keypad.c
      +                          : 100:  if (detection_type == 1)
  3285   001536  0437               	decf	read_switches@detection_type^0,w,c
  3286   001538  A4D8               	btfss	status,2,c
  3287   00153A  EFA1  F00A         	goto	u931
  3288   00153E  EFA3  F00A         	goto	u930
  3289   001542                     u931:
  3290   001542  EFC7  F00A         	goto	l2029
  3291   001546                     u930:
  3292   001546                     
  3293                           ;matrix_keypad.c: 101:  {;matrix_keypad.c: 102:   key = scan_key();
  3294   001546  EC1F  F00D         	call	_scan_key	;wreg free
  3295   00154A  6E28               	movwf	read_switches@key^0,c
  3296   00154C                     
  3297                           ;matrix_keypad.c: 103:   if(key != 0xFF && once )
  3298   00154C  2828               	incf	read_switches@key^0,w,c
  3299   00154E  B4D8               	btfsc	status,2,c
  3300   001550  EFAC  F00A         	goto	u941
  3301   001554  EFAE  F00A         	goto	u940
  3302   001558                     u941:
  3303   001558  EFBB  F00A         	goto	l2025
  3304   00155C                     u940:
  3305   00155C  505B               	movf	read_switches@once^0,w,c
  3306   00155E  B4D8               	btfsc	status,2,c
  3307   001560  EFB4  F00A         	goto	u951
  3308   001564  EFB6  F00A         	goto	u950
  3309   001568                     u951:
  3310   001568  EFBB  F00A         	goto	l2025
  3311   00156C                     u950:
  3312   00156C                     
  3313                           ;matrix_keypad.c: 104:   {;matrix_keypad.c: 105:    once = 0;
  3314   00156C  0E00               	movlw	0
  3315   00156E  6E5B               	movwf	read_switches@once^0,c
  3316                           
  3317                           ;matrix_keypad.c: 106:    return key;
  3318   001570  5028               	movf	read_switches@key^0,w,c
  3319   001572  EFD4  F00A         	goto	l322
  3320   001576                     l2025:
  3321   001576  2828               	incf	read_switches@key^0,w,c
  3322   001578  A4D8               	btfss	status,2,c
  3323   00157A  EFC1  F00A         	goto	u961
  3324   00157E  EFC3  F00A         	goto	u960
  3325   001582                     u961:
  3326   001582  EFD3  F00A         	goto	l2035
  3327   001586                     u960:
  3328   001586                     
  3329                           ;matrix_keypad.c: 109:   {;matrix_keypad.c: 110:    once = 1;
  3330   001586  0E01               	movlw	1
  3331   001588  6E5B               	movwf	read_switches@once^0,c
  3332   00158A  EFD3  F00A         	goto	l2035
  3333   00158E                     l2029:
  3334   00158E  5037               	movf	read_switches@detection_type^0,w,c
  3335   001590  A4D8               	btfss	status,2,c
  3336   001592  EFCD  F00A         	goto	u971
  3337   001596  EFCF  F00A         	goto	u970
  3338   00159A                     u971:
  3339   00159A  EFD3  F00A         	goto	l2035
  3340   00159E                     u970:
  3341   00159E                     
  3342                           ;matrix_keypad.c: 114:  {;matrix_keypad.c: 115:   return scan_key();
  3343   00159E  EC1F  F00D         	call	_scan_key	;wreg free
  3344   0015A2  EFD4  F00A         	goto	l322
  3345   0015A6                     l2035:
  3346                           
  3347                           ;matrix_keypad.c: 118:  return 0xFF;
  3348   0015A6  0EFF               	movlw	255
  3349   0015A8                     l322:
  3350   0015A8  0012               	return		;funcret
  3351   0015AA                     __end_of_read_switches:
  3352                           	callstack 0
  3353                           
  3354 ;; *************** function _scan_key *****************
  3355 ;; Defined at:
  3356 ;;		line 26 in file "matrix_keypad.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;		None
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;		None
  3361 ;; Return value:  Size  Location     Type
  3362 ;;                  1    wreg      unsigned char 
  3363 ;; Registers used:
  3364 ;;		wreg
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3370 ;;      Params:         0       0       0       0       0       0       0
  3371 ;;      Locals:         0       0       0       0       0       0       0
  3372 ;;      Temps:          0       0       0       0       0       0       0
  3373 ;;      Totals:         0       0       0       0       0       0       0
  3374 ;;Total ram usage:        0 bytes
  3375 ;; Hardware stack levels used: 1
  3376 ;; This function calls:
  3377 ;;		Nothing
  3378 ;; This function is called by:
  3379 ;;		_read_switches
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           	psect	text7
  3384   001A3E                     __ptext7:
  3385                           	callstack 0
  3386   001A3E                     _scan_key:
  3387                           	callstack 29
  3388   001A3E                     
  3389                           ;matrix_keypad.c: 28:  PORTBbits.RB5 = 0;
  3390   001A3E  9A81               	bcf	129,5,c	;volatile
  3391                           
  3392                           ;matrix_keypad.c: 29:  PORTBbits.RB6 = 1;
  3393   001A40  8C81               	bsf	129,6,c	;volatile
  3394                           
  3395                           ;matrix_keypad.c: 30:  PORTBbits.RB7 = 1;
  3396   001A42  8E81               	bsf	129,7,c	;volatile
  3397                           
  3398                           ;matrix_keypad.c: 32:  if (PORTBbits.RB1 == 0)
  3399   001A44  B281               	btfsc	129,1,c	;volatile
  3400   001A46  EF27  F00D         	goto	u301
  3401   001A4A  EF29  F00D         	goto	u300
  3402   001A4E                     u301:
  3403   001A4E  EF2C  F00D         	goto	l292
  3404   001A52                     u300:
  3405   001A52                     
  3406                           ;matrix_keypad.c: 33:  {;matrix_keypad.c: 34:   return 1;
  3407   001A52  0E01               	movlw	1
  3408   001A54  EFA2  F00D         	goto	l293
  3409   001A58                     l292:
  3410   001A58  B481               	btfsc	129,2,c	;volatile
  3411   001A5A  EF31  F00D         	goto	u311
  3412   001A5E  EF33  F00D         	goto	u310
  3413   001A62                     u311:
  3414   001A62  EF36  F00D         	goto	l295
  3415   001A66                     u310:
  3416   001A66                     
  3417                           ;matrix_keypad.c: 37:  {;matrix_keypad.c: 38:   return 4;
  3418   001A66  0E04               	movlw	4
  3419   001A68  EFA2  F00D         	goto	l293
  3420   001A6C                     l295:
  3421   001A6C  B681               	btfsc	129,3,c	;volatile
  3422   001A6E  EF3B  F00D         	goto	u321
  3423   001A72  EF3D  F00D         	goto	u320
  3424   001A76                     u321:
  3425   001A76  EF40  F00D         	goto	l297
  3426   001A7A                     u320:
  3427   001A7A                     
  3428                           ;matrix_keypad.c: 41:  {;matrix_keypad.c: 42:   return 7;
  3429   001A7A  0E07               	movlw	7
  3430   001A7C  EFA2  F00D         	goto	l293
  3431   001A80                     l297:
  3432   001A80  B881               	btfsc	129,4,c	;volatile
  3433   001A82  EF45  F00D         	goto	u331
  3434   001A86  EF47  F00D         	goto	u330
  3435   001A8A                     u331:
  3436   001A8A  EF4A  F00D         	goto	l294
  3437   001A8E                     u330:
  3438   001A8E                     
  3439                           ;matrix_keypad.c: 45:  {;matrix_keypad.c: 46:   return 10;
  3440   001A8E  0E0A               	movlw	10
  3441   001A90  EFA2  F00D         	goto	l293
  3442   001A94                     l294:
  3443                           
  3444                           ;matrix_keypad.c: 49:  PORTBbits.RB5 = 1;
  3445   001A94  8A81               	bsf	129,5,c	;volatile
  3446                           
  3447                           ;matrix_keypad.c: 50:  PORTBbits.RB6 = 0;
  3448   001A96  9C81               	bcf	129,6,c	;volatile
  3449                           
  3450                           ;matrix_keypad.c: 51:  PORTBbits.RB7 = 1;
  3451   001A98  8E81               	bsf	129,7,c	;volatile
  3452                           
  3453                           ;matrix_keypad.c: 53:  if (PORTBbits.RB1 == 0)
  3454   001A9A  B281               	btfsc	129,1,c	;volatile
  3455   001A9C  EF52  F00D         	goto	u341
  3456   001AA0  EF54  F00D         	goto	u340
  3457   001AA4                     u341:
  3458   001AA4  EF57  F00D         	goto	l300
  3459   001AA8                     u340:
  3460   001AA8                     
  3461                           ;matrix_keypad.c: 54:  {;matrix_keypad.c: 55:   return 2;
  3462   001AA8  0E02               	movlw	2
  3463   001AAA  EFA2  F00D         	goto	l293
  3464   001AAE                     l300:
  3465   001AAE  B481               	btfsc	129,2,c	;volatile
  3466   001AB0  EF5C  F00D         	goto	u351
  3467   001AB4  EF5E  F00D         	goto	u350
  3468   001AB8                     u351:
  3469   001AB8  EF61  F00D         	goto	l302
  3470   001ABC                     u350:
  3471   001ABC                     
  3472                           ;matrix_keypad.c: 58:  {;matrix_keypad.c: 59:   return 5;
  3473   001ABC  0E05               	movlw	5
  3474   001ABE  EFA2  F00D         	goto	l293
  3475   001AC2                     l302:
  3476   001AC2  B681               	btfsc	129,3,c	;volatile
  3477   001AC4  EF66  F00D         	goto	u361
  3478   001AC8  EF68  F00D         	goto	u360
  3479   001ACC                     u361:
  3480   001ACC  EF6B  F00D         	goto	l304
  3481   001AD0                     u360:
  3482   001AD0                     
  3483                           ;matrix_keypad.c: 62:  {;matrix_keypad.c: 63:   return 8;
  3484   001AD0  0E08               	movlw	8
  3485   001AD2  EFA2  F00D         	goto	l293
  3486   001AD6                     l304:
  3487   001AD6  B881               	btfsc	129,4,c	;volatile
  3488   001AD8  EF70  F00D         	goto	u371
  3489   001ADC  EF72  F00D         	goto	u370
  3490   001AE0                     u371:
  3491   001AE0  EF75  F00D         	goto	l301
  3492   001AE4                     u370:
  3493   001AE4                     
  3494                           ;matrix_keypad.c: 66:  {;matrix_keypad.c: 67:   return 11;
  3495   001AE4  0E0B               	movlw	11
  3496   001AE6  EFA2  F00D         	goto	l293
  3497   001AEA                     l301:
  3498                           
  3499                           ;matrix_keypad.c: 70:  PORTBbits.RB5 = 1;
  3500   001AEA  8A81               	bsf	129,5,c	;volatile
  3501                           
  3502                           ;matrix_keypad.c: 71:  PORTBbits.RB6 = 1;
  3503   001AEC  8C81               	bsf	129,6,c	;volatile
  3504                           
  3505                           ;matrix_keypad.c: 72:  PORTBbits.RB7 = 0;
  3506   001AEE  9E81               	bcf	129,7,c	;volatile
  3507                           
  3508                           ;matrix_keypad.c: 74:  PORTBbits.RB7 = 0;
  3509   001AF0  9E81               	bcf	129,7,c	;volatile
  3510                           
  3511                           ;matrix_keypad.c: 76:  if (PORTBbits.RB1 == 0)
  3512   001AF2  B281               	btfsc	129,1,c	;volatile
  3513   001AF4  EF7E  F00D         	goto	u381
  3514   001AF8  EF80  F00D         	goto	u380
  3515   001AFC                     u381:
  3516   001AFC  EF83  F00D         	goto	l307
  3517   001B00                     u380:
  3518   001B00                     
  3519                           ;matrix_keypad.c: 77:  {;matrix_keypad.c: 78:   return 3;
  3520   001B00  0E03               	movlw	3
  3521   001B02  EFA2  F00D         	goto	l293
  3522   001B06                     l307:
  3523   001B06  B481               	btfsc	129,2,c	;volatile
  3524   001B08  EF88  F00D         	goto	u391
  3525   001B0C  EF8A  F00D         	goto	u390
  3526   001B10                     u391:
  3527   001B10  EF8D  F00D         	goto	l309
  3528   001B14                     u390:
  3529   001B14                     
  3530                           ;matrix_keypad.c: 81:  {;matrix_keypad.c: 82:   return 6;
  3531   001B14  0E06               	movlw	6
  3532   001B16  EFA2  F00D         	goto	l293
  3533   001B1A                     l309:
  3534   001B1A  B681               	btfsc	129,3,c	;volatile
  3535   001B1C  EF92  F00D         	goto	u401
  3536   001B20  EF94  F00D         	goto	u400
  3537   001B24                     u401:
  3538   001B24  EF97  F00D         	goto	l311
  3539   001B28                     u400:
  3540   001B28                     
  3541                           ;matrix_keypad.c: 85:  {;matrix_keypad.c: 86:   return 9;
  3542   001B28  0E09               	movlw	9
  3543   001B2A  EFA2  F00D         	goto	l293
  3544   001B2E                     l311:
  3545   001B2E  B881               	btfsc	129,4,c	;volatile
  3546   001B30  EF9C  F00D         	goto	u411
  3547   001B34  EF9E  F00D         	goto	u410
  3548   001B38                     u411:
  3549   001B38  EFA1  F00D         	goto	l310
  3550   001B3C                     u410:
  3551   001B3C                     
  3552                           ;matrix_keypad.c: 89:  {;matrix_keypad.c: 90:   return 12;
  3553   001B3C  0E0C               	movlw	12
  3554   001B3E  EFA2  F00D         	goto	l293
  3555   001B42                     l310:
  3556   001B42                     
  3557                           ;matrix_keypad.c: 93:  return 0xFF;
  3558   001B42  0EFF               	movlw	255
  3559   001B44                     l293:
  3560   001B44  0012               	return		;funcret
  3561   001B46                     __end_of_scan_key:
  3562                           	callstack 0
  3563                           
  3564 ;; *************** function _init_config *****************
  3565 ;; Defined at:
  3566 ;;		line 34 in file "main.c"
  3567 ;; Parameters:    Size  Location     Type
  3568 ;;		None
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;		None
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  1    wreg      void 
  3573 ;; Registers used:
  3574 ;;		wreg, status,2, status,0, cstack
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3580 ;;      Params:         0       0       0       0       0       0       0
  3581 ;;      Locals:         0       0       0       0       0       0       0
  3582 ;;      Temps:          0       0       0       0       0       0       0
  3583 ;;      Totals:         0       0       0       0       0       0       0
  3584 ;;Total ram usage:        0 bytes
  3585 ;; Hardware stack levels used: 1
  3586 ;; Hardware stack levels required when called: 5
  3587 ;; This function calls:
  3588 ;;		_init_adc
  3589 ;;		_init_clcd
  3590 ;;		_init_ds1307
  3591 ;;		_init_i2c
  3592 ;;		_init_matrix_keypad
  3593 ;;		_init_uart
  3594 ;; This function is called by:
  3595 ;;		_main
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598                           
  3599                           	psect	text8
  3600   00115C                     __ptext8:
  3601                           	callstack 0
  3602   00115C                     _init_config:
  3603                           	callstack 25
  3604   00115C                     
  3605                           ;main.c: 35:     init_clcd();
  3606   00115C  ECAB  F00B         	call	_init_clcd	;wreg free
  3607                           
  3608                           ;main.c: 36:     init_matrix_keypad();
  3609   001160  EC82  F008         	call	_init_matrix_keypad	;wreg free
  3610   001164                     
  3611                           ;main.c: 37:     init_adc();
  3612   001164  ECD7  F008         	call	_init_adc	;wreg free
  3613   001168                     
  3614                           ;main.c: 38:     init_i2c();
  3615   001168  EC8B  F008         	call	_init_i2c	;wreg free
  3616                           
  3617                           ;main.c: 39:     init_ds1307();
  3618   00116C  ECAF  F009         	call	_init_ds1307	;wreg free
  3619   001170                     
  3620                           ;main.c: 40:     init_uart();
  3621   001170  ECE7  F008         	call	_init_uart	;wreg free
  3622   001174  0012               	return		;funcret
  3623   001176                     __end_of_init_config:
  3624                           	callstack 0
  3625                           
  3626 ;; *************** function _init_uart *****************
  3627 ;; Defined at:
  3628 ;;		line 12 in file "uart.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;		None
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;		None
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  1    wreg      void 
  3635 ;; Registers used:
  3636 ;;		wreg, status,2
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3642 ;;      Params:         0       0       0       0       0       0       0
  3643 ;;      Locals:         0       0       0       0       0       0       0
  3644 ;;      Temps:          0       0       0       0       0       0       0
  3645 ;;      Totals:         0       0       0       0       0       0       0
  3646 ;;Total ram usage:        0 bytes
  3647 ;; Hardware stack levels used: 1
  3648 ;; This function calls:
  3649 ;;		Nothing
  3650 ;; This function is called by:
  3651 ;;		_init_config
  3652 ;; This function uses a non-reentrant model
  3653 ;;
  3654                           
  3655                           	psect	text9
  3656   0011CE                     __ptext9:
  3657                           	callstack 0
  3658   0011CE                     _init_uart:
  3659                           	callstack 29
  3660   0011CE                     
  3661                           ;uart.c: 15:  TRISC7 = 1;
  3662   0011CE  8E94               	bsf	3988,7,c	;volatile
  3663                           
  3664                           ;uart.c: 16:  TRISC6 = 0;
  3665   0011D0  9C94               	bcf	3988,6,c	;volatile
  3666                           
  3667                           ;uart.c: 20:  TX9 = 0;
  3668   0011D2  9CAC               	bcf	4012,6,c	;volatile
  3669                           
  3670                           ;uart.c: 22:  TXEN = 1;
  3671   0011D4  8AAC               	bsf	4012,5,c	;volatile
  3672                           
  3673                           ;uart.c: 25:  SYNC = 0;
  3674   0011D6  98AC               	bcf	4012,4,c	;volatile
  3675                           
  3676                           ;uart.c: 27:  SENDB = 0;
  3677   0011D8  96AC               	bcf	4012,3,c	;volatile
  3678                           
  3679                           ;uart.c: 30:  BRGH = 1;
  3680   0011DA  84AC               	bsf	4012,2,c	;volatile
  3681                           
  3682                           ;uart.c: 34:  SPEN = 1;
  3683   0011DC  8EAB               	bsf	4011,7,c	;volatile
  3684                           
  3685                           ;uart.c: 36:  RX9 = 0;
  3686   0011DE  9CAB               	bcf	4011,6,c	;volatile
  3687                           
  3688                           ;uart.c: 38:  CREN = 1;
  3689   0011E0  88AB               	bsf	4011,4,c	;volatile
  3690                           
  3691                           ;uart.c: 47:  BRG16 = 0;
  3692   0011E2  96B8               	bcf	4024,3,c	;volatile
  3693   0011E4                     
  3694                           ;uart.c: 51:  SPBRG = 129;
  3695   0011E4  0E81               	movlw	129
  3696   0011E6  6EAF               	movwf	175,c	;volatile
  3697   0011E8                     
  3698                           ;uart.c: 55:  TXIF = 0;
  3699   0011E8  989E               	bcf	3998,4,c	;volatile
  3700   0011EA                     
  3701                           ;uart.c: 58:  RCIF = 0;
  3702   0011EA  9A9E               	bcf	3998,5,c	;volatile
  3703   0011EC  0012               	return		;funcret
  3704   0011EE                     __end_of_init_uart:
  3705                           	callstack 0
  3706                           
  3707 ;; *************** function _init_matrix_keypad *****************
  3708 ;; Defined at:
  3709 ;;		line 12 in file "matrix_keypad.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;		None
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;		None
  3714 ;; Return value:  Size  Location     Type
  3715 ;;                  1    wreg      void 
  3716 ;; Registers used:
  3717 ;;		wreg, status,2, status,0
  3718 ;; Tracked objects:
  3719 ;;		On entry : 0/0
  3720 ;;		On exit  : 0/0
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3723 ;;      Params:         0       0       0       0       0       0       0
  3724 ;;      Locals:         0       0       0       0       0       0       0
  3725 ;;      Temps:          0       0       0       0       0       0       0
  3726 ;;      Totals:         0       0       0       0       0       0       0
  3727 ;;Total ram usage:        0 bytes
  3728 ;; Hardware stack levels used: 1
  3729 ;; This function calls:
  3730 ;;		Nothing
  3731 ;; This function is called by:
  3732 ;;		_init_config
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735                           
  3736                           	psect	text10
  3737   001104                     __ptext10:
  3738                           	callstack 0
  3739   001104                     _init_matrix_keypad:
  3740                           	callstack 29
  3741   001104                     
  3742                           ;matrix_keypad.c: 15:  ADCON1 = 0x0F;
  3743   001104  0E0F               	movlw	15
  3744   001106  6EC1               	movwf	193,c	;volatile
  3745                           
  3746                           ;matrix_keypad.c: 18:  TRISB = 0x1E;
  3747   001108  0E1E               	movlw	30
  3748   00110A  6E93               	movwf	147,c	;volatile
  3749   00110C                     
  3750                           ;matrix_keypad.c: 21:  RBPU = 0;
  3751   00110C  9EF1               	bcf	4081,7,c	;volatile
  3752   00110E                     
  3753                           ;matrix_keypad.c: 23:  PORTB = PORTB | 0xE0;
  3754   00110E  5081               	movf	129,w,c	;volatile
  3755   001110  09E0               	iorlw	224
  3756   001112  6E81               	movwf	129,c	;volatile
  3757   001114  0012               	return		;funcret
  3758   001116                     __end_of_init_matrix_keypad:
  3759                           	callstack 0
  3760                           
  3761 ;; *************** function _init_i2c *****************
  3762 ;; Defined at:
  3763 ;;		line 14 in file "i2c.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;		None
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;		None
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  1    wreg      void 
  3770 ;; Registers used:
  3771 ;;		wreg, status,2
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3777 ;;      Params:         0       0       0       0       0       0       0
  3778 ;;      Locals:         0       0       0       0       0       0       0
  3779 ;;      Temps:          0       0       0       0       0       0       0
  3780 ;;      Totals:         0       0       0       0       0       0       0
  3781 ;;Total ram usage:        0 bytes
  3782 ;; Hardware stack levels used: 1
  3783 ;; This function calls:
  3784 ;;		Nothing
  3785 ;; This function is called by:
  3786 ;;		_init_config
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           	psect	text11
  3791   001116                     __ptext11:
  3792                           	callstack 0
  3793   001116                     _init_i2c:
  3794                           	callstack 29
  3795   001116                     
  3796                           ;i2c.c: 17:  TRISC3 = 1;
  3797   001116  8694               	bsf	3988,3,c	;volatile
  3798                           
  3799                           ;i2c.c: 18:  TRISC4 = 1;
  3800   001118  8894               	bsf	3988,4,c	;volatile
  3801   00111A                     
  3802                           ;i2c.c: 20:  SSPCON1 = 0x28;
  3803   00111A  0E28               	movlw	40
  3804   00111C  6EC6               	movwf	198,c	;volatile
  3805                           
  3806                           ;i2c.c: 22:  SSPADD = 0x31;
  3807   00111E  0E31               	movlw	49
  3808   001120  6EC8               	movwf	200,c	;volatile
  3809   001122                     
  3810                           ;i2c.c: 24:  CKE = 0;
  3811   001122  9CC7               	bcf	4039,6,c	;volatile
  3812   001124                     
  3813                           ;i2c.c: 26:  SMP = 1;
  3814   001124  8EC7               	bsf	4039,7,c	;volatile
  3815   001126                     
  3816                           ;i2c.c: 28:  SSPIF = 0;
  3817   001126  969E               	bcf	3998,3,c	;volatile
  3818   001128                     
  3819                           ;i2c.c: 30:  BCLIF = 0;
  3820   001128  96A1               	bcf	4001,3,c	;volatile
  3821   00112A  0012               	return		;funcret
  3822   00112C                     __end_of_init_i2c:
  3823                           	callstack 0
  3824                           
  3825 ;; *************** function _init_ds1307 *****************
  3826 ;; Defined at:
  3827 ;;		line 19 in file "ds1307.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;		None
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;  dummy           1   10[COMRAM] unsigned char 
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  1    wreg      void 
  3834 ;; Registers used:
  3835 ;;		wreg, status,2, status,0, cstack
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3841 ;;      Params:         0       0       0       0       0       0       0
  3842 ;;      Locals:         1       0       0       0       0       0       0
  3843 ;;      Temps:          0       0       0       0       0       0       0
  3844 ;;      Totals:         1       0       0       0       0       0       0
  3845 ;;Total ram usage:        1 bytes
  3846 ;; Hardware stack levels used: 1
  3847 ;; Hardware stack levels required when called: 4
  3848 ;; This function calls:
  3849 ;;		_read_ds1307
  3850 ;;		_write_ds1307
  3851 ;; This function is called by:
  3852 ;;		_init_config
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856                           	psect	text12
  3857   00135E                     __ptext12:
  3858                           	callstack 0
  3859   00135E                     _init_ds1307:
  3860                           	callstack 25
  3861   00135E                     
  3862                           ;ds1307.c: 21:  unsigned char dummy;;ds1307.c: 24:  dummy = read_ds1307(0x00);
  3863   00135E  0E00               	movlw	0
  3864   001360  EC0A  F009         	call	_read_ds1307
  3865   001364  6E41               	movwf	init_ds1307@dummy^0,c
  3866   001366                     
  3867                           ;ds1307.c: 25:  write_ds1307(0x00, dummy | 0x80);
  3868   001366  5041               	movf	init_ds1307@dummy^0,w,c
  3869   001368  0980               	iorlw	128
  3870   00136A  6E3F               	movwf	write_ds1307@data^0,c
  3871   00136C  0E00               	movlw	0
  3872   00136E  ECC8  F008         	call	_write_ds1307
  3873   001372                     
  3874                           ;ds1307.c: 28:  dummy = read_ds1307(0x02);
  3875   001372  0E02               	movlw	2
  3876   001374  EC0A  F009         	call	_read_ds1307
  3877   001378  6E41               	movwf	init_ds1307@dummy^0,c
  3878                           
  3879                           ;ds1307.c: 29:  write_ds1307(0x02, dummy | 0x40);
  3880   00137A  5041               	movf	init_ds1307@dummy^0,w,c
  3881   00137C  0940               	iorlw	64
  3882   00137E  6E3F               	movwf	write_ds1307@data^0,c
  3883   001380  0E02               	movlw	2
  3884   001382  ECC8  F008         	call	_write_ds1307
  3885   001386                     
  3886                           ;ds1307.c: 44:  write_ds1307(0x07, 0x93);
  3887   001386  0E93               	movlw	147
  3888   001388  6E3F               	movwf	write_ds1307@data^0,c
  3889   00138A  0E07               	movlw	7
  3890   00138C  ECC8  F008         	call	_write_ds1307
  3891   001390                     
  3892                           ;ds1307.c: 47:  dummy = read_ds1307(0x00);
  3893   001390  0E00               	movlw	0
  3894   001392  EC0A  F009         	call	_read_ds1307
  3895   001396  6E41               	movwf	init_ds1307@dummy^0,c
  3896                           
  3897                           ;ds1307.c: 48:  write_ds1307(0x00, dummy & 0x7F);
  3898   001398  5041               	movf	init_ds1307@dummy^0,w,c
  3899   00139A  0B7F               	andlw	127
  3900   00139C  6E3F               	movwf	write_ds1307@data^0,c
  3901   00139E  0E00               	movlw	0
  3902   0013A0  ECC8  F008         	call	_write_ds1307
  3903   0013A4  0012               	return		;funcret
  3904   0013A6                     __end_of_init_ds1307:
  3905                           	callstack 0
  3906                           
  3907 ;; *************** function _write_ds1307 *****************
  3908 ;; Defined at:
  3909 ;;		line 52 in file "ds1307.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  address         1    wreg     unsigned char 
  3912 ;;  data            1    8[COMRAM] unsigned char 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;  address         1    9[COMRAM] unsigned char 
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  1    wreg      void 
  3917 ;; Registers used:
  3918 ;;		wreg, status,2, cstack
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3924 ;;      Params:         1       0       0       0       0       0       0
  3925 ;;      Locals:         1       0       0       0       0       0       0
  3926 ;;      Temps:          0       0       0       0       0       0       0
  3927 ;;      Totals:         2       0       0       0       0       0       0
  3928 ;;Total ram usage:        2 bytes
  3929 ;; Hardware stack levels used: 1
  3930 ;; Hardware stack levels required when called: 2
  3931 ;; This function calls:
  3932 ;;		_i2c_start
  3933 ;;		_i2c_stop
  3934 ;;		_i2c_write
  3935 ;; This function is called by:
  3936 ;;		_set_time
  3937 ;;		_init_ds1307
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           
  3941                           	psect	text13
  3942   001190                     __ptext13:
  3943                           	callstack 0
  3944   001190                     _write_ds1307:
  3945                           	callstack 27
  3946                           
  3947                           ;incstack = 0
  3948                           ;write_ds1307@address stored from wreg
  3949   001190  6E40               	movwf	write_ds1307@address^0,c
  3950   001192                     
  3951                           ;ds1307.c: 52: void write_ds1307(unsigned char address, unsigned char data);ds1307.c: 53
      +                          : {;ds1307.c: 54:  i2c_start();
  3952   001192  EC54  F008         	call	_i2c_start	;wreg free
  3953   001196                     
  3954                           ;ds1307.c: 55:  i2c_write(0xD0);
  3955   001196  0ED0               	movlw	208
  3956   001198  EC64  F008         	call	_i2c_write
  3957   00119C                     
  3958                           ;ds1307.c: 56:  i2c_write(address);
  3959   00119C  5040               	movf	write_ds1307@address^0,w,c
  3960   00119E  EC64  F008         	call	_i2c_write
  3961   0011A2                     
  3962                           ;ds1307.c: 57:  i2c_write(data);
  3963   0011A2  503F               	movf	write_ds1307@data^0,w,c
  3964   0011A4  EC64  F008         	call	_i2c_write
  3965   0011A8                     
  3966                           ;ds1307.c: 58:  i2c_stop();
  3967   0011A8  EC58  F008         	call	_i2c_stop	;wreg free
  3968   0011AC  0012               	return		;funcret
  3969   0011AE                     __end_of_write_ds1307:
  3970                           	callstack 0
  3971                           
  3972 ;; *************** function _read_ds1307 *****************
  3973 ;; Defined at:
  3974 ;;		line 61 in file "ds1307.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;  address         1    wreg     unsigned char 
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;  address         1    1[COMRAM] unsigned char 
  3979 ;;  data            1    2[COMRAM] unsigned char 
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  1    wreg      unsigned char 
  3982 ;; Registers used:
  3983 ;;		wreg, status,2, cstack
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3989 ;;      Params:         0       0       0       0       0       0       0
  3990 ;;      Locals:         2       0       0       0       0       0       0
  3991 ;;      Temps:          0       0       0       0       0       0       0
  3992 ;;      Totals:         2       0       0       0       0       0       0
  3993 ;;Total ram usage:        2 bytes
  3994 ;; Hardware stack levels used: 1
  3995 ;; Hardware stack levels required when called: 3
  3996 ;; This function calls:
  3997 ;;		_i2c_read
  3998 ;;		_i2c_rep_start
  3999 ;;		_i2c_start
  4000 ;;		_i2c_stop
  4001 ;;		_i2c_write
  4002 ;; This function is called by:
  4003 ;;		_get_time
  4004 ;;		_init_ds1307
  4005 ;; This function uses a non-reentrant model
  4006 ;;
  4007                           
  4008                           	psect	text14
  4009   001214                     __ptext14:
  4010                           	callstack 0
  4011   001214                     _read_ds1307:
  4012                           	callstack 25
  4013                           
  4014                           ;incstack = 0
  4015                           ;read_ds1307@address stored from wreg
  4016   001214  6E38               	movwf	read_ds1307@address^0,c
  4017   001216                     
  4018                           ;ds1307.c: 61: unsigned char read_ds1307(unsigned char address);ds1307.c: 62: {;ds1307.c
      +                          : 63:  unsigned char data;;ds1307.c: 65:  i2c_start();
  4019   001216  EC54  F008         	call	_i2c_start	;wreg free
  4020   00121A                     
  4021                           ;ds1307.c: 66:  i2c_write(0xD0);
  4022   00121A  0ED0               	movlw	208
  4023   00121C  EC64  F008         	call	_i2c_write
  4024   001220                     
  4025                           ;ds1307.c: 67:  i2c_write(address);
  4026   001220  5038               	movf	read_ds1307@address^0,w,c
  4027   001222  EC64  F008         	call	_i2c_write
  4028   001226                     
  4029                           ;ds1307.c: 68:  i2c_rep_start();
  4030   001226  EC60  F008         	call	_i2c_rep_start	;wreg free
  4031   00122A                     
  4032                           ;ds1307.c: 69:  i2c_write(0xD1);
  4033   00122A  0ED1               	movlw	209
  4034   00122C  EC64  F008         	call	_i2c_write
  4035                           
  4036                           ;ds1307.c: 70:  data = i2c_read();
  4037   001230  EC6A  F008         	call	_i2c_read	;wreg free
  4038   001234  6E39               	movwf	read_ds1307@data^0,c
  4039   001236                     
  4040                           ;ds1307.c: 71:  i2c_stop();
  4041   001236  EC58  F008         	call	_i2c_stop	;wreg free
  4042                           
  4043                           ;ds1307.c: 73:  return data;
  4044   00123A  5039               	movf	read_ds1307@data^0,w,c
  4045   00123C  0012               	return		;funcret
  4046   00123E                     __end_of_read_ds1307:
  4047                           	callstack 0
  4048                           
  4049 ;; *************** function _i2c_rep_start *****************
  4050 ;; Defined at:
  4051 ;;		line 59 in file "i2c.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;		None
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;		None
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  1    wreg      void 
  4058 ;; Registers used:
  4059 ;;		cstack
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4065 ;;      Params:         0       0       0       0       0       0       0
  4066 ;;      Locals:         0       0       0       0       0       0       0
  4067 ;;      Temps:          0       0       0       0       0       0       0
  4068 ;;      Totals:         0       0       0       0       0       0       0
  4069 ;;Total ram usage:        0 bytes
  4070 ;; Hardware stack levels used: 1
  4071 ;; Hardware stack levels required when called: 1
  4072 ;; This function calls:
  4073 ;;		_i2c_idle
  4074 ;; This function is called by:
  4075 ;;		_read_ds1307
  4076 ;;		_read_external_eeprom
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080                           	psect	text15
  4081   0010C0                     __ptext15:
  4082                           	callstack 0
  4083   0010C0                     _i2c_rep_start:
  4084                           	callstack 27
  4085   0010C0                     
  4086                           ;i2c.c: 61:  RSEN = 1;
  4087   0010C0  82C5               	bsf	4037,1,c	;volatile
  4088   0010C2                     
  4089                           ;i2c.c: 62:  i2c_idle();
  4090   0010C2  EC70  F008         	call	_i2c_idle	;wreg free
  4091   0010C6  0012               	return		;funcret
  4092   0010C8                     __end_of_i2c_rep_start:
  4093                           	callstack 0
  4094                           
  4095 ;; *************** function _i2c_read *****************
  4096 ;; Defined at:
  4097 ;;		line 83 in file "i2c.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;		None
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;		None
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  1    wreg      unsigned char 
  4104 ;; Registers used:
  4105 ;;		wreg, status,2, cstack
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4111 ;;      Params:         0       0       0       0       0       0       0
  4112 ;;      Locals:         0       0       0       0       0       0       0
  4113 ;;      Temps:          0       0       0       0       0       0       0
  4114 ;;      Totals:         0       0       0       0       0       0       0
  4115 ;;Total ram usage:        0 bytes
  4116 ;; Hardware stack levels used: 1
  4117 ;; Hardware stack levels required when called: 2
  4118 ;; This function calls:
  4119 ;;		_i2c_no_ack
  4120 ;;		_i2c_rx_mode
  4121 ;; This function is called by:
  4122 ;;		_read_ds1307
  4123 ;;		_read_external_eeprom
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           	psect	text16
  4128   0010D4                     __ptext16:
  4129                           	callstack 0
  4130   0010D4                     _i2c_read:
  4131                           	callstack 26
  4132   0010D4                     
  4133                           ;i2c.c: 85:  i2c_rx_mode();
  4134   0010D4  EC5C  F008         	call	_i2c_rx_mode	;wreg free
  4135                           
  4136                           ;i2c.c: 86:  i2c_no_ack();
  4137   0010D8  EC51  F008         	call	_i2c_no_ack	;wreg free
  4138   0010DC                     
  4139                           ;i2c.c: 88:  return SSPBUF;
  4140   0010DC  50C9               	movf	201,w,c	;volatile
  4141   0010DE  0012               	return		;funcret
  4142   0010E0                     __end_of_i2c_read:
  4143                           	callstack 0
  4144                           
  4145 ;; *************** function _i2c_rx_mode *****************
  4146 ;; Defined at:
  4147 ;;		line 71 in file "i2c.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;		None
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;		None
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  1    wreg      void 
  4154 ;; Registers used:
  4155 ;;		cstack
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4161 ;;      Params:         0       0       0       0       0       0       0
  4162 ;;      Locals:         0       0       0       0       0       0       0
  4163 ;;      Temps:          0       0       0       0       0       0       0
  4164 ;;      Totals:         0       0       0       0       0       0       0
  4165 ;;Total ram usage:        0 bytes
  4166 ;; Hardware stack levels used: 1
  4167 ;; Hardware stack levels required when called: 1
  4168 ;; This function calls:
  4169 ;;		_i2c_idle
  4170 ;; This function is called by:
  4171 ;;		_i2c_read
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           	psect	text17
  4176   0010B8                     __ptext17:
  4177                           	callstack 0
  4178   0010B8                     _i2c_rx_mode:
  4179                           	callstack 26
  4180   0010B8                     
  4181                           ;i2c.c: 73:  RCEN = 1;
  4182   0010B8  86C5               	bsf	4037,3,c	;volatile
  4183   0010BA                     
  4184                           ;i2c.c: 74:  i2c_idle();
  4185   0010BA  EC70  F008         	call	_i2c_idle	;wreg free
  4186   0010BE  0012               	return		;funcret
  4187   0010C0                     __end_of_i2c_rx_mode:
  4188                           	callstack 0
  4189                           
  4190 ;; *************** function _i2c_no_ack *****************
  4191 ;; Defined at:
  4192 ;;		line 77 in file "i2c.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;		None
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;		None
  4197 ;; Return value:  Size  Location     Type
  4198 ;;                  1    wreg      void 
  4199 ;; Registers used:
  4200 ;;		None
  4201 ;; Tracked objects:
  4202 ;;		On entry : 0/0
  4203 ;;		On exit  : 0/0
  4204 ;;		Unchanged: 0/0
  4205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4206 ;;      Params:         0       0       0       0       0       0       0
  4207 ;;      Locals:         0       0       0       0       0       0       0
  4208 ;;      Temps:          0       0       0       0       0       0       0
  4209 ;;      Totals:         0       0       0       0       0       0       0
  4210 ;;Total ram usage:        0 bytes
  4211 ;; Hardware stack levels used: 1
  4212 ;; This function calls:
  4213 ;;		Nothing
  4214 ;; This function is called by:
  4215 ;;		_i2c_read
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text18
  4220   0010A2                     __ptext18:
  4221                           	callstack 0
  4222   0010A2                     _i2c_no_ack:
  4223                           	callstack 27
  4224   0010A2                     
  4225                           ;i2c.c: 79:  ACKDT = 1;
  4226   0010A2  8AC5               	bsf	4037,5,c	;volatile
  4227                           
  4228                           ;i2c.c: 80:  ACKEN = 1;
  4229   0010A4  88C5               	bsf	4037,4,c	;volatile
  4230   0010A6  0012               	return		;funcret
  4231   0010A8                     __end_of_i2c_no_ack:
  4232                           	callstack 0
  4233                           
  4234 ;; *************** function _init_clcd *****************
  4235 ;; Defined at:
  4236 ;;		line 35 in file "clcd.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;		None
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;		None
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  1    wreg      void 
  4243 ;; Registers used:
  4244 ;;		wreg, status,2, status,0, cstack
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4250 ;;      Params:         0       0       0       0       0       0       0
  4251 ;;      Locals:         0       0       0       0       0       0       0
  4252 ;;      Temps:          1       0       0       0       0       0       0
  4253 ;;      Totals:         1       0       0       0       0       0       0
  4254 ;;Total ram usage:        1 bytes
  4255 ;; Hardware stack levels used: 1
  4256 ;; Hardware stack levels required when called: 1
  4257 ;; This function calls:
  4258 ;;		_clcd_write
  4259 ;; This function is called by:
  4260 ;;		_init_config
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           	psect	text19
  4265   001756                     __ptext19:
  4266                           	callstack 0
  4267   001756                     _init_clcd:
  4268                           	callstack 28
  4269   001756                     
  4270                           ;clcd.c: 38:  TRISD = 0x00;
  4271   001756  0E00               	movlw	0
  4272   001758  6E95               	movwf	149,c	;volatile
  4273   00175A                     
  4274                           ;clcd.c: 40:  TRISC = TRISC & 0xF8;
  4275   00175A  5094               	movf	148,w,c	;volatile
  4276   00175C  0BF8               	andlw	248
  4277   00175E  6E94               	movwf	148,c	;volatile
  4278   001760                     
  4279                           ;clcd.c: 42:  RC0 = 0;
  4280   001760  9082               	bcf	3970,0,c	;volatile
  4281   001762                     
  4282                           ;clcd.c: 46:     _delay((unsigned long)((30)*(20000000/4000.0)));
  4283   001762  0EC3               	movlw	195
  4284   001764  6E39               	movwf	??_init_clcd^0,c
  4285   001766  0ECD               	movlw	205
  4286   001768                     u2397:
  4287   001768  2EE8               	decfsz	wreg,f,c
  4288   00176A  D7FE               	bra	u2397
  4289   00176C  2E39               	decfsz	??_init_clcd^0,f,c
  4290   00176E  D7FC               	bra	u2397
  4291   001770  F000               	nop	
  4292   001772                     
  4293                           ;clcd.c: 49:     clcd_write(0x33, 0 );
  4294   001772  0E00               	movlw	0
  4295   001774  6E37               	movwf	clcd_write@control_bit^0,c
  4296   001776  0E33               	movlw	51
  4297   001778  EC4F  F009         	call	_clcd_write
  4298   00177C                     
  4299                           ;clcd.c: 50:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  4300   00177C  0E1B               	movlw	27
  4301   00177E  6E39               	movwf	??_init_clcd^0,c
  4302   001780  0E9E               	movlw	158
  4303   001782                     u2407:
  4304   001782  2EE8               	decfsz	wreg,f,c
  4305   001784  D7FE               	bra	u2407
  4306   001786  2E39               	decfsz	??_init_clcd^0,f,c
  4307   001788  D7FC               	bra	u2407
  4308   00178A  D000               	nop2	
  4309   00178C                     
  4310                           ;clcd.c: 51:     clcd_write(0x33, 0 );
  4311   00178C  0E00               	movlw	0
  4312   00178E  6E37               	movwf	clcd_write@control_bit^0,c
  4313   001790  0E33               	movlw	51
  4314   001792  EC4F  F009         	call	_clcd_write
  4315   001796                     
  4316                           ;clcd.c: 52:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4317   001796  0EA6               	movlw	166
  4318   001798                     u2417:
  4319   001798  2EE8               	decfsz	wreg,f,c
  4320   00179A  D7FE               	bra	u2417
  4321   00179C  D000               	nop2	
  4322   00179E                     
  4323                           ;clcd.c: 53:     clcd_write(0x33, 0 );
  4324   00179E  0E00               	movlw	0
  4325   0017A0  6E37               	movwf	clcd_write@control_bit^0,c
  4326   0017A2  0E33               	movlw	51
  4327   0017A4  EC4F  F009         	call	_clcd_write
  4328   0017A8                     
  4329                           ;clcd.c: 54:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  4330   0017A8  D000               	nop2		;2 cycle nop
  4331   0017AA  D000               	nop2		;2 cycle nop
  4332   0017AC  F000               	nop	
  4333   0017AE                     
  4334                           ;clcd.c: 56:     clcd_write(0x02, 0);
  4335   0017AE  0E00               	movlw	0
  4336   0017B0  6E37               	movwf	clcd_write@control_bit^0,c
  4337   0017B2  0E02               	movlw	2
  4338   0017B4  EC4F  F009         	call	_clcd_write
  4339   0017B8                     
  4340                           ;clcd.c: 57:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4341   0017B8  0EA6               	movlw	166
  4342   0017BA                     u2427:
  4343   0017BA  2EE8               	decfsz	wreg,f,c
  4344   0017BC  D7FE               	bra	u2427
  4345   0017BE  D000               	nop2	
  4346   0017C0                     
  4347                           ;clcd.c: 58:     clcd_write(0x38, 0);
  4348   0017C0  0E00               	movlw	0
  4349   0017C2  6E37               	movwf	clcd_write@control_bit^0,c
  4350   0017C4  0E38               	movlw	56
  4351   0017C6  EC4F  F009         	call	_clcd_write
  4352   0017CA                     
  4353                           ;clcd.c: 59:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4354   0017CA  0EA6               	movlw	166
  4355   0017CC                     u2437:
  4356   0017CC  2EE8               	decfsz	wreg,f,c
  4357   0017CE  D7FE               	bra	u2437
  4358   0017D0  D000               	nop2	
  4359   0017D2                     
  4360                           ;clcd.c: 60:     clcd_write(0x01, 0);
  4361   0017D2  0E00               	movlw	0
  4362   0017D4  6E37               	movwf	clcd_write@control_bit^0,c
  4363   0017D6  0E01               	movlw	1
  4364   0017D8  EC4F  F009         	call	_clcd_write
  4365   0017DC                     
  4366                           ;clcd.c: 61:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  4367   0017DC  0E04               	movlw	4
  4368   0017DE  6E39               	movwf	??_init_clcd^0,c
  4369   0017E0  0E3E               	movlw	62
  4370   0017E2                     u2447:
  4371   0017E2  2EE8               	decfsz	wreg,f,c
  4372   0017E4  D7FE               	bra	u2447
  4373   0017E6  2E39               	decfsz	??_init_clcd^0,f,c
  4374   0017E8  D7FC               	bra	u2447
  4375   0017EA                     
  4376                           ;clcd.c: 62:     clcd_write(0x0C, 0);
  4377   0017EA  0E00               	movlw	0
  4378   0017EC  6E37               	movwf	clcd_write@control_bit^0,c
  4379   0017EE  0E0C               	movlw	12
  4380   0017F0  EC4F  F009         	call	_clcd_write
  4381   0017F4                     
  4382                           ;clcd.c: 63:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  4383   0017F4  0EA6               	movlw	166
  4384   0017F6                     u2457:
  4385   0017F6  2EE8               	decfsz	wreg,f,c
  4386   0017F8  D7FE               	bra	u2457
  4387   0017FA  D000               	nop2	
  4388   0017FC  0012               	return		;funcret
  4389   0017FE                     __end_of_init_clcd:
  4390                           	callstack 0
  4391                           
  4392 ;; *************** function _init_adc *****************
  4393 ;; Defined at:
  4394 ;;		line 12 in file "adc.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;		None
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;		None
  4399 ;; Return value:  Size  Location     Type
  4400 ;;                  1    wreg      void 
  4401 ;; Registers used:
  4402 ;;		wreg, status,2
  4403 ;; Tracked objects:
  4404 ;;		On entry : 0/0
  4405 ;;		On exit  : 0/0
  4406 ;;		Unchanged: 0/0
  4407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4408 ;;      Params:         0       0       0       0       0       0       0
  4409 ;;      Locals:         0       0       0       0       0       0       0
  4410 ;;      Temps:          0       0       0       0       0       0       0
  4411 ;;      Totals:         0       0       0       0       0       0       0
  4412 ;;Total ram usage:        0 bytes
  4413 ;; Hardware stack levels used: 1
  4414 ;; This function calls:
  4415 ;;		Nothing
  4416 ;; This function is called by:
  4417 ;;		_init_config
  4418 ;; This function uses a non-reentrant model
  4419 ;;
  4420                           
  4421                           	psect	text20
  4422   0011AE                     __ptext20:
  4423                           	callstack 0
  4424   0011AE                     _init_adc:
  4425                           	callstack 29
  4426   0011AE                     
  4427                           ;adc.c: 15:  ADFM = 1;
  4428   0011AE  8EC0               	bsf	4032,7,c	;volatile
  4429                           
  4430                           ;adc.c: 21:  ACQT2 = 0;
  4431   0011B0  9AC0               	bcf	4032,5,c	;volatile
  4432                           
  4433                           ;adc.c: 22:  ACQT1 = 1;
  4434   0011B2  88C0               	bsf	4032,4,c	;volatile
  4435                           
  4436                           ;adc.c: 23:  ACQT0 = 0;
  4437   0011B4  96C0               	bcf	4032,3,c	;volatile
  4438                           
  4439                           ;adc.c: 29:  ADCS0 = 0;
  4440   0011B6  90C0               	bcf	4032,0,c	;volatile
  4441                           
  4442                           ;adc.c: 30:  ADCS1 = 1;
  4443   0011B8  82C0               	bsf	4032,1,c	;volatile
  4444                           
  4445                           ;adc.c: 31:  ADCS2 = 0;
  4446   0011BA  94C0               	bcf	4032,2,c	;volatile
  4447                           
  4448                           ;adc.c: 34:  GODONE = 0;
  4449   0011BC  92C2               	bcf	4034,1,c	;volatile
  4450                           
  4451                           ;adc.c: 39:  VCFG1 = 0;
  4452   0011BE  9AC1               	bcf	4033,5,c	;volatile
  4453                           
  4454                           ;adc.c: 41:  VCFG0 = 0;
  4455   0011C0  98C1               	bcf	4033,4,c	;volatile
  4456   0011C2                     
  4457                           ;adc.c: 44:  ADRESH = 0;
  4458   0011C2  0E00               	movlw	0
  4459   0011C4  6EC4               	movwf	196,c	;volatile
  4460                           
  4461                           ;adc.c: 45:  ADRESL = 0;
  4462   0011C6  0E00               	movlw	0
  4463   0011C8  6EC3               	movwf	195,c	;volatile
  4464   0011CA                     
  4465                           ;adc.c: 48:  ADON = 1;
  4466   0011CA  80C2               	bsf	4034,0,c	;volatile
  4467   0011CC  0012               	return		;funcret
  4468   0011CE                     __end_of_init_adc:
  4469                           	callstack 0
  4470                           
  4471 ;; *************** function _download_logs *****************
  4472 ;; Defined at:
  4473 ;;		line 237 in file "main.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;		None
  4476 ;; Auto vars:     Size  Location     Type
  4477 ;;  j               2   11[COMRAM] int 
  4478 ;;  i               2   13[COMRAM] int 
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  1    wreg      void 
  4481 ;; Registers used:
  4482 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/0
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4488 ;;      Params:         0       0       0       0       0       0       0
  4489 ;;      Locals:         4       0       0       0       0       0       0
  4490 ;;      Temps:          2       0       0       0       0       0       0
  4491 ;;      Totals:         6       0       0       0       0       0       0
  4492 ;;Total ram usage:        6 bytes
  4493 ;; Hardware stack levels used: 1
  4494 ;; Hardware stack levels required when called: 2
  4495 ;; This function calls:
  4496 ;;		___wmul
  4497 ;;		_clcd_print
  4498 ;;		_clcd_write
  4499 ;;		_putch
  4500 ;;		_puts
  4501 ;; This function is called by:
  4502 ;;		_main
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506                           	psect	text21
  4507   001D92                     __ptext21:
  4508                           	callstack 0
  4509   001D92                     _download_logs:
  4510                           	callstack 28
  4511   001D92                     
  4512                           ;main.c: 239:     if (event_count == 0) {
  4513   001D92  501E               	movf	_event_count^0,w,c
  4514   001D94  101F               	iorwf	(_event_count+1)^0,w,c
  4515   001D96  A4D8               	btfss	status,2,c
  4516   001D98  EFD0  F00E         	goto	u1901
  4517   001D9C  EFD2  F00E         	goto	u1900
  4518   001DA0                     u1901:
  4519   001DA0  EFF9  F00E         	goto	l2779
  4520   001DA4                     u1900:
  4521   001DA4                     
  4522                           ;main.c: 240:         clcd_print("NO LOGS..          ", (0x80 + (0)));
  4523   001DA4  0E63               	movlw	low STR_14
  4524   001DA6  6E3D               	movwf	clcd_print@data^0,c
  4525   001DA8  0E2F               	movlw	high STR_14
  4526   001DAA  6E3E               	movwf	(clcd_print@data+1)^0,c
  4527   001DAC  0E80               	movlw	128
  4528   001DAE  6E3F               	movwf	clcd_print@addr^0,c
  4529   001DB0  EC64  F00A         	call	_clcd_print	;wreg free
  4530                           
  4531                           ;main.c: 241:         clcd_print("  TO DOWNLOAD :(    ", (0xC0 + (0)));
  4532   001DB4  0E4E               	movlw	low STR_17
  4533   001DB6  6E3D               	movwf	clcd_print@data^0,c
  4534   001DB8  0E2F               	movlw	high STR_17
  4535   001DBA  6E3E               	movwf	(clcd_print@data+1)^0,c
  4536   001DBC  0EC0               	movlw	192
  4537   001DBE  6E3F               	movwf	clcd_print@addr^0,c
  4538   001DC0  EC64  F00A         	call	_clcd_print	;wreg free
  4539   001DC4                     
  4540                           ;main.c: 242:         _delay((unsigned long)((1000)*(20000000/4000.0)));
  4541   001DC4  0E1A               	movlw	26
  4542   001DC6  6E41               	movwf	(??_download_logs+1)^0,c
  4543   001DC8  0E5E               	movlw	94
  4544   001DCA  6E40               	movwf	??_download_logs^0,c
  4545   001DCC  0E6E               	movlw	110
  4546   001DCE                     u2467:
  4547   001DCE  2EE8               	decfsz	wreg,f,c
  4548   001DD0  D7FE               	bra	u2467
  4549   001DD2  2E40               	decfsz	??_download_logs^0,f,c
  4550   001DD4  D7FC               	bra	u2467
  4551   001DD6  2E41               	decfsz	(??_download_logs+1)^0,f,c
  4552   001DD8  D7FA               	bra	u2467
  4553   001DDA  D000               	nop2	
  4554   001DDC                     
  4555                           ;main.c: 243:         flag = 1;
  4556   001DDC  0E00               	movlw	0
  4557   001DDE  6E23               	movwf	(_flag+1)^0,c
  4558   001DE0  0E01               	movlw	1
  4559   001DE2  6E22               	movwf	_flag^0,c
  4560   001DE4                     
  4561                           ;main.c: 244:         clcd_write(0x01, 0);
  4562   001DE4  0E00               	movlw	0
  4563   001DE6  6E37               	movwf	clcd_write@control_bit^0,c
  4564   001DE8  0E01               	movlw	1
  4565   001DEA  EC4F  F009         	call	_clcd_write
  4566                           
  4567                           ;main.c: 245:     } else {
  4568   001DEE  EF1E  F00F         	goto	l2787
  4569   001DF2                     l2779:
  4570                           
  4571                           ;main.c: 246:         clcd_print("Downloading         ", (0x80 + (0)));
  4572   001DF2  0E24               	movlw	low STR_18
  4573   001DF4  6E3D               	movwf	clcd_print@data^0,c
  4574   001DF6  0E2F               	movlw	high STR_18
  4575   001DF8  6E3E               	movwf	(clcd_print@data+1)^0,c
  4576   001DFA  0E80               	movlw	128
  4577   001DFC  6E3F               	movwf	clcd_print@addr^0,c
  4578   001DFE  EC64  F00A         	call	_clcd_print	;wreg free
  4579                           
  4580                           ;main.c: 247:         clcd_print("Through UART        ", (0xC0 + (0)));
  4581   001E02  0E39               	movlw	low STR_19
  4582   001E04  6E3D               	movwf	clcd_print@data^0,c
  4583   001E06  0E2F               	movlw	high STR_19
  4584   001E08  6E3E               	movwf	(clcd_print@data+1)^0,c
  4585   001E0A  0EC0               	movlw	192
  4586   001E0C  6E3F               	movwf	clcd_print@addr^0,c
  4587   001E0E  EC64  F00A         	call	_clcd_print	;wreg free
  4588   001E12                     
  4589                           ;main.c: 248:         _delay((unsigned long)((1000)*(20000000/4000.0)));
  4590   001E12  0E1A               	movlw	26
  4591   001E14  6E41               	movwf	(??_download_logs+1)^0,c
  4592   001E16  0E5E               	movlw	94
  4593   001E18  6E40               	movwf	??_download_logs^0,c
  4594   001E1A  0E6E               	movlw	110
  4595   001E1C                     u2477:
  4596   001E1C  2EE8               	decfsz	wreg,f,c
  4597   001E1E  D7FE               	bra	u2477
  4598   001E20  2E40               	decfsz	??_download_logs^0,f,c
  4599   001E22  D7FC               	bra	u2477
  4600   001E24  2E41               	decfsz	(??_download_logs+1)^0,f,c
  4601   001E26  D7FA               	bra	u2477
  4602   001E28  D000               	nop2	
  4603   001E2A                     
  4604                           ;main.c: 249:         flag = 1;
  4605   001E2A  0E00               	movlw	0
  4606   001E2C  6E23               	movwf	(_flag+1)^0,c
  4607   001E2E  0E01               	movlw	1
  4608   001E30  6E22               	movwf	_flag^0,c
  4609   001E32                     
  4610                           ;main.c: 250:         clcd_write(0x01, 0);
  4611   001E32  0E00               	movlw	0
  4612   001E34  6E37               	movwf	clcd_write@control_bit^0,c
  4613   001E36  0E01               	movlw	1
  4614   001E38  EC4F  F009         	call	_clcd_write
  4615   001E3C                     l2787:
  4616                           
  4617                           ;main.c: 252:     puts("ID  TIME    EV  SP\n\r");
  4618   001E3C  0E0F               	movlw	low STR_20
  4619   001E3E  6E38               	movwf	puts@s^0,c
  4620   001E40  0E2F               	movlw	high STR_20
  4621   001E42  6E39               	movwf	(puts@s+1)^0,c
  4622   001E44  EC34  F009         	call	_puts	;wreg free
  4623   001E48                     
  4624                           ;main.c: 253:     for (int i = 0; i < event_count; i++) {
  4625   001E48  0E00               	movlw	0
  4626   001E4A  6E45               	movwf	(download_logs@i+1)^0,c
  4627   001E4C  0E00               	movlw	0
  4628   001E4E  6E44               	movwf	download_logs@i^0,c
  4629   001E50  EF78  F00F         	goto	l2807
  4630   001E54                     l2791:
  4631                           
  4632                           ;main.c: 254:         putch(i+48);
  4633   001E54  5044               	movf	download_logs@i^0,w,c
  4634   001E56  0F30               	addlw	48
  4635   001E58  ECA2  F008         	call	_putch
  4636   001E5C                     
  4637                           ;main.c: 255:         putch(' ');
  4638   001E5C  0E20               	movlw	32
  4639   001E5E  ECA2  F008         	call	_putch
  4640   001E62                     
  4641                           ;main.c: 256:         for (int j = 0; time_v[i][j] != '\0'; j++) {
  4642   001E62  0E00               	movlw	0
  4643   001E64  6E43               	movwf	(download_logs@j+1)^0,c
  4644   001E66  0E00               	movlw	0
  4645   001E68  6E42               	movwf	download_logs@j^0,c
  4646   001E6A  EF52  F00F         	goto	l2801
  4647   001E6E                     l2797:
  4648                           
  4649                           ;main.c: 257:             putch(time_v[i][j]);
  4650   001E6E  C044  F037         	movff	download_logs@i,___wmul@multiplier
  4651   001E72  C045  F038         	movff	download_logs@i+1,___wmul@multiplier+1
  4652   001E76  0E00               	movlw	0
  4653   001E78  6E3A               	movwf	(___wmul@multiplicand+1)^0,c
  4654   001E7A  0E0F               	movlw	15
  4655   001E7C  6E39               	movwf	___wmul@multiplicand^0,c
  4656   001E7E  ECF7  F008         	call	___wmul	;wreg free
  4657   001E82  0E00               	movlw	low _time_v
  4658   001E84  2437               	addwf	?___wmul^0,w,c
  4659   001E86  6E40               	movwf	??_download_logs^0,c
  4660   001E88  0E01               	movlw	high _time_v
  4661   001E8A  2038               	addwfc	(?___wmul+1)^0,w,c
  4662   001E8C  6E41               	movwf	(??_download_logs+1)^0,c
  4663   001E8E  5042               	movf	download_logs@j^0,w,c
  4664   001E90  2440               	addwf	??_download_logs^0,w,c
  4665   001E92  6ED9               	movwf	fsr2l,c
  4666   001E94  5043               	movf	(download_logs@j+1)^0,w,c
  4667   001E96  2041               	addwfc	(??_download_logs+1)^0,w,c
  4668   001E98  6EDA               	movwf	fsr2h,c
  4669   001E9A  50DF               	movf	indf2,w,c
  4670   001E9C  ECA2  F008         	call	_putch
  4671   001EA0                     
  4672                           ;main.c: 258:         }
  4673   001EA0  4A42               	infsnz	download_logs@j^0,f,c
  4674   001EA2  2A43               	incf	(download_logs@j+1)^0,f,c
  4675   001EA4                     l2801:
  4676   001EA4  C044  F037         	movff	download_logs@i,___wmul@multiplier
  4677   001EA8  C045  F038         	movff	download_logs@i+1,___wmul@multiplier+1
  4678   001EAC  0E00               	movlw	0
  4679   001EAE  6E3A               	movwf	(___wmul@multiplicand+1)^0,c
  4680   001EB0  0E0F               	movlw	15
  4681   001EB2  6E39               	movwf	___wmul@multiplicand^0,c
  4682   001EB4  ECF7  F008         	call	___wmul	;wreg free
  4683   001EB8  0E00               	movlw	low _time_v
  4684   001EBA  2437               	addwf	?___wmul^0,w,c
  4685   001EBC  6E40               	movwf	??_download_logs^0,c
  4686   001EBE  0E01               	movlw	high _time_v
  4687   001EC0  2038               	addwfc	(?___wmul+1)^0,w,c
  4688   001EC2  6E41               	movwf	(??_download_logs+1)^0,c
  4689   001EC4  5042               	movf	download_logs@j^0,w,c
  4690   001EC6  2440               	addwf	??_download_logs^0,w,c
  4691   001EC8  6ED9               	movwf	fsr2l,c
  4692   001ECA  5043               	movf	(download_logs@j+1)^0,w,c
  4693   001ECC  2041               	addwfc	(??_download_logs+1)^0,w,c
  4694   001ECE  6EDA               	movwf	fsr2h,c
  4695   001ED0  50DF               	movf	indf2,w,c
  4696   001ED2  A4D8               	btfss	status,2,c
  4697   001ED4  EF6E  F00F         	goto	u1911
  4698   001ED8  EF70  F00F         	goto	u1910
  4699   001EDC                     u1911:
  4700   001EDC  EF37  F00F         	goto	l2797
  4701   001EE0                     u1910:
  4702   001EE0                     
  4703                           ;main.c: 259:         puts("\n\r");
  4704   001EE0  0E21               	movlw	low (STR_20+18)
  4705   001EE2  6E38               	movwf	puts@s^0,c
  4706   001EE4  0E2F               	movlw	high (STR_20+18)
  4707   001EE6  6E39               	movwf	(puts@s+1)^0,c
  4708   001EE8  EC34  F009         	call	_puts	;wreg free
  4709   001EEC                     
  4710                           ;main.c: 260:     }
  4711   001EEC  4A44               	infsnz	download_logs@i^0,f,c
  4712   001EEE  2A45               	incf	(download_logs@i+1)^0,f,c
  4713   001EF0                     l2807:
  4714   001EF0  501E               	movf	_event_count^0,w,c
  4715   001EF2  5C44               	subwf	download_logs@i^0,w,c
  4716   001EF4  5045               	movf	(download_logs@i+1)^0,w,c
  4717   001EF6  0A80               	xorlw	128
  4718   001EF8  6E40               	movwf	??_download_logs^0,c
  4719   001EFA  501F               	movf	(_event_count+1)^0,w,c
  4720   001EFC  0A80               	xorlw	128
  4721   001EFE  5840               	subwfb	??_download_logs^0,w,c
  4722   001F00  A0D8               	btfss	status,0,c
  4723   001F02  EF85  F00F         	goto	u1921
  4724   001F06  EF87  F00F         	goto	u1920
  4725   001F0A                     u1921:
  4726   001F0A  EF2A  F00F         	goto	l2791
  4727   001F0E                     u1920:
  4728   001F0E                     
  4729                           ;main.c: 261:     clcd_write(0x01, 0);
  4730   001F0E  0E00               	movlw	0
  4731   001F10  6E37               	movwf	clcd_write@control_bit^0,c
  4732   001F12  0E01               	movlw	1
  4733   001F14  EC4F  F009         	call	_clcd_write
  4734   001F18                     
  4735                           ;main.c: 262:     menu_cnt = 0;
  4736   001F18  0E00               	movlw	0
  4737   001F1A  6E19               	movwf	(_menu_cnt+1)^0,c
  4738   001F1C  0E00               	movlw	0
  4739   001F1E  6E18               	movwf	_menu_cnt^0,c
  4740   001F20                     
  4741                           ;main.c: 263:     i=0;
  4742   001F20  0E00               	movlw	0
  4743   001F22  6E17               	movwf	(_i+1)^0,c
  4744   001F24  0E00               	movlw	0
  4745   001F26  6E16               	movwf	_i^0,c
  4746   001F28  0012               	return		;funcret
  4747   001F2A                     __end_of_download_logs:
  4748                           	callstack 0
  4749                           
  4750 ;; *************** function _puts *****************
  4751 ;; Defined at:
  4752 ;;		line 73 in file "uart.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;  s               2    1[COMRAM] PTR const unsigned char 
  4755 ;;		 -> STR_21(3), STR_20(21), 
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;		None
  4758 ;; Return value:  Size  Location     Type
  4759 ;;                  2    1[COMRAM] int 
  4760 ;; Registers used:
  4761 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4762 ;; Tracked objects:
  4763 ;;		On entry : 0/0
  4764 ;;		On exit  : 0/0
  4765 ;;		Unchanged: 0/0
  4766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4767 ;;      Params:         2       0       0       0       0       0       0
  4768 ;;      Locals:         0       0       0       0       0       0       0
  4769 ;;      Temps:          0       0       0       0       0       0       0
  4770 ;;      Totals:         2       0       0       0       0       0       0
  4771 ;;Total ram usage:        2 bytes
  4772 ;; Hardware stack levels used: 1
  4773 ;; Hardware stack levels required when called: 1
  4774 ;; This function calls:
  4775 ;;		_putch
  4776 ;; This function is called by:
  4777 ;;		_download_logs
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781                           	psect	text22
  4782   001268                     __ptext22:
  4783                           	callstack 0
  4784   001268                     _puts:
  4785                           	callstack 28
  4786   001268                     
  4787                           ;uart.c: 73: int puts(const char *s);uart.c: 74: {;uart.c: 75:  while(*s)
  4788   001268  EF40  F009         	goto	l2521
  4789   00126C                     l2517:
  4790                           
  4791                           ;uart.c: 76:  {;uart.c: 77:   putch(*s++);
  4792   00126C  C038  FFF6         	movff	puts@s,tblptrl
  4793   001270  C039  FFF7         	movff	puts@s+1,tblptrh
  4794   001274                     	if	0	;tblptru may be non-zero
  4795   001274                     	endif
  4796   001274                     	if	0	;tblptru may be non-zero
  4797   001274                     	endif
  4798   001274  0008               	tblrd		*
  4799   001276  50F5               	movf	tablat,w,c
  4800   001278  ECA2  F008         	call	_putch
  4801   00127C  4A38               	infsnz	puts@s^0,f,c
  4802   00127E  2A39               	incf	(puts@s+1)^0,f,c
  4803   001280                     l2521:
  4804                           
  4805                           ;uart.c: 75:  while(*s)
  4806   001280  C038  FFF6         	movff	puts@s,tblptrl
  4807   001284  C039  FFF7         	movff	puts@s+1,tblptrh
  4808   001288                     	if	0	;tblptru may be non-zero
  4809   001288                     	endif
  4810   001288                     	if	0	;tblptru may be non-zero
  4811   001288                     	endif
  4812   001288  0008               	tblrd		*
  4813   00128A  50F5               	movf	tablat,w,c
  4814   00128C  0900               	iorlw	0
  4815   00128E  A4D8               	btfss	status,2,c
  4816   001290  EF4C  F009         	goto	u1561
  4817   001294  EF4E  F009         	goto	u1560
  4818   001298                     u1561:
  4819   001298  EF36  F009         	goto	l2517
  4820   00129C                     u1560:
  4821   00129C  0012               	return		;funcret
  4822   00129E                     __end_of_puts:
  4823                           	callstack 0
  4824                           
  4825 ;; *************** function _putch *****************
  4826 ;; Defined at:
  4827 ;;		line 61 in file "uart.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;  byte            1    wreg     unsigned char 
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;  byte            1    0[COMRAM] unsigned char 
  4832 ;; Return value:  Size  Location     Type
  4833 ;;                  1    wreg      void 
  4834 ;; Registers used:
  4835 ;;		wreg
  4836 ;; Tracked objects:
  4837 ;;		On entry : 0/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4841 ;;      Params:         0       0       0       0       0       0       0
  4842 ;;      Locals:         1       0       0       0       0       0       0
  4843 ;;      Temps:          0       0       0       0       0       0       0
  4844 ;;      Totals:         1       0       0       0       0       0       0
  4845 ;;Total ram usage:        1 bytes
  4846 ;; Hardware stack levels used: 1
  4847 ;; This function calls:
  4848 ;;		Nothing
  4849 ;; This function is called by:
  4850 ;;		_download_logs
  4851 ;;		_puts
  4852 ;;		_getche
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           	psect	text23
  4857   001144                     __ptext23:
  4858                           	callstack 0
  4859   001144                     _putch:
  4860                           	callstack 28
  4861                           
  4862                           ;incstack = 0
  4863                           ;putch@byte stored from wreg
  4864   001144  6E37               	movwf	putch@byte^0,c
  4865   001146                     l511:
  4866                           
  4867                           ;uart.c: 65:  while(!TXIF)
  4868   001146  A89E               	btfss	3998,4,c	;volatile
  4869   001148  EFA8  F008         	goto	u1331
  4870   00114C  EFAA  F008         	goto	u1330
  4871   001150                     u1331:
  4872   001150  EFA3  F008         	goto	l511
  4873   001154                     u1330:
  4874   001154                     
  4875                           ;uart.c: 69:  TXIF = 0;
  4876   001154  989E               	bcf	3998,4,c	;volatile
  4877   001156                     
  4878                           ;uart.c: 70:  TXREG = byte;
  4879   001156  C037  FFAD         	movff	putch@byte,4013	;volatile
  4880   00115A  0012               	return		;funcret
  4881   00115C                     __end_of_putch:
  4882                           	callstack 0
  4883                           
  4884 ;; *************** function ___wmul *****************
  4885 ;; Defined at:
  4886 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  4887 ;; Parameters:    Size  Location     Type
  4888 ;;  multiplier      2    0[COMRAM] unsigned int 
  4889 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;  product         2    4[COMRAM] unsigned int 
  4892 ;; Return value:  Size  Location     Type
  4893 ;;                  2    0[COMRAM] unsigned int 
  4894 ;; Registers used:
  4895 ;;		wreg, status,2, status,0, prodl, prodh
  4896 ;; Tracked objects:
  4897 ;;		On entry : 0/0
  4898 ;;		On exit  : 0/0
  4899 ;;		Unchanged: 0/0
  4900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4901 ;;      Params:         4       0       0       0       0       0       0
  4902 ;;      Locals:         2       0       0       0       0       0       0
  4903 ;;      Temps:          0       0       0       0       0       0       0
  4904 ;;      Totals:         6       0       0       0       0       0       0
  4905 ;;Total ram usage:        6 bytes
  4906 ;; Hardware stack levels used: 1
  4907 ;; This function calls:
  4908 ;;		Nothing
  4909 ;; This function is called by:
  4910 ;;		_view_log
  4911 ;;		_download_logs
  4912 ;; This function uses a non-reentrant model
  4913 ;;
  4914                           
  4915                           	psect	text24
  4916   0011EE                     __ptext24:
  4917                           	callstack 0
  4918   0011EE                     ___wmul:
  4919                           	callstack 29
  4920   0011EE  5037               	movf	___wmul@multiplier^0,w,c
  4921   0011F0  0239               	mulwf	___wmul@multiplicand^0,c
  4922   0011F2  CFF3 F03B          	movff	prodl,___wmul@product
  4923   0011F6  CFF4 F03C          	movff	prodh,___wmul@product+1
  4924   0011FA  5037               	movf	___wmul@multiplier^0,w,c
  4925   0011FC  023A               	mulwf	(___wmul@multiplicand+1)^0,c
  4926   0011FE  50F3               	movf	243,w,c
  4927   001200  263C               	addwf	(___wmul@product+1)^0,f,c
  4928   001202  5038               	movf	(___wmul@multiplier+1)^0,w,c
  4929   001204  0239               	mulwf	___wmul@multiplicand^0,c
  4930   001206  50F3               	movf	243,w,c
  4931   001208  263C               	addwf	(___wmul@product+1)^0,f,c
  4932   00120A  C03B  F037         	movff	___wmul@product,?___wmul
  4933   00120E  C03C  F038         	movff	___wmul@product+1,?___wmul+1
  4934   001212  0012               	return		;funcret
  4935   001214                     __end_of___wmul:
  4936                           	callstack 0
  4937                           
  4938 ;; *************** function _display_time *****************
  4939 ;; Defined at:
  4940 ;;		line 87 in file "main.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;		None
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;		None
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  1    wreg      void 
  4947 ;; Registers used:
  4948 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4954 ;;      Params:         0       0       0       0       0       0       0
  4955 ;;      Locals:         0       0       0       0       0       0       0
  4956 ;;      Temps:          0       0       0       0       0       0       0
  4957 ;;      Totals:         0       0       0       0       0       0       0
  4958 ;;Total ram usage:        0 bytes
  4959 ;; Hardware stack levels used: 1
  4960 ;; Hardware stack levels required when called: 2
  4961 ;; This function calls:
  4962 ;;		_clcd_print
  4963 ;; This function is called by:
  4964 ;;		_main
  4965 ;; This function uses a non-reentrant model
  4966 ;;
  4967                           
  4968                           	psect	text25
  4969   0010F2                     __ptext25:
  4970                           	callstack 0
  4971   0010F2                     _display_time:
  4972                           	callstack 28
  4973   0010F2                     
  4974                           ;main.c: 88:     clcd_print(time, (0xC0 + (0)));
  4975   0010F2  0E2E               	movlw	low _time
  4976   0010F4  6E3D               	movwf	clcd_print@data^0,c
  4977   0010F6  0E00               	movlw	high _time
  4978   0010F8  6E3E               	movwf	(clcd_print@data+1)^0,c
  4979   0010FA  0EC0               	movlw	192
  4980   0010FC  6E3F               	movwf	clcd_print@addr^0,c
  4981   0010FE  EC64  F00A         	call	_clcd_print	;wreg free
  4982   001102  0012               	return		;funcret
  4983   001104                     __end_of_display_time:
  4984                           	callstack 0
  4985                           
  4986 ;; *************** function _display_speed *****************
  4987 ;; Defined at:
  4988 ;;		line 76 in file "main.c"
  4989 ;; Parameters:    Size  Location     Type
  4990 ;;		None
  4991 ;; Auto vars:     Size  Location     Type
  4992 ;;  adc_val         4   27[COMRAM] unsigned long 
  4993 ;; Return value:  Size  Location     Type
  4994 ;;                  1    wreg      void 
  4995 ;; Registers used:
  4996 ;;		wreg, status,2, status,0, cstack
  4997 ;; Tracked objects:
  4998 ;;		On entry : 0/0
  4999 ;;		On exit  : 0/0
  5000 ;;		Unchanged: 0/0
  5001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5002 ;;      Params:         0       0       0       0       0       0       0
  5003 ;;      Locals:         4       0       0       0       0       0       0
  5004 ;;      Temps:          0       0       0       0       0       0       0
  5005 ;;      Totals:         4       0       0       0       0       0       0
  5006 ;;Total ram usage:        4 bytes
  5007 ;; Hardware stack levels used: 1
  5008 ;; Hardware stack levels required when called: 2
  5009 ;; This function calls:
  5010 ;;		___lldiv
  5011 ;;		___llmod
  5012 ;;		___lmul
  5013 ;;		_clcd_putch
  5014 ;;		_read_adc
  5015 ;; This function is called by:
  5016 ;;		_main
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020                           	psect	text26
  5021   001972                     __ptext26:
  5022                           	callstack 0
  5023   001972                     _display_speed:
  5024                           	callstack 28
  5025   001972                     
  5026                           ;main.c: 77:     unsigned long int adc_val;;main.c: 78:     adc_val = read_adc(0x04);
  5027   001972  0E04               	movlw	4
  5028   001974  EC8C  F009         	call	_read_adc
  5029   001978  C037  F052         	movff	?_read_adc,display_speed@adc_val
  5030   00197C  C038  F053         	movff	?_read_adc+1,display_speed@adc_val+1
  5031   001980  6A54               	clrf	(display_speed@adc_val+2)^0,c
  5032   001982  6A55               	clrf	(display_speed@adc_val+3)^0,c
  5033                           
  5034                           ;main.c: 79:     speed = (adc_val * 99) / 1023;
  5035   001984  C052  F037         	movff	display_speed@adc_val,___lmul@multiplier
  5036   001988  C053  F038         	movff	display_speed@adc_val+1,___lmul@multiplier+1
  5037   00198C  C054  F039         	movff	display_speed@adc_val+2,___lmul@multiplier+2
  5038   001990  C055  F03A         	movff	display_speed@adc_val+3,___lmul@multiplier+3
  5039   001994  0E63               	movlw	99
  5040   001996  6E3B               	movwf	___lmul@multiplicand^0,c
  5041   001998  0E00               	movlw	0
  5042   00199A  6E3C               	movwf	(___lmul@multiplicand+1)^0,c
  5043   00199C  0E00               	movlw	0
  5044   00199E  6E3D               	movwf	(___lmul@multiplicand+2)^0,c
  5045   0019A0  0E00               	movlw	0
  5046   0019A2  6E3E               	movwf	(___lmul@multiplicand+3)^0,c
  5047   0019A4  EC2F  F00A         	call	___lmul	;wreg free
  5048   0019A8  C037  F043         	movff	?___lmul,___lldiv@dividend
  5049   0019AC  C038  F044         	movff	?___lmul+1,___lldiv@dividend+1
  5050   0019B0  C039  F045         	movff	?___lmul+2,___lldiv@dividend+2
  5051   0019B4  C03A  F046         	movff	?___lmul+3,___lldiv@dividend+3
  5052   0019B8  0EFF               	movlw	255
  5053   0019BA  6E47               	movwf	___lldiv@divisor^0,c
  5054   0019BC  0E03               	movlw	3
  5055   0019BE  6E48               	movwf	(___lldiv@divisor+1)^0,c
  5056   0019C0  0E00               	movlw	0
  5057   0019C2  6E49               	movwf	(___lldiv@divisor+2)^0,c
  5058   0019C4  0E00               	movlw	0
  5059   0019C6  6E4A               	movwf	(___lldiv@divisor+3)^0,c
  5060   0019C8  EC59  F00B         	call	___lldiv	;wreg free
  5061   0019CC  C043  F005         	movff	?___lldiv,_speed
  5062   0019D0  C044  F006         	movff	?___lldiv+1,_speed+1
  5063   0019D4  C045  F007         	movff	?___lldiv+2,_speed+2
  5064   0019D8  C046  F008         	movff	?___lldiv+3,_speed+3
  5065                           
  5066                           ;main.c: 81:     clcd_putch((speed / 10) + '0', (0xC0 + (14)));
  5067   0019DC  0ECE               	movlw	206
  5068   0019DE  6E50               	movwf	clcd_putch@addr^0,c
  5069   0019E0  C005  F043         	movff	_speed,___lldiv@dividend
  5070   0019E4  C006  F044         	movff	_speed+1,___lldiv@dividend+1
  5071   0019E8  C007  F045         	movff	_speed+2,___lldiv@dividend+2
  5072   0019EC  C008  F046         	movff	_speed+3,___lldiv@dividend+3
  5073   0019F0  0E0A               	movlw	10
  5074   0019F2  6E47               	movwf	___lldiv@divisor^0,c
  5075   0019F4  0E00               	movlw	0
  5076   0019F6  6E48               	movwf	(___lldiv@divisor+1)^0,c
  5077   0019F8  0E00               	movlw	0
  5078   0019FA  6E49               	movwf	(___lldiv@divisor+2)^0,c
  5079   0019FC  0E00               	movlw	0
  5080   0019FE  6E4A               	movwf	(___lldiv@divisor+3)^0,c
  5081   001A00  EC59  F00B         	call	___lldiv	;wreg free
  5082   001A04  5043               	movf	?___lldiv^0,w,c
  5083   001A06  0F30               	addlw	48
  5084   001A08  EC96  F008         	call	_clcd_putch
  5085                           
  5086                           ;main.c: 82:     clcd_putch((speed % 10) + '0', (0xC0 + (15)));
  5087   001A0C  0ECF               	movlw	207
  5088   001A0E  6E50               	movwf	clcd_putch@addr^0,c
  5089   001A10  C005  F037         	movff	_speed,___llmod@dividend
  5090   001A14  C006  F038         	movff	_speed+1,___llmod@dividend+1
  5091   001A18  C007  F039         	movff	_speed+2,___llmod@dividend+2
  5092   001A1C  C008  F03A         	movff	_speed+3,___llmod@dividend+3
  5093   001A20  0E0A               	movlw	10
  5094   001A22  6E3B               	movwf	___llmod@divisor^0,c
  5095   001A24  0E00               	movlw	0
  5096   001A26  6E3C               	movwf	(___llmod@divisor+1)^0,c
  5097   001A28  0E00               	movlw	0
  5098   001A2A  6E3D               	movwf	(___llmod@divisor+2)^0,c
  5099   001A2C  0E00               	movlw	0
  5100   001A2E  6E3E               	movwf	(___llmod@divisor+3)^0,c
  5101   001A30  EC15  F00B         	call	___llmod	;wreg free
  5102   001A34  5037               	movf	?___llmod^0,w,c
  5103   001A36  0F30               	addlw	48
  5104   001A38  EC96  F008         	call	_clcd_putch
  5105   001A3C  0012               	return		;funcret
  5106   001A3E                     __end_of_display_speed:
  5107                           	callstack 0
  5108                           
  5109 ;; *************** function _read_adc *****************
  5110 ;; Defined at:
  5111 ;;		line 51 in file "adc.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;  channel         1    wreg     unsigned char 
  5114 ;; Auto vars:     Size  Location     Type
  5115 ;;  channel         1    6[COMRAM] unsigned char 
  5116 ;;  reg_val         2    4[COMRAM] unsigned short 
  5117 ;; Return value:  Size  Location     Type
  5118 ;;                  2    0[COMRAM] unsigned short 
  5119 ;; Registers used:
  5120 ;;		wreg, status,2, status,0
  5121 ;; Tracked objects:
  5122 ;;		On entry : 0/0
  5123 ;;		On exit  : 0/0
  5124 ;;		Unchanged: 0/0
  5125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5126 ;;      Params:         2       0       0       0       0       0       0
  5127 ;;      Locals:         3       0       0       0       0       0       0
  5128 ;;      Temps:          2       0       0       0       0       0       0
  5129 ;;      Totals:         7       0       0       0       0       0       0
  5130 ;;Total ram usage:        7 bytes
  5131 ;; Hardware stack levels used: 1
  5132 ;; This function calls:
  5133 ;;		Nothing
  5134 ;; This function is called by:
  5135 ;;		_display_speed
  5136 ;; This function uses a non-reentrant model
  5137 ;;
  5138                           
  5139                           	psect	text27
  5140   001318                     __ptext27:
  5141                           	callstack 0
  5142   001318                     _read_adc:
  5143                           	callstack 29
  5144                           
  5145                           ;incstack = 0
  5146                           ;read_adc@channel stored from wreg
  5147   001318  6E3D               	movwf	read_adc@channel^0,c
  5148   00131A                     
  5149                           ;adc.c: 51: unsigned short read_adc(unsigned char channel);adc.c: 52: {;adc.c: 53:  unsi
      +                          gned short reg_val;;adc.c: 56:  ADCON0 = (ADCON0 & 0xC3) | (channel << 2);
  5150   00131A  C03D  F039         	movff	read_adc@channel,??_read_adc
  5151   00131E  90D8               	bcf	status,0,c
  5152   001320  3639               	rlcf	??_read_adc^0,f,c
  5153   001322  90D8               	bcf	status,0,c
  5154   001324  3639               	rlcf	??_read_adc^0,f,c
  5155   001326  50C2               	movf	194,w,c	;volatile
  5156   001328  0BC3               	andlw	195
  5157   00132A  1039               	iorwf	??_read_adc^0,w,c
  5158   00132C  6EC2               	movwf	194,c	;volatile
  5159   00132E                     
  5160                           ;adc.c: 59:  GO = 1;
  5161   00132E  82C2               	bsf	4034,1,c	;volatile
  5162   001330                     l362:
  5163   001330  B2C2               	btfsc	4034,1,c	;volatile
  5164   001332  EF9D  F009         	goto	u1541
  5165   001336  EF9F  F009         	goto	u1540
  5166   00133A                     u1541:
  5167   00133A  EF98  F009         	goto	l362
  5168   00133E                     u1540:
  5169   00133E                     
  5170                           ;adc.c: 61:  reg_val = (ADRESH << 8) | ADRESL;
  5171   00133E  50C3               	movf	195,w,c	;volatile
  5172   001340  CFC4 F039          	movff	4036,??_read_adc	;volatile
  5173   001344  6A3A               	clrf	(??_read_adc+1)^0,c
  5174   001346  C039  F03A         	movff	??_read_adc,??_read_adc+1
  5175   00134A  6A39               	clrf	??_read_adc^0,c
  5176   00134C  1039               	iorwf	??_read_adc^0,w,c
  5177   00134E  6E3B               	movwf	read_adc@reg_val^0,c
  5178   001350  503A               	movf	(??_read_adc+1)^0,w,c
  5179   001352  6E3C               	movwf	(read_adc@reg_val+1)^0,c
  5180   001354                     
  5181                           ;adc.c: 63:  return reg_val;
  5182   001354  C03B  F037         	movff	read_adc@reg_val,?_read_adc
  5183   001358  C03C  F038         	movff	read_adc@reg_val+1,?_read_adc+1
  5184   00135C  0012               	return		;funcret
  5185   00135E                     __end_of_read_adc:
  5186                           	callstack 0
  5187                           
  5188 ;; *************** function ___lmul *****************
  5189 ;; Defined at:
  5190 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul32.c"
  5191 ;; Parameters:    Size  Location     Type
  5192 ;;  multiplier      4    0[COMRAM] unsigned long 
  5193 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;  product         4    8[COMRAM] unsigned long 
  5196 ;; Return value:  Size  Location     Type
  5197 ;;                  4    0[COMRAM] unsigned long 
  5198 ;; Registers used:
  5199 ;;		wreg, status,2, status,0
  5200 ;; Tracked objects:
  5201 ;;		On entry : 0/0
  5202 ;;		On exit  : 0/0
  5203 ;;		Unchanged: 0/0
  5204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5205 ;;      Params:         8       0       0       0       0       0       0
  5206 ;;      Locals:         4       0       0       0       0       0       0
  5207 ;;      Temps:          0       0       0       0       0       0       0
  5208 ;;      Totals:        12       0       0       0       0       0       0
  5209 ;;Total ram usage:       12 bytes
  5210 ;; Hardware stack levels used: 1
  5211 ;; This function calls:
  5212 ;;		Nothing
  5213 ;; This function is called by:
  5214 ;;		_display_speed
  5215 ;; This function uses a non-reentrant model
  5216 ;;
  5217                           
  5218                           	psect	text28
  5219   00145E                     __ptext28:
  5220                           	callstack 0
  5221   00145E                     ___lmul:
  5222                           	callstack 29
  5223   00145E  0E00               	movlw	0
  5224   001460  6E3F               	movwf	___lmul@product^0,c
  5225   001462  0E00               	movlw	0
  5226   001464  6E40               	movwf	(___lmul@product+1)^0,c
  5227   001466  0E00               	movlw	0
  5228   001468  6E41               	movwf	(___lmul@product+2)^0,c
  5229   00146A  0E00               	movlw	0
  5230   00146C  6E42               	movwf	(___lmul@product+3)^0,c
  5231   00146E                     l2531:
  5232   00146E  A037               	btfss	___lmul@multiplier^0,0,c
  5233   001470  EF3C  F00A         	goto	u1571
  5234   001474  EF3E  F00A         	goto	u1570
  5235   001478                     u1571:
  5236   001478  EF46  F00A         	goto	l2535
  5237   00147C                     u1570:
  5238   00147C  503B               	movf	___lmul@multiplicand^0,w,c
  5239   00147E  263F               	addwf	___lmul@product^0,f,c
  5240   001480  503C               	movf	(___lmul@multiplicand+1)^0,w,c
  5241   001482  2240               	addwfc	(___lmul@product+1)^0,f,c
  5242   001484  503D               	movf	(___lmul@multiplicand+2)^0,w,c
  5243   001486  2241               	addwfc	(___lmul@product+2)^0,f,c
  5244   001488  503E               	movf	(___lmul@multiplicand+3)^0,w,c
  5245   00148A  2242               	addwfc	(___lmul@product+3)^0,f,c
  5246   00148C                     l2535:
  5247   00148C  90D8               	bcf	status,0,c
  5248   00148E  363B               	rlcf	___lmul@multiplicand^0,f,c
  5249   001490  363C               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5250   001492  363D               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5251   001494  363E               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5252   001496  90D8               	bcf	status,0,c
  5253   001498  323A               	rrcf	(___lmul@multiplier+3)^0,f,c
  5254   00149A  3239               	rrcf	(___lmul@multiplier+2)^0,f,c
  5255   00149C  3238               	rrcf	(___lmul@multiplier+1)^0,f,c
  5256   00149E  3237               	rrcf	___lmul@multiplier^0,f,c
  5257   0014A0  5037               	movf	___lmul@multiplier^0,w,c
  5258   0014A2  1038               	iorwf	(___lmul@multiplier+1)^0,w,c
  5259   0014A4  1039               	iorwf	(___lmul@multiplier+2)^0,w,c
  5260   0014A6  103A               	iorwf	(___lmul@multiplier+3)^0,w,c
  5261   0014A8  A4D8               	btfss	status,2,c
  5262   0014AA  EF59  F00A         	goto	u1581
  5263   0014AE  EF5B  F00A         	goto	u1580
  5264   0014B2                     u1581:
  5265   0014B2  EF37  F00A         	goto	l2531
  5266   0014B6                     u1580:
  5267   0014B6  C03F  F037         	movff	___lmul@product,?___lmul
  5268   0014BA  C040  F038         	movff	___lmul@product+1,?___lmul+1
  5269   0014BE  C041  F039         	movff	___lmul@product+2,?___lmul+2
  5270   0014C2  C042  F03A         	movff	___lmul@product+3,?___lmul+3
  5271   0014C6  0012               	return		;funcret
  5272   0014C8                     __end_of___lmul:
  5273                           	callstack 0
  5274                           
  5275 ;; *************** function _display_menu *****************
  5276 ;; Defined at:
  5277 ;;		line 113 in file "main.c"
  5278 ;; Parameters:    Size  Location     Type
  5279 ;;		None
  5280 ;; Auto vars:     Size  Location     Type
  5281 ;;		None
  5282 ;; Return value:  Size  Location     Type
  5283 ;;                  1    wreg      void 
  5284 ;; Registers used:
  5285 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5291 ;;      Params:         0       0       0       0       0       0       0
  5292 ;;      Locals:         0       0       0       0       0       0       0
  5293 ;;      Temps:          0       0       0       0       0       0       0
  5294 ;;      Totals:         0       0       0       0       0       0       0
  5295 ;;Total ram usage:        0 bytes
  5296 ;; Hardware stack levels used: 1
  5297 ;; Hardware stack levels required when called: 2
  5298 ;; This function calls:
  5299 ;;		_clcd_print
  5300 ;;		_clcd_putch
  5301 ;; This function is called by:
  5302 ;;		_main
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306                           	psect	text29
  5307   001C56                     __ptext29:
  5308                           	callstack 0
  5309   001C56                     _display_menu:
  5310                           	callstack 28
  5311   001C56                     
  5312                           ;main.c: 115:     if (i == 0) {
  5313   001C56  5016               	movf	_i^0,w,c
  5314   001C58  1017               	iorwf	(_i+1)^0,w,c
  5315   001C5A  A4D8               	btfss	status,2,c
  5316   001C5C  EF32  F00E         	goto	u1741
  5317   001C60  EF34  F00E         	goto	u1740
  5318   001C64                     u1741:
  5319   001C64  EF40  F00E         	goto	l2635
  5320   001C68                     u1740:
  5321   001C68                     
  5322                           ;main.c: 116:         clcd_putch('*', (0x80 + (0)));
  5323   001C68  0E80               	movlw	128
  5324   001C6A  6E50               	movwf	clcd_putch@addr^0,c
  5325   001C6C  0E2A               	movlw	42
  5326   001C6E  EC96  F008         	call	_clcd_putch
  5327                           
  5328                           ;main.c: 117:         clcd_putch(' ', (0xC0 + (0)));
  5329   001C72  0EC0               	movlw	192
  5330   001C74  6E50               	movwf	clcd_putch@addr^0,c
  5331   001C76  0E20               	movlw	32
  5332   001C78  EC96  F008         	call	_clcd_putch
  5333                           
  5334                           ;main.c: 118:     } else if (i == 1) {
  5335   001C7C  EF53  F00E         	goto	l2639
  5336   001C80                     l2635:
  5337   001C80  0416               	decf	_i^0,w,c
  5338   001C82  1017               	iorwf	(_i+1)^0,w,c
  5339   001C84  A4D8               	btfss	status,2,c
  5340   001C86  EF47  F00E         	goto	u1751
  5341   001C8A  EF49  F00E         	goto	u1750
  5342   001C8E                     u1751:
  5343   001C8E  EF53  F00E         	goto	l2639
  5344   001C92                     u1750:
  5345   001C92                     
  5346                           ;main.c: 119:         clcd_putch(' ', (0x80 + (0)));
  5347   001C92  0E80               	movlw	128
  5348   001C94  6E50               	movwf	clcd_putch@addr^0,c
  5349   001C96  0E20               	movlw	32
  5350   001C98  EC96  F008         	call	_clcd_putch
  5351                           
  5352                           ;main.c: 120:         clcd_putch('*', (0xC0 + (0)));
  5353   001C9C  0EC0               	movlw	192
  5354   001C9E  6E50               	movwf	clcd_putch@addr^0,c
  5355   001CA0  0E2A               	movlw	42
  5356   001CA2  EC96  F008         	call	_clcd_putch
  5357   001CA6                     l2639:
  5358                           
  5359                           ;main.c: 123:     clcd_print(menu[menu_cnt], (0x80 + (2)));
  5360   001CA6  90D8               	bcf	status,0,c
  5361   001CA8  3418               	rlcf	_menu_cnt^0,w,c
  5362   001CAA  6ED9               	movwf	fsr2l,c
  5363   001CAC  3419               	rlcf	(_menu_cnt+1)^0,w,c
  5364   001CAE  6EDA               	movwf	fsr2h,c
  5365   001CB0  0E72               	movlw	low _menu
  5366   001CB2  26D9               	addwf	fsr2l,f,c
  5367   001CB4  0E00               	movlw	high _menu
  5368   001CB6  22DA               	addwfc	fsr2h,f,c
  5369   001CB8  CFDE F03D          	movff	postinc2,clcd_print@data
  5370   001CBC  CFDD F03E          	movff	postdec2,clcd_print@data+1
  5371   001CC0  0E82               	movlw	130
  5372   001CC2  6E3F               	movwf	clcd_print@addr^0,c
  5373   001CC4  EC64  F00A         	call	_clcd_print	;wreg free
  5374   001CC8                     
  5375                           ;main.c: 124:     clcd_print(menu[menu_cnt + 1], (0xC0 + (2)));
  5376   001CC8  90D8               	bcf	status,0,c
  5377   001CCA  3418               	rlcf	_menu_cnt^0,w,c
  5378   001CCC  6ED9               	movwf	fsr2l,c
  5379   001CCE  3419               	rlcf	(_menu_cnt+1)^0,w,c
  5380   001CD0  6EDA               	movwf	fsr2h,c
  5381   001CD2  0E74               	movlw	low (_menu+2)
  5382   001CD4  26D9               	addwf	fsr2l,f,c
  5383   001CD6  0E00               	movlw	high (_menu+2)
  5384   001CD8  22DA               	addwfc	fsr2h,f,c
  5385   001CDA  CFDE F03D          	movff	postinc2,clcd_print@data
  5386   001CDE  CFDD F03E          	movff	postdec2,clcd_print@data+1
  5387   001CE2  0EC2               	movlw	194
  5388   001CE4  6E3F               	movwf	clcd_print@addr^0,c
  5389   001CE6  EC64  F00A         	call	_clcd_print	;wreg free
  5390   001CEA                     
  5391                           ;main.c: 127:     if (key == 1) {
  5392   001CEA  042D               	decf	_key^0,w,c
  5393   001CEC  A4D8               	btfss	status,2,c
  5394   001CEE  EF7B  F00E         	goto	u1761
  5395   001CF2  EF7D  F00E         	goto	u1760
  5396   001CF6                     u1761:
  5397   001CF6  EF9E  F00E         	goto	l2655
  5398   001CFA                     u1760:
  5399   001CFA                     
  5400                           ;main.c: 128:         if (i == 1) {
  5401   001CFA  0416               	decf	_i^0,w,c
  5402   001CFC  1017               	iorwf	(_i+1)^0,w,c
  5403   001CFE  A4D8               	btfss	status,2,c
  5404   001D00  EF84  F00E         	goto	u1771
  5405   001D04  EF86  F00E         	goto	u1770
  5406   001D08                     u1771:
  5407   001D08  EF8C  F00E         	goto	l2649
  5408   001D0C                     u1770:
  5409   001D0C                     l2647:
  5410                           
  5411                           ;main.c: 129:             i = 0;
  5412   001D0C  0E00               	movlw	0
  5413   001D0E  6E17               	movwf	(_i+1)^0,c
  5414   001D10  0E00               	movlw	0
  5415   001D12  6E16               	movwf	_i^0,c
  5416                           
  5417                           ;main.c: 130:         } else if (menu_cnt > 0) {
  5418   001D14  EFC8  F00E         	goto	l126
  5419   001D18                     l2649:
  5420   001D18  BE19               	btfsc	(_menu_cnt+1)^0,7,c
  5421   001D1A  EF97  F00E         	goto	u1781
  5422   001D1E  5019               	movf	(_menu_cnt+1)^0,w,c
  5423   001D20  E108               	bnz	u1780
  5424   001D22  0418               	decf	_menu_cnt^0,w,c
  5425   001D24  A0D8               	btfss	status,0,c
  5426   001D26  EF97  F00E         	goto	u1781
  5427   001D2A  EF99  F00E         	goto	u1780
  5428   001D2E                     u1781:
  5429   001D2E  EFC8  F00E         	goto	l126
  5430   001D32                     u1780:
  5431   001D32                     
  5432                           ;main.c: 131:             menu_cnt--;
  5433   001D32  0618               	decf	_menu_cnt^0,f,c
  5434   001D34  A0D8               	btfss	status,0,c
  5435   001D36  0619               	decf	(_menu_cnt+1)^0,f,c
  5436   001D38  EF86  F00E         	goto	l2647
  5437   001D3C                     l2655:
  5438   001D3C  0E02               	movlw	2
  5439   001D3E  182D               	xorwf	_key^0,w,c
  5440   001D40  A4D8               	btfss	status,2,c
  5441   001D42  EFA5  F00E         	goto	u1791
  5442   001D46  EFA7  F00E         	goto	u1790
  5443   001D4A                     u1791:
  5444   001D4A  EFC8  F00E         	goto	l126
  5445   001D4E                     u1790:
  5446   001D4E                     
  5447                           ;main.c: 135:         if (i == 0) {
  5448   001D4E  5016               	movf	_i^0,w,c
  5449   001D50  1017               	iorwf	(_i+1)^0,w,c
  5450   001D52  A4D8               	btfss	status,2,c
  5451   001D54  EFAE  F00E         	goto	u1801
  5452   001D58  EFB0  F00E         	goto	u1800
  5453   001D5C                     u1801:
  5454   001D5C  EFB6  F00E         	goto	l2661
  5455   001D60                     u1800:
  5456   001D60                     l2659:
  5457                           
  5458                           ;main.c: 136:             i = 1;
  5459   001D60  0E00               	movlw	0
  5460   001D62  6E17               	movwf	(_i+1)^0,c
  5461   001D64  0E01               	movlw	1
  5462   001D66  6E16               	movwf	_i^0,c
  5463                           
  5464                           ;main.c: 137:         } else if (menu_cnt < 2) {
  5465   001D68  EFC8  F00E         	goto	l126
  5466   001D6C                     l2661:
  5467   001D6C  BE19               	btfsc	(_menu_cnt+1)^0,7,c
  5468   001D6E  EFC4  F00E         	goto	u1810
  5469   001D72  5019               	movf	(_menu_cnt+1)^0,w,c
  5470   001D74  E107               	bnz	u1811
  5471   001D76  0E02               	movlw	2
  5472   001D78  5C18               	subwf	_menu_cnt^0,w,c
  5473   001D7A  B0D8               	btfsc	status,0,c
  5474   001D7C  EFC2  F00E         	goto	u1811
  5475   001D80  EFC4  F00E         	goto	u1810
  5476   001D84                     u1811:
  5477   001D84  EFC8  F00E         	goto	l126
  5478   001D88                     u1810:
  5479   001D88                     
  5480                           ;main.c: 138:             menu_cnt++;
  5481   001D88  4A18               	infsnz	_menu_cnt^0,f,c
  5482   001D8A  2A19               	incf	(_menu_cnt+1)^0,f,c
  5483   001D8C  EFB0  F00E         	goto	l2659
  5484   001D90                     l126:
  5485   001D90  0012               	return		;funcret
  5486   001D92                     __end_of_display_menu:
  5487                           	callstack 0
  5488                           
  5489 ;; *************** function _clcd_putch *****************
  5490 ;; Defined at:
  5491 ;;		line 75 in file "clcd.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;  data            1    wreg     const unsigned char 
  5494 ;;  addr            1   25[COMRAM] unsigned char 
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;  data            1   26[COMRAM] const unsigned char 
  5497 ;; Return value:  Size  Location     Type
  5498 ;;                  1    wreg      void 
  5499 ;; Registers used:
  5500 ;;		wreg, status,2, cstack
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/0
  5503 ;;		On exit  : 0/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5506 ;;      Params:         1       0       0       0       0       0       0
  5507 ;;      Locals:         1       0       0       0       0       0       0
  5508 ;;      Temps:          0       0       0       0       0       0       0
  5509 ;;      Totals:         2       0       0       0       0       0       0
  5510 ;;Total ram usage:        2 bytes
  5511 ;; Hardware stack levels used: 1
  5512 ;; Hardware stack levels required when called: 1
  5513 ;; This function calls:
  5514 ;;		_clcd_write
  5515 ;; This function is called by:
  5516 ;;		_display_speed
  5517 ;;		_display_menu
  5518 ;;		_view_log
  5519 ;;		_set_time
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523                           	psect	text30
  5524   00112C                     __ptext30:
  5525                           	callstack 0
  5526   00112C                     _clcd_putch:
  5527                           	callstack 28
  5528                           
  5529                           ;incstack = 0
  5530                           ;clcd_putch@data stored from wreg
  5531   00112C  6E51               	movwf	clcd_putch@data^0,c
  5532   00112E                     
  5533                           ;clcd.c: 75: void clcd_putch(const unsigned char data, unsigned char addr);clcd.c: 76: {
      +                          ;clcd.c: 77:  clcd_write(addr, 0);
  5534   00112E  0E00               	movlw	0
  5535   001130  6E37               	movwf	clcd_write@control_bit^0,c
  5536   001132  5050               	movf	clcd_putch@addr^0,w,c
  5537   001134  EC4F  F009         	call	_clcd_write
  5538                           
  5539                           ;clcd.c: 78:  clcd_write(data, 1);
  5540   001138  0E01               	movlw	1
  5541   00113A  6E37               	movwf	clcd_write@control_bit^0,c
  5542   00113C  5051               	movf	clcd_putch@data^0,w,c
  5543   00113E  EC4F  F009         	call	_clcd_write
  5544   001142  0012               	return		;funcret
  5545   001144                     __end_of_clcd_putch:
  5546                           	callstack 0
  5547                           
  5548 ;; *************** function _clear_logs *****************
  5549 ;; Defined at:
  5550 ;;		line 223 in file "main.c"
  5551 ;; Parameters:    Size  Location     Type
  5552 ;;		None
  5553 ;; Auto vars:     Size  Location     Type
  5554 ;;  addr            2   29[COMRAM] int 
  5555 ;; Return value:  Size  Location     Type
  5556 ;;                  1    wreg      void 
  5557 ;; Registers used:
  5558 ;;		wreg, status,2, status,0, cstack
  5559 ;; Tracked objects:
  5560 ;;		On entry : 0/0
  5561 ;;		On exit  : 0/0
  5562 ;;		Unchanged: 0/0
  5563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5564 ;;      Params:         0       0       0       0       0       0       0
  5565 ;;      Locals:         2       0       0       0       0       0       0
  5566 ;;      Temps:          0       0       0       0       0       0       0
  5567 ;;      Totals:         2       0       0       0       0       0       0
  5568 ;;Total ram usage:        2 bytes
  5569 ;; Hardware stack levels used: 1
  5570 ;; Hardware stack levels required when called: 3
  5571 ;; This function calls:
  5572 ;;		_clcd_write
  5573 ;;		_write_external_eeprom
  5574 ;; This function is called by:
  5575 ;;		_main
  5576 ;; This function uses a non-reentrant model
  5577 ;;
  5578                           
  5579                           	psect	text31
  5580   0013FA                     __ptext31:
  5581                           	callstack 0
  5582   0013FA                     _clear_logs:
  5583                           	callstack 27
  5584   0013FA                     
  5585                           ;main.c: 225:     for (int addr = 0; addr < eeprom_address; addr++) {
  5586   0013FA  0E00               	movlw	0
  5587   0013FC  6E55               	movwf	(clear_logs@addr+1)^0,c
  5588   0013FE  0E00               	movlw	0
  5589   001400  6E54               	movwf	clear_logs@addr^0,c
  5590   001402  EF0A  F00A         	goto	l2763
  5591   001406                     l2759:
  5592                           
  5593                           ;main.c: 226:         write_external_eeprom(addr, 0xFF);
  5594   001406  0EFF               	movlw	255
  5595   001408  6E50               	movwf	write_external_eeprom@data^0,c
  5596   00140A  5054               	movf	clear_logs@addr^0,w,c
  5597   00140C  EC6C  F009         	call	_write_external_eeprom
  5598   001410                     
  5599                           ;main.c: 227:     }
  5600   001410  4A54               	infsnz	clear_logs@addr^0,f,c
  5601   001412  2A55               	incf	(clear_logs@addr+1)^0,f,c
  5602   001414                     l2763:
  5603   001414  501A               	movf	_eeprom_address^0,w,c
  5604   001416  5C54               	subwf	clear_logs@addr^0,w,c
  5605   001418  501B               	movf	(_eeprom_address+1)^0,w,c
  5606   00141A  5855               	subwfb	(clear_logs@addr+1)^0,w,c
  5607   00141C  A0D8               	btfss	status,0,c
  5608   00141E  EF13  F00A         	goto	u1891
  5609   001422  EF15  F00A         	goto	u1890
  5610   001426                     u1891:
  5611   001426  EF03  F00A         	goto	l2759
  5612   00142A                     u1890:
  5613   00142A                     
  5614                           ;main.c: 228:     eeprom_address = 0;
  5615   00142A  0E00               	movlw	0
  5616   00142C  6E1B               	movwf	(_eeprom_address+1)^0,c
  5617   00142E  0E00               	movlw	0
  5618   001430  6E1A               	movwf	_eeprom_address^0,c
  5619                           
  5620                           ;main.c: 229:     event_count = 0;
  5621   001432  0E00               	movlw	0
  5622   001434  6E1F               	movwf	(_event_count+1)^0,c
  5623   001436  0E00               	movlw	0
  5624   001438  6E1E               	movwf	_event_count^0,c
  5625                           
  5626                           ;main.c: 230:     menu_cnt = 0;
  5627   00143A  0E00               	movlw	0
  5628   00143C  6E19               	movwf	(_menu_cnt+1)^0,c
  5629   00143E  0E00               	movlw	0
  5630   001440  6E18               	movwf	_menu_cnt^0,c
  5631                           
  5632                           ;main.c: 231:     flag = 1;
  5633   001442  0E00               	movlw	0
  5634   001444  6E23               	movwf	(_flag+1)^0,c
  5635   001446  0E01               	movlw	1
  5636   001448  6E22               	movwf	_flag^0,c
  5637                           
  5638                           ;main.c: 232:     i = 0;
  5639   00144A  0E00               	movlw	0
  5640   00144C  6E17               	movwf	(_i+1)^0,c
  5641   00144E  0E00               	movlw	0
  5642   001450  6E16               	movwf	_i^0,c
  5643   001452                     
  5644                           ;main.c: 233:     clcd_write(0x01, 0);
  5645   001452  0E00               	movlw	0
  5646   001454  6E37               	movwf	clcd_write@control_bit^0,c
  5647   001456  0E01               	movlw	1
  5648   001458  EC4F  F009         	call	_clcd_write
  5649   00145C  0012               	return		;funcret
  5650   00145E                     __end_of_clear_logs:
  5651                           	callstack 0
  5652                           
  5653 ;; *************** function _check_matrix_keypad *****************
  5654 ;; Defined at:
  5655 ;;		line 44 in file "main.c"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;		None
  5658 ;; Auto vars:     Size  Location     Type
  5659 ;;		None
  5660 ;; Return value:  Size  Location     Type
  5661 ;;                  1    wreg      void 
  5662 ;; Registers used:
  5663 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5664 ;; Tracked objects:
  5665 ;;		On entry : 0/0
  5666 ;;		On exit  : 0/0
  5667 ;;		Unchanged: 0/0
  5668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5669 ;;      Params:         0       0       0       0       0       0       0
  5670 ;;      Locals:         0       0       0       0       0       0       0
  5671 ;;      Temps:          0       0       0       0       0       0       0
  5672 ;;      Totals:         0       0       0       0       0       0       0
  5673 ;;Total ram usage:        0 bytes
  5674 ;; Hardware stack levels used: 1
  5675 ;; Hardware stack levels required when called: 4
  5676 ;; This function calls:
  5677 ;;		_clcd_print
  5678 ;;		_log_event
  5679 ;; This function is called by:
  5680 ;;		_main
  5681 ;; This function uses a non-reentrant model
  5682 ;;
  5683                           
  5684                           	psect	text32
  5685   001B46                     __ptext32:
  5686                           	callstack 0
  5687   001B46                     _check_matrix_keypad:
  5688                           	callstack 26
  5689   001B46                     
  5690                           ;main.c: 45:     clcd_print(arr[count], (0xC0 + (10)));
  5691   001B46  90D8               	bcf	status,0,c
  5692   001B48  3420               	rlcf	_count^0,w,c
  5693   001B4A  6ED9               	movwf	fsr2l,c
  5694   001B4C  3421               	rlcf	(_count+1)^0,w,c
  5695   001B4E  6EDA               	movwf	fsr2h,c
  5696   001B50  0E60               	movlw	low _arr
  5697   001B52  26D9               	addwf	fsr2l,f,c
  5698   001B54  0E00               	movlw	high _arr
  5699   001B56  22DA               	addwfc	fsr2h,f,c
  5700   001B58  CFDE F03D          	movff	postinc2,clcd_print@data
  5701   001B5C  CFDD F03E          	movff	postdec2,clcd_print@data+1
  5702   001B60  0ECA               	movlw	202
  5703   001B62  6E3F               	movwf	clcd_print@addr^0,c
  5704   001B64  EC64  F00A         	call	_clcd_print	;wreg free
  5705   001B68                     
  5706                           ;main.c: 46:     if (flag == 0 && key != 0xFF) {
  5707   001B68  5022               	movf	_flag^0,w,c
  5708   001B6A  1023               	iorwf	(_flag+1)^0,w,c
  5709   001B6C  A4D8               	btfss	status,2,c
  5710   001B6E  EFBB  F00D         	goto	u1651
  5711   001B72  EFBD  F00D         	goto	u1650
  5712   001B76                     u1651:
  5713   001B76  EF2A  F00E         	goto	l98
  5714   001B7A                     u1650:
  5715   001B7A  282D               	incf	_key^0,w,c
  5716   001B7C  B4D8               	btfsc	status,2,c
  5717   001B7E  EFC3  F00D         	goto	u1661
  5718   001B82  EFC5  F00D         	goto	u1660
  5719   001B86                     u1661:
  5720   001B86  EF2A  F00E         	goto	l98
  5721   001B8A                     u1660:
  5722   001B8A                     
  5723                           ;main.c: 47:         if (key == 1) {
  5724   001B8A  042D               	decf	_key^0,w,c
  5725   001B8C  A4D8               	btfss	status,2,c
  5726   001B8E  EFCB  F00D         	goto	u1671
  5727   001B92  EFCD  F00D         	goto	u1670
  5728   001B96                     u1671:
  5729   001B96  EFEF  F00D         	goto	l2609
  5730   001B9A                     u1670:
  5731   001B9A                     
  5732                           ;main.c: 48:             if (count == 8) {
  5733   001B9A  0E08               	movlw	8
  5734   001B9C  1820               	xorwf	_count^0,w,c
  5735   001B9E  1021               	iorwf	(_count+1)^0,w,c
  5736   001BA0  A4D8               	btfss	status,2,c
  5737   001BA2  EFD5  F00D         	goto	u1681
  5738   001BA6  EFD7  F00D         	goto	u1680
  5739   001BAA                     u1681:
  5740   001BAA  EFDD  F00D         	goto	l2603
  5741   001BAE                     u1680:
  5742   001BAE                     
  5743                           ;main.c: 49:                 count = 1;
  5744   001BAE  0E00               	movlw	0
  5745   001BB0  6E21               	movwf	(_count+1)^0,c
  5746   001BB2  0E01               	movlw	1
  5747   001BB4  6E20               	movwf	_count^0,c
  5748                           
  5749                           ;main.c: 50:             } else {
  5750   001BB6  EFEF  F00D         	goto	l2609
  5751   001BBA                     l2603:
  5752                           
  5753                           ;main.c: 51:                 if (count < 7) {
  5754   001BBA  BE21               	btfsc	(_count+1)^0,7,c
  5755   001BBC  EFEB  F00D         	goto	u1690
  5756   001BC0  5021               	movf	(_count+1)^0,w,c
  5757   001BC2  E107               	bnz	u1691
  5758   001BC4  0E07               	movlw	7
  5759   001BC6  5C20               	subwf	_count^0,w,c
  5760   001BC8  B0D8               	btfsc	status,0,c
  5761   001BCA  EFE9  F00D         	goto	u1691
  5762   001BCE  EFEB  F00D         	goto	u1690
  5763   001BD2                     u1691:
  5764   001BD2  EFEF  F00D         	goto	l2609
  5765   001BD6                     u1690:
  5766   001BD6                     
  5767                           ;main.c: 52:                     count++;
  5768   001BD6  4A20               	infsnz	_count^0,f,c
  5769   001BD8  2A21               	incf	(_count+1)^0,f,c
  5770   001BDA                     
  5771                           ;main.c: 53:                     log_event();
  5772   001BDA  EC95  F00F         	call	_log_event	;wreg free
  5773   001BDE                     l2609:
  5774                           
  5775                           ;main.c: 57:         if (key == 2) {
  5776   001BDE  0E02               	movlw	2
  5777   001BE0  182D               	xorwf	_key^0,w,c
  5778   001BE2  A4D8               	btfss	status,2,c
  5779   001BE4  EFF6  F00D         	goto	u1701
  5780   001BE8  EFF8  F00D         	goto	u1700
  5781   001BEC                     u1701:
  5782   001BEC  EF1B  F00E         	goto	l2621
  5783   001BF0                     u1700:
  5784   001BF0                     
  5785                           ;main.c: 58:             if (count == 8) {
  5786   001BF0  0E08               	movlw	8
  5787   001BF2  1820               	xorwf	_count^0,w,c
  5788   001BF4  1021               	iorwf	(_count+1)^0,w,c
  5789   001BF6  A4D8               	btfss	status,2,c
  5790   001BF8  EF00  F00E         	goto	u1711
  5791   001BFC  EF02  F00E         	goto	u1710
  5792   001C00                     u1711:
  5793   001C00  EF08  F00E         	goto	l2615
  5794   001C04                     u1710:
  5795   001C04                     
  5796                           ;main.c: 59:                 count = 1;
  5797   001C04  0E00               	movlw	0
  5798   001C06  6E21               	movwf	(_count+1)^0,c
  5799   001C08  0E01               	movlw	1
  5800   001C0A  6E20               	movwf	_count^0,c
  5801                           
  5802                           ;main.c: 60:             } else {
  5803   001C0C  EF1B  F00E         	goto	l2621
  5804   001C10                     l2615:
  5805                           
  5806                           ;main.c: 61:                 if (count > 1) {
  5807   001C10  BE21               	btfsc	(_count+1)^0,7,c
  5808   001C12  EF14  F00E         	goto	u1721
  5809   001C16  5021               	movf	(_count+1)^0,w,c
  5810   001C18  E109               	bnz	u1720
  5811   001C1A  0E02               	movlw	2
  5812   001C1C  5C20               	subwf	_count^0,w,c
  5813   001C1E  A0D8               	btfss	status,0,c
  5814   001C20  EF14  F00E         	goto	u1721
  5815   001C24  EF16  F00E         	goto	u1720
  5816   001C28                     u1721:
  5817   001C28  EF1B  F00E         	goto	l2621
  5818   001C2C                     u1720:
  5819   001C2C                     
  5820                           ;main.c: 62:                     count--;
  5821   001C2C  0620               	decf	_count^0,f,c
  5822   001C2E  A0D8               	btfss	status,0,c
  5823   001C30  0621               	decf	(_count+1)^0,f,c
  5824   001C32                     
  5825                           ;main.c: 63:                     log_event();
  5826   001C32  EC95  F00F         	call	_log_event	;wreg free
  5827   001C36                     l2621:
  5828                           
  5829                           ;main.c: 67:         if (key == 3) {
  5830   001C36  0E03               	movlw	3
  5831   001C38  182D               	xorwf	_key^0,w,c
  5832   001C3A  A4D8               	btfss	status,2,c
  5833   001C3C  EF22  F00E         	goto	u1731
  5834   001C40  EF24  F00E         	goto	u1730
  5835   001C44                     u1731:
  5836   001C44  EF2A  F00E         	goto	l98
  5837   001C48                     u1730:
  5838   001C48                     
  5839                           ;main.c: 68:             count = 8;
  5840   001C48  0E00               	movlw	0
  5841   001C4A  6E21               	movwf	(_count+1)^0,c
  5842   001C4C  0E08               	movlw	8
  5843   001C4E  6E20               	movwf	_count^0,c
  5844   001C50                     
  5845                           ;main.c: 69:             log_event();
  5846   001C50  EC95  F00F         	call	_log_event	;wreg free
  5847   001C54                     l98:
  5848   001C54  0012               	return		;funcret
  5849   001C56                     __end_of_check_matrix_keypad:
  5850                           	callstack 0
  5851                           
  5852 ;; *************** function _log_event *****************
  5853 ;; Defined at:
  5854 ;;		line 145 in file "main.c"
  5855 ;; Parameters:    Size  Location     Type
  5856 ;;		None
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;  i               2   31[COMRAM] int 
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  1    wreg      void 
  5861 ;; Registers used:
  5862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5868 ;;      Params:         0       0       0       0       0       0       0
  5869 ;;      Locals:         2       0       0       0       0       0       0
  5870 ;;      Temps:          2       0       0       0       0       0       0
  5871 ;;      Totals:         4       0       0       0       0       0       0
  5872 ;;Total ram usage:        4 bytes
  5873 ;; Hardware stack levels used: 1
  5874 ;; Hardware stack levels required when called: 3
  5875 ;; This function calls:
  5876 ;;		___awmod
  5877 ;;		___lldiv
  5878 ;;		___llmod
  5879 ;;		_write_external_eeprom
  5880 ;; This function is called by:
  5881 ;;		_check_matrix_keypad
  5882 ;; This function uses a non-reentrant model
  5883 ;;
  5884                           
  5885                           	psect	text33
  5886   001F2A                     __ptext33:
  5887                           	callstack 0
  5888   001F2A                     _log_event:
  5889                           	callstack 26
  5890   001F2A                     
  5891                           ;main.c: 146:     for (int i = 0; i < 8; i++) {
  5892   001F2A  0E00               	movlw	0
  5893   001F2C  6E57               	movwf	(log_event@i+1)^0,c
  5894   001F2E  0E00               	movlw	0
  5895   001F30  6E56               	movwf	log_event@i^0,c
  5896   001F32                     l2435:
  5897                           
  5898                           ;main.c: 147:         if (i == 2 || i == 5) {
  5899   001F32  0E02               	movlw	2
  5900   001F34  1856               	xorwf	log_event@i^0,w,c
  5901   001F36  1057               	iorwf	(log_event@i+1)^0,w,c
  5902   001F38  B4D8               	btfsc	status,2,c
  5903   001F3A  EFA1  F00F         	goto	u1491
  5904   001F3E  EFA3  F00F         	goto	u1490
  5905   001F42                     u1491:
  5906   001F42  EFBC  F00F         	goto	l2445
  5907   001F46                     u1490:
  5908   001F46  0E05               	movlw	5
  5909   001F48  1856               	xorwf	log_event@i^0,w,c
  5910   001F4A  1057               	iorwf	(log_event@i+1)^0,w,c
  5911   001F4C  A4D8               	btfss	status,2,c
  5912   001F4E  EFAB  F00F         	goto	u1501
  5913   001F52  EFAD  F00F         	goto	u1500
  5914   001F56                     u1501:
  5915   001F56  EFAF  F00F         	goto	l2441
  5916   001F5A                     u1500:
  5917   001F5A  EFBC  F00F         	goto	l2445
  5918   001F5E                     l2441:
  5919                           
  5920                           ;main.c: 150:             write_external_eeprom(eeprom_address++, time[i]);
  5921   001F5E  0E2E               	movlw	low _time
  5922   001F60  2456               	addwf	log_event@i^0,w,c
  5923   001F62  6ED9               	movwf	fsr2l,c
  5924   001F64  0E00               	movlw	high _time
  5925   001F66  2057               	addwfc	(log_event@i+1)^0,w,c
  5926   001F68  6EDA               	movwf	fsr2h,c
  5927   001F6A  50DF               	movf	indf2,w,c
  5928   001F6C  6E50               	movwf	write_external_eeprom@data^0,c
  5929   001F6E  501A               	movf	_eeprom_address^0,w,c
  5930   001F70  EC6C  F009         	call	_write_external_eeprom
  5931   001F74  4A1A               	infsnz	_eeprom_address^0,f,c
  5932   001F76  2A1B               	incf	(_eeprom_address+1)^0,f,c
  5933   001F78                     l2445:
  5934   001F78  4A56               	infsnz	log_event@i^0,f,c
  5935   001F7A  2A57               	incf	(log_event@i+1)^0,f,c
  5936   001F7C  BE57               	btfsc	(log_event@i+1)^0,7,c
  5937   001F7E  EFCA  F00F         	goto	u1511
  5938   001F82  5057               	movf	(log_event@i+1)^0,w,c
  5939   001F84  E109               	bnz	u1510
  5940   001F86  0E08               	movlw	8
  5941   001F88  5C56               	subwf	log_event@i^0,w,c
  5942   001F8A  A0D8               	btfss	status,0,c
  5943   001F8C  EFCA  F00F         	goto	u1511
  5944   001F90  EFCC  F00F         	goto	u1510
  5945   001F94                     u1511:
  5946   001F94  EF99  F00F         	goto	l2435
  5947   001F98                     u1510:
  5948   001F98                     
  5949                           ;main.c: 154:     write_external_eeprom(eeprom_address++, arr[count][0]);
  5950   001F98  90D8               	bcf	status,0,c
  5951   001F9A  3420               	rlcf	_count^0,w,c
  5952   001F9C  6ED9               	movwf	fsr2l,c
  5953   001F9E  3421               	rlcf	(_count+1)^0,w,c
  5954   001FA0  6EDA               	movwf	fsr2h,c
  5955   001FA2  0E60               	movlw	low _arr
  5956   001FA4  26D9               	addwf	fsr2l,f,c
  5957   001FA6  0E00               	movlw	high _arr
  5958   001FA8  22DA               	addwfc	fsr2h,f,c
  5959   001FAA  CFDE FFF6          	movff	postinc2,tblptrl
  5960   001FAE  CFDD FFF7          	movff	postdec2,tblptrh
  5961   001FB2                     	if	0	;tblptru may be non-zero
  5962   001FB2                     	endif
  5963   001FB2                     	if	0	;tblptru may be non-zero
  5964   001FB2                     	endif
  5965   001FB2  0008               	tblrd		*
  5966   001FB4  CFF5 F050          	movff	tablat,write_external_eeprom@data
  5967   001FB8  501A               	movf	_eeprom_address^0,w,c
  5968   001FBA  EC6C  F009         	call	_write_external_eeprom
  5969   001FBE  4A1A               	infsnz	_eeprom_address^0,f,c
  5970   001FC0  2A1B               	incf	(_eeprom_address+1)^0,f,c
  5971   001FC2                     
  5972                           ;main.c: 155:     write_external_eeprom(eeprom_address++, arr[count][1]);
  5973   001FC2  90D8               	bcf	status,0,c
  5974   001FC4  3420               	rlcf	_count^0,w,c
  5975   001FC6  6ED9               	movwf	fsr2l,c
  5976   001FC8  3421               	rlcf	(_count+1)^0,w,c
  5977   001FCA  6EDA               	movwf	fsr2h,c
  5978   001FCC  0E60               	movlw	low _arr
  5979   001FCE  26D9               	addwf	fsr2l,f,c
  5980   001FD0  0E00               	movlw	high _arr
  5981   001FD2  22DA               	addwfc	fsr2h,f,c
  5982   001FD4  CFDE F054          	movff	postinc2,??_log_event
  5983   001FD8  CFDD F055          	movff	postdec2,??_log_event+1
  5984   001FDC  0E01               	movlw	1
  5985   001FDE  2654               	addwf	??_log_event^0,f,c
  5986   001FE0  0E00               	movlw	0
  5987   001FE2  2255               	addwfc	(??_log_event+1)^0,f,c
  5988   001FE4  C054  FFF6         	movff	??_log_event,tblptrl
  5989   001FE8  C055  FFF7         	movff	??_log_event+1,tblptrh
  5990   001FEC                     	if	0	;tblptru may be non-zero
  5991   001FEC                     	endif
  5992   001FEC                     	if	0	;tblptru may be non-zero
  5993   001FEC                     	endif
  5994   001FEC  0008               	tblrd		*
  5995   001FEE  CFF5 F050          	movff	tablat,write_external_eeprom@data
  5996   001FF2  501A               	movf	_eeprom_address^0,w,c
  5997   001FF4  EC6C  F009         	call	_write_external_eeprom
  5998   001FF8  4A1A               	infsnz	_eeprom_address^0,f,c
  5999   001FFA  2A1B               	incf	(_eeprom_address+1)^0,f,c
  6000   001FFC                     
  6001                           ;main.c: 157:     write_external_eeprom(eeprom_address++, (speed / 10) + '0');
  6002   001FFC  C005  F043         	movff	_speed,___lldiv@dividend
  6003   002000  C006  F044         	movff	_speed+1,___lldiv@dividend+1
  6004   002004  C007  F045         	movff	_speed+2,___lldiv@dividend+2
  6005   002008  C008  F046         	movff	_speed+3,___lldiv@dividend+3
  6006   00200C  0E0A               	movlw	10
  6007   00200E  6E47               	movwf	___lldiv@divisor^0,c
  6008   002010  0E00               	movlw	0
  6009   002012  6E48               	movwf	(___lldiv@divisor+1)^0,c
  6010   002014  0E00               	movlw	0
  6011   002016  6E49               	movwf	(___lldiv@divisor+2)^0,c
  6012   002018  0E00               	movlw	0
  6013   00201A  6E4A               	movwf	(___lldiv@divisor+3)^0,c
  6014   00201C  EC59  F00B         	call	___lldiv	;wreg free
  6015   002020  5043               	movf	?___lldiv^0,w,c
  6016   002022  0F30               	addlw	48
  6017   002024  6E50               	movwf	write_external_eeprom@data^0,c
  6018   002026  501A               	movf	_eeprom_address^0,w,c
  6019   002028  EC6C  F009         	call	_write_external_eeprom
  6020   00202C  4A1A               	infsnz	_eeprom_address^0,f,c
  6021   00202E  2A1B               	incf	(_eeprom_address+1)^0,f,c
  6022                           
  6023                           ;main.c: 158:     write_external_eeprom(eeprom_address++, (speed % 10) + '0');
  6024   002030  C005  F037         	movff	_speed,___llmod@dividend
  6025   002034  C006  F038         	movff	_speed+1,___llmod@dividend+1
  6026   002038  C007  F039         	movff	_speed+2,___llmod@dividend+2
  6027   00203C  C008  F03A         	movff	_speed+3,___llmod@dividend+3
  6028   002040  0E0A               	movlw	10
  6029   002042  6E3B               	movwf	___llmod@divisor^0,c
  6030   002044  0E00               	movlw	0
  6031   002046  6E3C               	movwf	(___llmod@divisor+1)^0,c
  6032   002048  0E00               	movlw	0
  6033   00204A  6E3D               	movwf	(___llmod@divisor+2)^0,c
  6034   00204C  0E00               	movlw	0
  6035   00204E  6E3E               	movwf	(___llmod@divisor+3)^0,c
  6036   002050  EC15  F00B         	call	___llmod	;wreg free
  6037   002054  5037               	movf	?___llmod^0,w,c
  6038   002056  0F30               	addlw	48
  6039   002058  6E50               	movwf	write_external_eeprom@data^0,c
  6040   00205A  501A               	movf	_eeprom_address^0,w,c
  6041   00205C  EC6C  F009         	call	_write_external_eeprom
  6042   002060  4A1A               	infsnz	_eeprom_address^0,f,c
  6043   002062  2A1B               	incf	(_eeprom_address+1)^0,f,c
  6044   002064                     
  6045                           ;main.c: 161:     if (eeprom_address >= 10 * 10) {
  6046   002064  501B               	movf	(_eeprom_address+1)^0,w,c
  6047   002066  E109               	bnz	u1520
  6048   002068  0E64               	movlw	100
  6049   00206A  5C1A               	subwf	_eeprom_address^0,w,c
  6050   00206C  A0D8               	btfss	status,0,c
  6051   00206E  EF3B  F010         	goto	u1521
  6052   002072  EF3D  F010         	goto	u1520
  6053   002076                     u1521:
  6054   002076  EF41  F010         	goto	l2465
  6055   00207A                     u1520:
  6056   00207A                     
  6057                           ;main.c: 162:         eeprom_address = 0;
  6058   00207A  0E00               	movlw	0
  6059   00207C  6E1B               	movwf	(_eeprom_address+1)^0,c
  6060   00207E  0E00               	movlw	0
  6061   002080  6E1A               	movwf	_eeprom_address^0,c
  6062   002082                     l2465:
  6063                           
  6064                           ;main.c: 164:     if (event_count < 10) {
  6065   002082  BE1F               	btfsc	(_event_count+1)^0,7,c
  6066   002084  EF4F  F010         	goto	u1530
  6067   002088  501F               	movf	(_event_count+1)^0,w,c
  6068   00208A  E107               	bnz	u1531
  6069   00208C  0E0A               	movlw	10
  6070   00208E  5C1E               	subwf	_event_count^0,w,c
  6071   002090  B0D8               	btfsc	status,0,c
  6072   002092  EF4D  F010         	goto	u1531
  6073   002096  EF4F  F010         	goto	u1530
  6074   00209A                     u1531:
  6075   00209A  EF53  F010         	goto	l2469
  6076   00209E                     u1530:
  6077   00209E                     
  6078                           ;main.c: 165:         event_count++;
  6079   00209E  4A1E               	infsnz	_event_count^0,f,c
  6080   0020A0  2A1F               	incf	(_event_count+1)^0,f,c
  6081                           
  6082                           ;main.c: 166:     } else {
  6083   0020A2  EF63  F010         	goto	l139
  6084   0020A6                     l2469:
  6085                           
  6086                           ;main.c: 167:         start_index = (start_index + 1) % 10;
  6087   0020A6  0E01               	movlw	1
  6088   0020A8  2412               	addwf	_start_index^0,w,c
  6089   0020AA  6E37               	movwf	___awmod@dividend^0,c
  6090   0020AC  0E00               	movlw	0
  6091   0020AE  2013               	addwfc	(_start_index+1)^0,w,c
  6092   0020B0  6E38               	movwf	(___awmod@dividend+1)^0,c
  6093   0020B2  0E00               	movlw	0
  6094   0020B4  6E3A               	movwf	(___awmod@divisor+1)^0,c
  6095   0020B6  0E0A               	movlw	10
  6096   0020B8  6E39               	movwf	___awmod@divisor^0,c
  6097   0020BA  ECFF  F00B         	call	___awmod	;wreg free
  6098   0020BE  C037  F012         	movff	?___awmod,_start_index
  6099   0020C2  C038  F013         	movff	?___awmod+1,_start_index+1
  6100   0020C6                     l139:
  6101   0020C6  0012               	return		;funcret
  6102   0020C8                     __end_of_log_event:
  6103                           	callstack 0
  6104                           
  6105 ;; *************** function _write_external_eeprom *****************
  6106 ;; Defined at:
  6107 ;;		line 14 in file "external_eeprom.c"
  6108 ;; Parameters:    Size  Location     Type
  6109 ;;  address         1    wreg     unsigned char 
  6110 ;;  data            1   25[COMRAM] unsigned char 
  6111 ;; Auto vars:     Size  Location     Type
  6112 ;;  address         1   28[COMRAM] unsigned char 
  6113 ;;  wait            2   26[COMRAM] unsigned int 
  6114 ;; Return value:  Size  Location     Type
  6115 ;;                  1    wreg      void 
  6116 ;; Registers used:
  6117 ;;		wreg, status,2, status,0, cstack
  6118 ;; Tracked objects:
  6119 ;;		On entry : 0/0
  6120 ;;		On exit  : 0/0
  6121 ;;		Unchanged: 0/0
  6122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6123 ;;      Params:         1       0       0       0       0       0       0
  6124 ;;      Locals:         3       0       0       0       0       0       0
  6125 ;;      Temps:          0       0       0       0       0       0       0
  6126 ;;      Totals:         4       0       0       0       0       0       0
  6127 ;;Total ram usage:        4 bytes
  6128 ;; Hardware stack levels used: 1
  6129 ;; Hardware stack levels required when called: 2
  6130 ;; This function calls:
  6131 ;;		_i2c_start
  6132 ;;		_i2c_stop
  6133 ;;		_i2c_write
  6134 ;; This function is called by:
  6135 ;;		_log_event
  6136 ;;		_clear_logs
  6137 ;; This function uses a non-reentrant model
  6138 ;;
  6139                           
  6140                           	psect	text34
  6141   0012D8                     __ptext34:
  6142                           	callstack 0
  6143   0012D8                     _write_external_eeprom:
  6144                           	callstack 27
  6145                           
  6146                           ;incstack = 0
  6147                           ;write_external_eeprom@address stored from wreg
  6148   0012D8  6E53               	movwf	write_external_eeprom@address^0,c
  6149   0012DA                     
  6150                           ;external_eeprom.c: 14: void write_external_eeprom(unsigned char address, unsigned char 
      +                          data);external_eeprom.c: 15: {;external_eeprom.c: 16:     i2c_start();
  6151   0012DA  EC54  F008         	call	_i2c_start	;wreg free
  6152   0012DE                     
  6153                           ;external_eeprom.c: 17:     i2c_write(0xA0);
  6154   0012DE  0EA0               	movlw	160
  6155   0012E0  EC64  F008         	call	_i2c_write
  6156   0012E4                     
  6157                           ;external_eeprom.c: 18:     i2c_write(address);
  6158   0012E4  5053               	movf	write_external_eeprom@address^0,w,c
  6159   0012E6  EC64  F008         	call	_i2c_write
  6160   0012EA                     
  6161                           ;external_eeprom.c: 19:     i2c_write(data);
  6162   0012EA  5050               	movf	write_external_eeprom@data^0,w,c
  6163   0012EC  EC64  F008         	call	_i2c_write
  6164   0012F0                     
  6165                           ;external_eeprom.c: 20:     i2c_stop();
  6166   0012F0  EC58  F008         	call	_i2c_stop	;wreg free
  6167   0012F4                     
  6168                           ;external_eeprom.c: 21:     for (unsigned int wait = 3000;wait--;);
  6169   0012F4  0E0B               	movlw	11
  6170   0012F6  6E52               	movwf	(write_external_eeprom@wait+1)^0,c
  6171   0012F8  0EB8               	movlw	184
  6172   0012FA  6E51               	movwf	write_external_eeprom@wait^0,c
  6173   0012FC                     l2265:
  6174   0012FC  0651               	decf	write_external_eeprom@wait^0,f,c
  6175   0012FE  A0D8               	btfss	status,0,c
  6176   001300  0652               	decf	(write_external_eeprom@wait+1)^0,f,c
  6177   001302  2851               	incf	write_external_eeprom@wait^0,w,c
  6178   001304  E106               	bnz	u1291
  6179   001306  2852               	incf	(write_external_eeprom@wait+1)^0,w,c
  6180   001308  A4D8               	btfss	status,2,c
  6181   00130A  EF89  F009         	goto	u1291
  6182   00130E  EF8B  F009         	goto	u1290
  6183   001312                     u1291:
  6184   001312  EF7E  F009         	goto	l2265
  6185   001316                     u1290:
  6186   001316  0012               	return		;funcret
  6187   001318                     __end_of_write_external_eeprom:
  6188                           	callstack 0
  6189                           
  6190 ;; *************** function _i2c_write *****************
  6191 ;; Defined at:
  6192 ;;		line 65 in file "i2c.c"
  6193 ;; Parameters:    Size  Location     Type
  6194 ;;  data            1    wreg     unsigned char 
  6195 ;; Auto vars:     Size  Location     Type
  6196 ;;  data            1    0[COMRAM] unsigned char 
  6197 ;; Return value:  Size  Location     Type
  6198 ;;                  1    wreg      void 
  6199 ;; Registers used:
  6200 ;;		wreg, cstack
  6201 ;; Tracked objects:
  6202 ;;		On entry : 0/0
  6203 ;;		On exit  : 0/0
  6204 ;;		Unchanged: 0/0
  6205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6206 ;;      Params:         0       0       0       0       0       0       0
  6207 ;;      Locals:         1       0       0       0       0       0       0
  6208 ;;      Temps:          0       0       0       0       0       0       0
  6209 ;;      Totals:         1       0       0       0       0       0       0
  6210 ;;Total ram usage:        1 bytes
  6211 ;; Hardware stack levels used: 1
  6212 ;; Hardware stack levels required when called: 1
  6213 ;; This function calls:
  6214 ;;		_i2c_idle
  6215 ;; This function is called by:
  6216 ;;		_write_ds1307
  6217 ;;		_read_ds1307
  6218 ;;		_write_external_eeprom
  6219 ;;		_read_external_eeprom
  6220 ;; This function uses a non-reentrant model
  6221 ;;
  6222                           
  6223                           	psect	text35
  6224   0010C8                     __ptext35:
  6225                           	callstack 0
  6226   0010C8                     _i2c_write:
  6227                           	callstack 27
  6228                           
  6229                           ;incstack = 0
  6230                           ;i2c_write@data stored from wreg
  6231   0010C8  6E37               	movwf	i2c_write@data^0,c
  6232   0010CA                     
  6233                           ;i2c.c: 65: void i2c_write(unsigned char data);i2c.c: 66: {;i2c.c: 67:  SSPBUF = data;
  6234   0010CA  C037  FFC9         	movff	i2c_write@data,4041	;volatile
  6235   0010CE                     
  6236                           ;i2c.c: 68:  i2c_idle();
  6237   0010CE  EC70  F008         	call	_i2c_idle	;wreg free
  6238   0010D2  0012               	return		;funcret
  6239   0010D4                     __end_of_i2c_write:
  6240                           	callstack 0
  6241                           
  6242 ;; *************** function _i2c_stop *****************
  6243 ;; Defined at:
  6244 ;;		line 53 in file "i2c.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;		None
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;		None
  6249 ;; Return value:  Size  Location     Type
  6250 ;;                  1    wreg      void 
  6251 ;; Registers used:
  6252 ;;		cstack
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6258 ;;      Params:         0       0       0       0       0       0       0
  6259 ;;      Locals:         0       0       0       0       0       0       0
  6260 ;;      Temps:          0       0       0       0       0       0       0
  6261 ;;      Totals:         0       0       0       0       0       0       0
  6262 ;;Total ram usage:        0 bytes
  6263 ;; Hardware stack levels used: 1
  6264 ;; Hardware stack levels required when called: 1
  6265 ;; This function calls:
  6266 ;;		_i2c_idle
  6267 ;; This function is called by:
  6268 ;;		_write_ds1307
  6269 ;;		_read_ds1307
  6270 ;;		_write_external_eeprom
  6271 ;;		_read_external_eeprom
  6272 ;; This function uses a non-reentrant model
  6273 ;;
  6274                           
  6275                           	psect	text36
  6276   0010B0                     __ptext36:
  6277                           	callstack 0
  6278   0010B0                     _i2c_stop:
  6279                           	callstack 27
  6280   0010B0                     
  6281                           ;i2c.c: 55:  PEN = 1;
  6282   0010B0  84C5               	bsf	4037,2,c	;volatile
  6283   0010B2                     
  6284                           ;i2c.c: 56:  i2c_idle();
  6285   0010B2  EC70  F008         	call	_i2c_idle	;wreg free
  6286   0010B6  0012               	return		;funcret
  6287   0010B8                     __end_of_i2c_stop:
  6288                           	callstack 0
  6289                           
  6290 ;; *************** function _i2c_start *****************
  6291 ;; Defined at:
  6292 ;;		line 47 in file "i2c.c"
  6293 ;; Parameters:    Size  Location     Type
  6294 ;;		None
  6295 ;; Auto vars:     Size  Location     Type
  6296 ;;		None
  6297 ;; Return value:  Size  Location     Type
  6298 ;;                  1    wreg      void 
  6299 ;; Registers used:
  6300 ;;		cstack
  6301 ;; Tracked objects:
  6302 ;;		On entry : 0/0
  6303 ;;		On exit  : 0/0
  6304 ;;		Unchanged: 0/0
  6305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6306 ;;      Params:         0       0       0       0       0       0       0
  6307 ;;      Locals:         0       0       0       0       0       0       0
  6308 ;;      Temps:          0       0       0       0       0       0       0
  6309 ;;      Totals:         0       0       0       0       0       0       0
  6310 ;;Total ram usage:        0 bytes
  6311 ;; Hardware stack levels used: 1
  6312 ;; Hardware stack levels required when called: 1
  6313 ;; This function calls:
  6314 ;;		_i2c_idle
  6315 ;; This function is called by:
  6316 ;;		_write_ds1307
  6317 ;;		_read_ds1307
  6318 ;;		_write_external_eeprom
  6319 ;;		_read_external_eeprom
  6320 ;; This function uses a non-reentrant model
  6321 ;;
  6322                           
  6323                           	psect	text37
  6324   0010A8                     __ptext37:
  6325                           	callstack 0
  6326   0010A8                     _i2c_start:
  6327                           	callstack 27
  6328   0010A8                     
  6329                           ;i2c.c: 49:  SEN = 1;
  6330   0010A8  80C5               	bsf	4037,0,c	;volatile
  6331   0010AA                     
  6332                           ;i2c.c: 50:  i2c_idle();
  6333   0010AA  EC70  F008         	call	_i2c_idle	;wreg free
  6334   0010AE  0012               	return		;funcret
  6335   0010B0                     __end_of_i2c_start:
  6336                           	callstack 0
  6337                           
  6338 ;; *************** function _i2c_idle *****************
  6339 ;; Defined at:
  6340 ;;		line 33 in file "i2c.c"
  6341 ;; Parameters:    Size  Location     Type
  6342 ;;		None
  6343 ;; Auto vars:     Size  Location     Type
  6344 ;;		None
  6345 ;; Return value:  Size  Location     Type
  6346 ;;                  1    wreg      void 
  6347 ;; Registers used:
  6348 ;;		None
  6349 ;; Tracked objects:
  6350 ;;		On entry : 0/0
  6351 ;;		On exit  : 0/0
  6352 ;;		Unchanged: 0/0
  6353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6354 ;;      Params:         0       0       0       0       0       0       0
  6355 ;;      Locals:         0       0       0       0       0       0       0
  6356 ;;      Temps:          0       0       0       0       0       0       0
  6357 ;;      Totals:         0       0       0       0       0       0       0
  6358 ;;Total ram usage:        0 bytes
  6359 ;; Hardware stack levels used: 1
  6360 ;; This function calls:
  6361 ;;		Nothing
  6362 ;; This function is called by:
  6363 ;;		_i2c_start
  6364 ;;		_i2c_stop
  6365 ;;		_i2c_rep_start
  6366 ;;		_i2c_write
  6367 ;;		_i2c_rx_mode
  6368 ;; This function uses a non-reentrant model
  6369 ;;
  6370                           
  6371                           	psect	text38
  6372   0010E0                     __ptext38:
  6373                           	callstack 0
  6374   0010E0                     _i2c_idle:
  6375                           	callstack 27
  6376   0010E0                     l403:
  6377   0010E0  A69E               	btfss	3998,3,c	;volatile
  6378   0010E2  EF75  F008         	goto	u1281
  6379   0010E6  EF77  F008         	goto	u1280
  6380   0010EA                     u1281:
  6381   0010EA  EF70  F008         	goto	l403
  6382   0010EE                     u1280:
  6383   0010EE                     
  6384                           ;i2c.c: 36:  SSPIF = 0;
  6385   0010EE  969E               	bcf	3998,3,c	;volatile
  6386   0010F0  0012               	return		;funcret
  6387   0010F2                     __end_of_i2c_idle:
  6388                           	callstack 0
  6389                           
  6390 ;; *************** function ___llmod *****************
  6391 ;; Defined at:
  6392 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\llmod.c"
  6393 ;; Parameters:    Size  Location     Type
  6394 ;;  dividend        4    0[COMRAM] unsigned long 
  6395 ;;  divisor         4    4[COMRAM] unsigned long 
  6396 ;; Auto vars:     Size  Location     Type
  6397 ;;  counter         1    8[COMRAM] unsigned char 
  6398 ;; Return value:  Size  Location     Type
  6399 ;;                  4    0[COMRAM] unsigned long 
  6400 ;; Registers used:
  6401 ;;		wreg, status,2, status,0
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6407 ;;      Params:         8       0       0       0       0       0       0
  6408 ;;      Locals:         1       0       0       0       0       0       0
  6409 ;;      Temps:          0       0       0       0       0       0       0
  6410 ;;      Totals:         9       0       0       0       0       0       0
  6411 ;;Total ram usage:        9 bytes
  6412 ;; Hardware stack levels used: 1
  6413 ;; This function calls:
  6414 ;;		Nothing
  6415 ;; This function is called by:
  6416 ;;		_display_speed
  6417 ;;		_log_event
  6418 ;; This function uses a non-reentrant model
  6419 ;;
  6420                           
  6421                           	psect	text39
  6422   00162A                     __ptext39:
  6423                           	callstack 0
  6424   00162A                     ___llmod:
  6425                           	callstack 29
  6426   00162A  503B               	movf	___llmod@divisor^0,w,c
  6427   00162C  103C               	iorwf	(___llmod@divisor+1)^0,w,c
  6428   00162E  103D               	iorwf	(___llmod@divisor+2)^0,w,c
  6429   001630  103E               	iorwf	(___llmod@divisor+3)^0,w,c
  6430   001632  B4D8               	btfsc	status,2,c
  6431   001634  EF1E  F00B         	goto	u1431
  6432   001638  EF20  F00B         	goto	u1430
  6433   00163C                     u1431:
  6434   00163C  EF50  F00B         	goto	l952
  6435   001640                     u1430:
  6436   001640  0E01               	movlw	1
  6437   001642  6E3F               	movwf	___llmod@counter^0,c
  6438   001644  EF2A  F00B         	goto	l2365
  6439   001648                     l2363:
  6440   001648  90D8               	bcf	status,0,c
  6441   00164A  363B               	rlcf	___llmod@divisor^0,f,c
  6442   00164C  363C               	rlcf	(___llmod@divisor+1)^0,f,c
  6443   00164E  363D               	rlcf	(___llmod@divisor+2)^0,f,c
  6444   001650  363E               	rlcf	(___llmod@divisor+3)^0,f,c
  6445   001652  2A3F               	incf	___llmod@counter^0,f,c
  6446   001654                     l2365:
  6447   001654  AE3E               	btfss	(___llmod@divisor+3)^0,7,c
  6448   001656  EF2F  F00B         	goto	u1441
  6449   00165A  EF31  F00B         	goto	u1440
  6450   00165E                     u1441:
  6451   00165E  EF24  F00B         	goto	l2363
  6452   001662                     u1440:
  6453   001662                     l2367:
  6454   001662  503B               	movf	___llmod@divisor^0,w,c
  6455   001664  5C37               	subwf	___llmod@dividend^0,w,c
  6456   001666  503C               	movf	(___llmod@divisor+1)^0,w,c
  6457   001668  5838               	subwfb	(___llmod@dividend+1)^0,w,c
  6458   00166A  503D               	movf	(___llmod@divisor+2)^0,w,c
  6459   00166C  5839               	subwfb	(___llmod@dividend+2)^0,w,c
  6460   00166E  503E               	movf	(___llmod@divisor+3)^0,w,c
  6461   001670  583A               	subwfb	(___llmod@dividend+3)^0,w,c
  6462   001672  A0D8               	btfss	status,0,c
  6463   001674  EF3E  F00B         	goto	u1451
  6464   001678  EF40  F00B         	goto	u1450
  6465   00167C                     u1451:
  6466   00167C  EF48  F00B         	goto	l2371
  6467   001680                     u1450:
  6468   001680  503B               	movf	___llmod@divisor^0,w,c
  6469   001682  5E37               	subwf	___llmod@dividend^0,f,c
  6470   001684  503C               	movf	(___llmod@divisor+1)^0,w,c
  6471   001686  5A38               	subwfb	(___llmod@dividend+1)^0,f,c
  6472   001688  503D               	movf	(___llmod@divisor+2)^0,w,c
  6473   00168A  5A39               	subwfb	(___llmod@dividend+2)^0,f,c
  6474   00168C  503E               	movf	(___llmod@divisor+3)^0,w,c
  6475   00168E  5A3A               	subwfb	(___llmod@dividend+3)^0,f,c
  6476   001690                     l2371:
  6477   001690  90D8               	bcf	status,0,c
  6478   001692  323E               	rrcf	(___llmod@divisor+3)^0,f,c
  6479   001694  323D               	rrcf	(___llmod@divisor+2)^0,f,c
  6480   001696  323C               	rrcf	(___llmod@divisor+1)^0,f,c
  6481   001698  323B               	rrcf	___llmod@divisor^0,f,c
  6482   00169A  2E3F               	decfsz	___llmod@counter^0,f,c
  6483   00169C  EF31  F00B         	goto	l2367
  6484   0016A0                     l952:
  6485   0016A0  C037  F037         	movff	___llmod@dividend,?___llmod
  6486   0016A4  C038  F038         	movff	___llmod@dividend+1,?___llmod+1
  6487   0016A8  C039  F039         	movff	___llmod@dividend+2,?___llmod+2
  6488   0016AC  C03A  F03A         	movff	___llmod@dividend+3,?___llmod+3
  6489   0016B0  0012               	return		;funcret
  6490   0016B2                     __end_of___llmod:
  6491                           	callstack 0
  6492                           
  6493 ;; *************** function ___lldiv *****************
  6494 ;; Defined at:
  6495 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__lldiv.c"
  6496 ;; Parameters:    Size  Location     Type
  6497 ;;  dividend        4   12[COMRAM] unsigned long 
  6498 ;;  divisor         4   16[COMRAM] unsigned long 
  6499 ;; Auto vars:     Size  Location     Type
  6500 ;;  quotient        4   20[COMRAM] unsigned long 
  6501 ;;  counter         1   24[COMRAM] unsigned char 
  6502 ;; Return value:  Size  Location     Type
  6503 ;;                  4   12[COMRAM] unsigned long 
  6504 ;; Registers used:
  6505 ;;		wreg, status,2, status,0
  6506 ;; Tracked objects:
  6507 ;;		On entry : 0/0
  6508 ;;		On exit  : 0/0
  6509 ;;		Unchanged: 0/0
  6510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6511 ;;      Params:         8       0       0       0       0       0       0
  6512 ;;      Locals:         5       0       0       0       0       0       0
  6513 ;;      Temps:          0       0       0       0       0       0       0
  6514 ;;      Totals:        13       0       0       0       0       0       0
  6515 ;;Total ram usage:       13 bytes
  6516 ;; Hardware stack levels used: 1
  6517 ;; This function calls:
  6518 ;;		Nothing
  6519 ;; This function is called by:
  6520 ;;		_display_speed
  6521 ;;		_log_event
  6522 ;; This function uses a non-reentrant model
  6523 ;;
  6524                           
  6525                           	psect	text40
  6526   0016B2                     __ptext40:
  6527                           	callstack 0
  6528   0016B2                     ___lldiv:
  6529                           	callstack 29
  6530   0016B2  0E00               	movlw	0
  6531   0016B4  6E4B               	movwf	___lldiv@quotient^0,c
  6532   0016B6  0E00               	movlw	0
  6533   0016B8  6E4C               	movwf	(___lldiv@quotient+1)^0,c
  6534   0016BA  0E00               	movlw	0
  6535   0016BC  6E4D               	movwf	(___lldiv@quotient+2)^0,c
  6536   0016BE  0E00               	movlw	0
  6537   0016C0  6E4E               	movwf	(___lldiv@quotient+3)^0,c
  6538   0016C2  5047               	movf	___lldiv@divisor^0,w,c
  6539   0016C4  1048               	iorwf	(___lldiv@divisor+1)^0,w,c
  6540   0016C6  1049               	iorwf	(___lldiv@divisor+2)^0,w,c
  6541   0016C8  104A               	iorwf	(___lldiv@divisor+3)^0,w,c
  6542   0016CA  B4D8               	btfsc	status,2,c
  6543   0016CC  EF6A  F00B         	goto	u1341
  6544   0016D0  EF6C  F00B         	goto	u1340
  6545   0016D4                     u1341:
  6546   0016D4  EFA2  F00B         	goto	l559
  6547   0016D8                     u1340:
  6548   0016D8  0E01               	movlw	1
  6549   0016DA  6E4F               	movwf	___lldiv@counter^0,c
  6550   0016DC  EF76  F00B         	goto	l2309
  6551   0016E0                     l2307:
  6552   0016E0  90D8               	bcf	status,0,c
  6553   0016E2  3647               	rlcf	___lldiv@divisor^0,f,c
  6554   0016E4  3648               	rlcf	(___lldiv@divisor+1)^0,f,c
  6555   0016E6  3649               	rlcf	(___lldiv@divisor+2)^0,f,c
  6556   0016E8  364A               	rlcf	(___lldiv@divisor+3)^0,f,c
  6557   0016EA  2A4F               	incf	___lldiv@counter^0,f,c
  6558   0016EC                     l2309:
  6559   0016EC  AE4A               	btfss	(___lldiv@divisor+3)^0,7,c
  6560   0016EE  EF7B  F00B         	goto	u1351
  6561   0016F2  EF7D  F00B         	goto	u1350
  6562   0016F6                     u1351:
  6563   0016F6  EF70  F00B         	goto	l2307
  6564   0016FA                     u1350:
  6565   0016FA                     l2311:
  6566   0016FA  90D8               	bcf	status,0,c
  6567   0016FC  364B               	rlcf	___lldiv@quotient^0,f,c
  6568   0016FE  364C               	rlcf	(___lldiv@quotient+1)^0,f,c
  6569   001700  364D               	rlcf	(___lldiv@quotient+2)^0,f,c
  6570   001702  364E               	rlcf	(___lldiv@quotient+3)^0,f,c
  6571   001704  5047               	movf	___lldiv@divisor^0,w,c
  6572   001706  5C43               	subwf	___lldiv@dividend^0,w,c
  6573   001708  5048               	movf	(___lldiv@divisor+1)^0,w,c
  6574   00170A  5844               	subwfb	(___lldiv@dividend+1)^0,w,c
  6575   00170C  5049               	movf	(___lldiv@divisor+2)^0,w,c
  6576   00170E  5845               	subwfb	(___lldiv@dividend+2)^0,w,c
  6577   001710  504A               	movf	(___lldiv@divisor+3)^0,w,c
  6578   001712  5846               	subwfb	(___lldiv@dividend+3)^0,w,c
  6579   001714  A0D8               	btfss	status,0,c
  6580   001716  EF8F  F00B         	goto	u1361
  6581   00171A  EF91  F00B         	goto	u1360
  6582   00171E                     u1361:
  6583   00171E  EF9A  F00B         	goto	l2319
  6584   001722                     u1360:
  6585   001722  5047               	movf	___lldiv@divisor^0,w,c
  6586   001724  5E43               	subwf	___lldiv@dividend^0,f,c
  6587   001726  5048               	movf	(___lldiv@divisor+1)^0,w,c
  6588   001728  5A44               	subwfb	(___lldiv@dividend+1)^0,f,c
  6589   00172A  5049               	movf	(___lldiv@divisor+2)^0,w,c
  6590   00172C  5A45               	subwfb	(___lldiv@dividend+2)^0,f,c
  6591   00172E  504A               	movf	(___lldiv@divisor+3)^0,w,c
  6592   001730  5A46               	subwfb	(___lldiv@dividend+3)^0,f,c
  6593   001732  804B               	bsf	___lldiv@quotient^0,0,c
  6594   001734                     l2319:
  6595   001734  90D8               	bcf	status,0,c
  6596   001736  324A               	rrcf	(___lldiv@divisor+3)^0,f,c
  6597   001738  3249               	rrcf	(___lldiv@divisor+2)^0,f,c
  6598   00173A  3248               	rrcf	(___lldiv@divisor+1)^0,f,c
  6599   00173C  3247               	rrcf	___lldiv@divisor^0,f,c
  6600   00173E  2E4F               	decfsz	___lldiv@counter^0,f,c
  6601   001740  EF7D  F00B         	goto	l2311
  6602   001744                     l559:
  6603   001744  C04B  F043         	movff	___lldiv@quotient,?___lldiv
  6604   001748  C04C  F044         	movff	___lldiv@quotient+1,?___lldiv+1
  6605   00174C  C04D  F045         	movff	___lldiv@quotient+2,?___lldiv+2
  6606   001750  C04E  F046         	movff	___lldiv@quotient+3,?___lldiv+3
  6607   001754  0012               	return		;funcret
  6608   001756                     __end_of___lldiv:
  6609                           	callstack 0
  6610                           
  6611 ;; *************** function ___awmod *****************
  6612 ;; Defined at:
  6613 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  6614 ;; Parameters:    Size  Location     Type
  6615 ;;  dividend        2    0[COMRAM] int 
  6616 ;;  divisor         2    2[COMRAM] int 
  6617 ;; Auto vars:     Size  Location     Type
  6618 ;;  sign            1    5[COMRAM] unsigned char 
  6619 ;;  counter         1    4[COMRAM] unsigned char 
  6620 ;; Return value:  Size  Location     Type
  6621 ;;                  2    0[COMRAM] int 
  6622 ;; Registers used:
  6623 ;;		wreg, status,2, status,0
  6624 ;; Tracked objects:
  6625 ;;		On entry : 0/0
  6626 ;;		On exit  : 0/0
  6627 ;;		Unchanged: 0/0
  6628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6629 ;;      Params:         4       0       0       0       0       0       0
  6630 ;;      Locals:         2       0       0       0       0       0       0
  6631 ;;      Temps:          0       0       0       0       0       0       0
  6632 ;;      Totals:         6       0       0       0       0       0       0
  6633 ;;Total ram usage:        6 bytes
  6634 ;; Hardware stack levels used: 1
  6635 ;; This function calls:
  6636 ;;		Nothing
  6637 ;; This function is called by:
  6638 ;;		_log_event
  6639 ;;		_view_log
  6640 ;;		_set_time
  6641 ;; This function uses a non-reentrant model
  6642 ;;
  6643                           
  6644                           	psect	text41
  6645   0017FE                     __ptext41:
  6646                           	callstack 0
  6647   0017FE                     ___awmod:
  6648                           	callstack 29
  6649   0017FE  0E00               	movlw	0
  6650   001800  6E3C               	movwf	___awmod@sign^0,c
  6651   001802  BE38               	btfsc	(___awmod@dividend+1)^0,7,c
  6652   001804  EF08  F00C         	goto	u1370
  6653   001808  EF06  F00C         	goto	u1371
  6654   00180C                     u1371:
  6655   00180C  EF0E  F00C         	goto	l2331
  6656   001810                     u1370:
  6657   001810  6C37               	negf	___awmod@dividend^0,c
  6658   001812  1E38               	comf	(___awmod@dividend+1)^0,f,c
  6659   001814  B0D8               	btfsc	status,0,c
  6660   001816  2A38               	incf	(___awmod@dividend+1)^0,f,c
  6661   001818  0E01               	movlw	1
  6662   00181A  6E3C               	movwf	___awmod@sign^0,c
  6663   00181C                     l2331:
  6664   00181C  BE3A               	btfsc	(___awmod@divisor+1)^0,7,c
  6665   00181E  EF15  F00C         	goto	u1380
  6666   001822  EF13  F00C         	goto	u1381
  6667   001826                     u1381:
  6668   001826  EF19  F00C         	goto	l2335
  6669   00182A                     u1380:
  6670   00182A  6C39               	negf	___awmod@divisor^0,c
  6671   00182C  1E3A               	comf	(___awmod@divisor+1)^0,f,c
  6672   00182E  B0D8               	btfsc	status,0,c
  6673   001830  2A3A               	incf	(___awmod@divisor+1)^0,f,c
  6674   001832                     l2335:
  6675   001832  5039               	movf	___awmod@divisor^0,w,c
  6676   001834  103A               	iorwf	(___awmod@divisor+1)^0,w,c
  6677   001836  B4D8               	btfsc	status,2,c
  6678   001838  EF20  F00C         	goto	u1391
  6679   00183C  EF22  F00C         	goto	u1390
  6680   001840                     u1391:
  6681   001840  EF46  F00C         	goto	l2351
  6682   001844                     u1390:
  6683   001844  0E01               	movlw	1
  6684   001846  6E3B               	movwf	___awmod@counter^0,c
  6685   001848  EF2A  F00C         	goto	l2341
  6686   00184C                     l2339:
  6687   00184C  90D8               	bcf	status,0,c
  6688   00184E  3639               	rlcf	___awmod@divisor^0,f,c
  6689   001850  363A               	rlcf	(___awmod@divisor+1)^0,f,c
  6690   001852  2A3B               	incf	___awmod@counter^0,f,c
  6691   001854                     l2341:
  6692   001854  AE3A               	btfss	(___awmod@divisor+1)^0,7,c
  6693   001856  EF2F  F00C         	goto	u1401
  6694   00185A  EF31  F00C         	goto	u1400
  6695   00185E                     u1401:
  6696   00185E  EF26  F00C         	goto	l2339
  6697   001862                     u1400:
  6698   001862                     l2343:
  6699   001862  5039               	movf	___awmod@divisor^0,w,c
  6700   001864  5C37               	subwf	___awmod@dividend^0,w,c
  6701   001866  503A               	movf	(___awmod@divisor+1)^0,w,c
  6702   001868  5838               	subwfb	(___awmod@dividend+1)^0,w,c
  6703   00186A  A0D8               	btfss	status,0,c
  6704   00186C  EF3A  F00C         	goto	u1411
  6705   001870  EF3C  F00C         	goto	u1410
  6706   001874                     u1411:
  6707   001874  EF40  F00C         	goto	l2347
  6708   001878                     u1410:
  6709   001878  5039               	movf	___awmod@divisor^0,w,c
  6710   00187A  5E37               	subwf	___awmod@dividend^0,f,c
  6711   00187C  503A               	movf	(___awmod@divisor+1)^0,w,c
  6712   00187E  5A38               	subwfb	(___awmod@dividend+1)^0,f,c
  6713   001880                     l2347:
  6714   001880  90D8               	bcf	status,0,c
  6715   001882  323A               	rrcf	(___awmod@divisor+1)^0,f,c
  6716   001884  3239               	rrcf	___awmod@divisor^0,f,c
  6717   001886  2E3B               	decfsz	___awmod@counter^0,f,c
  6718   001888  EF31  F00C         	goto	l2343
  6719   00188C                     l2351:
  6720   00188C  503C               	movf	___awmod@sign^0,w,c
  6721   00188E  B4D8               	btfsc	status,2,c
  6722   001890  EF4C  F00C         	goto	u1421
  6723   001894  EF4E  F00C         	goto	u1420
  6724   001898                     u1421:
  6725   001898  EF52  F00C         	goto	l2355
  6726   00189C                     u1420:
  6727   00189C  6C37               	negf	___awmod@dividend^0,c
  6728   00189E  1E38               	comf	(___awmod@dividend+1)^0,f,c
  6729   0018A0  B0D8               	btfsc	status,0,c
  6730   0018A2  2A38               	incf	(___awmod@dividend+1)^0,f,c
  6731   0018A4                     l2355:
  6732   0018A4  C037  F037         	movff	___awmod@dividend,?___awmod
  6733   0018A8  C038  F038         	movff	___awmod@dividend+1,?___awmod+1
  6734   0018AC  0012               	return		;funcret
  6735   0018AE                     __end_of___awmod:
  6736                           	callstack 0
  6737                           
  6738 ;; *************** function _clcd_print *****************
  6739 ;; Defined at:
  6740 ;;		line 66 in file "clcd.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  data            2    6[COMRAM] PTR const unsigned char 
  6743 ;;		 -> STR_26(18), STR_25(17), STR_24(24), STR_23(17), 
  6744 ;;		 -> STR_22(23), STR_19(21), STR_18(21), STR_17(21), 
  6745 ;;		 -> STR_16(20), time_v(150), STR_15(20), STR_14(20), 
  6746 ;;		 -> time(9), STR_13(19), STR_12(23), STR_11(18), 
  6747 ;;		 -> STR_10(20), STR_9(3), STR_8(3), STR_7(3), 
  6748 ;;		 -> STR_6(3), STR_5(3), STR_4(3), STR_3(3), 
  6749 ;;		 -> STR_2(3), STR_1(3), 
  6750 ;;  addr            1    8[COMRAM] unsigned char 
  6751 ;; Auto vars:     Size  Location     Type
  6752 ;;		None
  6753 ;; Return value:  Size  Location     Type
  6754 ;;                  1    wreg      void 
  6755 ;; Registers used:
  6756 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6757 ;; Tracked objects:
  6758 ;;		On entry : 0/0
  6759 ;;		On exit  : 0/0
  6760 ;;		Unchanged: 0/0
  6761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6762 ;;      Params:         3       0       0       0       0       0       0
  6763 ;;      Locals:         0       0       0       0       0       0       0
  6764 ;;      Temps:          0       0       0       0       0       0       0
  6765 ;;      Totals:         3       0       0       0       0       0       0
  6766 ;;Total ram usage:        3 bytes
  6767 ;; Hardware stack levels used: 1
  6768 ;; Hardware stack levels required when called: 1
  6769 ;; This function calls:
  6770 ;;		_clcd_write
  6771 ;; This function is called by:
  6772 ;;		_check_matrix_keypad
  6773 ;;		_display_time
  6774 ;;		_display_menu
  6775 ;;		_view_log
  6776 ;;		_download_logs
  6777 ;;		_set_time
  6778 ;;		_main
  6779 ;; This function uses a non-reentrant model
  6780 ;;
  6781                           
  6782                           	psect	text42
  6783   0014C8                     __ptext42:
  6784                           	callstack 0
  6785   0014C8                     _clcd_print:
  6786                           	callstack 28
  6787   0014C8                     
  6788                           ;clcd.c: 66: void clcd_print(const unsigned char *data, unsigned char addr);clcd.c: 67: 
      +                          {;clcd.c: 68:  clcd_write(addr, 0);
  6789   0014C8  0E00               	movlw	0
  6790   0014CA  6E37               	movwf	clcd_write@control_bit^0,c
  6791   0014CC  503F               	movf	clcd_print@addr^0,w,c
  6792   0014CE  EC4F  F009         	call	_clcd_write
  6793                           
  6794                           ;clcd.c: 69:  while (*data != '\0')
  6795   0014D2  EF81  F00A         	goto	l2427
  6796   0014D6                     l2423:
  6797                           
  6798                           ;clcd.c: 70:  {;clcd.c: 71:   clcd_write(*data++, 1);
  6799   0014D6  0E01               	movlw	1
  6800   0014D8  6E37               	movwf	clcd_write@control_bit^0,c
  6801   0014DA  C03D  FFF6         	movff	clcd_print@data,tblptrl
  6802   0014DE  C03E  FFF7         	movff	clcd_print@data+1,tblptrh
  6803   0014E2  6AF8               	clrf	tblptru,c
  6804   0014E4  0E05               	movlw	(high __ramtop+-1)
  6805   0014E6  64F7               	cpfsgt	tblptrh,c
  6806   0014E8  D003               	bra	u1467
  6807   0014EA  0008               	tblrd		*
  6808   0014EC  50F5               	movf	tablat,w,c
  6809   0014EE  D005               	bra	u1460
  6810   0014F0                     u1467:
  6811   0014F0  CFF6 FFE9          	movff	tblptrl,fsr0l
  6812   0014F4  CFF7 FFEA          	movff	tblptrh,fsr0h
  6813   0014F8  50EF               	movf	indf0,w,c
  6814   0014FA                     u1460:
  6815   0014FA  EC4F  F009         	call	_clcd_write
  6816   0014FE  4A3D               	infsnz	clcd_print@data^0,f,c
  6817   001500  2A3E               	incf	(clcd_print@data+1)^0,f,c
  6818   001502                     l2427:
  6819                           
  6820                           ;clcd.c: 69:  while (*data != '\0')
  6821   001502  C03D  FFF6         	movff	clcd_print@data,tblptrl
  6822   001506  C03E  FFF7         	movff	clcd_print@data+1,tblptrh
  6823   00150A  6AF8               	clrf	tblptru,c
  6824   00150C  0E05               	movlw	(high __ramtop+-1)
  6825   00150E  64F7               	cpfsgt	tblptrh,c
  6826   001510  D003               	bra	u1477
  6827   001512  0008               	tblrd		*
  6828   001514  50F5               	movf	tablat,w,c
  6829   001516  D005               	bra	u1470
  6830   001518                     u1477:
  6831   001518  CFF6 FFE9          	movff	tblptrl,fsr0l
  6832   00151C  CFF7 FFEA          	movff	tblptrh,fsr0h
  6833   001520  50EF               	movf	indf0,w,c
  6834   001522                     u1470:
  6835   001522  0900               	iorlw	0
  6836   001524  A4D8               	btfss	status,2,c
  6837   001526  EF97  F00A         	goto	u1481
  6838   00152A  EF99  F00A         	goto	u1480
  6839   00152E                     u1481:
  6840   00152E  EF6B  F00A         	goto	l2423
  6841   001532                     u1480:
  6842   001532  0012               	return		;funcret
  6843   001534                     __end_of_clcd_print:
  6844                           	callstack 0
  6845                           
  6846 ;; *************** function _clcd_write *****************
  6847 ;; Defined at:
  6848 ;;		line 12 in file "clcd.c"
  6849 ;; Parameters:    Size  Location     Type
  6850 ;;  byte            1    wreg     unsigned char 
  6851 ;;  control_bit     1    0[COMRAM] unsigned char 
  6852 ;; Auto vars:     Size  Location     Type
  6853 ;;  byte            1    1[COMRAM] unsigned char 
  6854 ;; Return value:  Size  Location     Type
  6855 ;;                  1    wreg      void 
  6856 ;; Registers used:
  6857 ;;		wreg
  6858 ;; Tracked objects:
  6859 ;;		On entry : 0/0
  6860 ;;		On exit  : 0/0
  6861 ;;		Unchanged: 0/0
  6862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6863 ;;      Params:         1       0       0       0       0       0       0
  6864 ;;      Locals:         1       0       0       0       0       0       0
  6865 ;;      Temps:          0       0       0       0       0       0       0
  6866 ;;      Totals:         2       0       0       0       0       0       0
  6867 ;;Total ram usage:        2 bytes
  6868 ;; Hardware stack levels used: 1
  6869 ;; This function calls:
  6870 ;;		Nothing
  6871 ;; This function is called by:
  6872 ;;		_view_log
  6873 ;;		_clear_logs
  6874 ;;		_download_logs
  6875 ;;		_main
  6876 ;;		_init_clcd
  6877 ;;		_clcd_print
  6878 ;;		_clcd_putch
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           
  6882                           	psect	text43
  6883   00129E                     __ptext43:
  6884                           	callstack 0
  6885   00129E                     _clcd_write:
  6886                           	callstack 29
  6887                           
  6888                           ;incstack = 0
  6889                           ;clcd_write@byte stored from wreg
  6890   00129E  6E38               	movwf	clcd_write@byte^0,c
  6891   0012A0                     
  6892                           ;clcd.c: 12: void clcd_write(unsigned char byte, unsigned char control_bit);clcd.c: 13: 
      +                          {;clcd.c: 14:  RC1 = control_bit;
  6893   0012A0  B037               	btfsc	clcd_write@control_bit^0,0,c
  6894   0012A2  EF55  F009         	goto	u1301
  6895   0012A6  EF58  F009         	goto	u1300
  6896   0012AA                     u1301:
  6897   0012AA  8282               	bsf	3970,1,c	;volatile
  6898   0012AC  EF59  F009         	goto	u1315
  6899   0012B0                     u1300:
  6900   0012B0  9282               	bcf	3970,1,c	;volatile
  6901   0012B2                     u1315:
  6902   0012B2                     
  6903                           ;clcd.c: 15:  PORTD = byte;
  6904   0012B2  C038  FF83         	movff	clcd_write@byte,3971	;volatile
  6905   0012B6                     
  6906                           ;clcd.c: 18:  RC2 = 1;
  6907   0012B6  8482               	bsf	3970,2,c	;volatile
  6908   0012B8                     
  6909                           ;clcd.c: 19:  RC2 = 0;
  6910   0012B8  9482               	bcf	3970,2,c	;volatile
  6911   0012BA                     
  6912                           ;clcd.c: 21:  TRISD7 = 0xFF;
  6913   0012BA  8E95               	bsf	3989,7,c	;volatile
  6914   0012BC                     
  6915                           ;clcd.c: 22:  RC0 = 1;
  6916   0012BC  8082               	bsf	3970,0,c	;volatile
  6917   0012BE                     
  6918                           ;clcd.c: 23:  RC1 = 0;
  6919   0012BE  9282               	bcf	3970,1,c	;volatile
  6920   0012C0                     l2281:
  6921                           
  6922                           ;clcd.c: 26:  {;clcd.c: 27:   RC2 = 1;
  6923   0012C0  8482               	bsf	3970,2,c	;volatile
  6924   0012C2                     
  6925                           ;clcd.c: 28:   RC2 = 0;
  6926   0012C2  9482               	bcf	3970,2,c	;volatile
  6927   0012C4                     
  6928                           ;clcd.c: 29:  } while (RD7);
  6929   0012C4  BE83               	btfsc	3971,7,c	;volatile
  6930   0012C6  EF67  F009         	goto	u1321
  6931   0012CA  EF69  F009         	goto	u1320
  6932   0012CE                     u1321:
  6933   0012CE  EF60  F009         	goto	l2281
  6934   0012D2                     u1320:
  6935   0012D2                     
  6936                           ;clcd.c: 31:  RC0 = 0;
  6937   0012D2  9082               	bcf	3970,0,c	;volatile
  6938                           
  6939                           ;clcd.c: 32:  TRISD7 = 0x00;
  6940   0012D4  9E95               	bcf	3989,7,c	;volatile
  6941   0012D6  0012               	return		;funcret
  6942   0012D8                     __end_of_clcd_write:
  6943                           	callstack 0
  6944                           
  6945                           	psect	rparam
  6946   000000                     
  6947                           	psect	idloc
  6948                           
  6949                           ;Config register IDLOC0 @ 0x200000
  6950                           ;	unspecified, using default values
  6951   200000                     	org	2097152
  6952   200000  FF                 	db	255
  6953                           
  6954                           ;Config register IDLOC1 @ 0x200001
  6955                           ;	unspecified, using default values
  6956   200001                     	org	2097153
  6957   200001  FF                 	db	255
  6958                           
  6959                           ;Config register IDLOC2 @ 0x200002
  6960                           ;	unspecified, using default values
  6961   200002                     	org	2097154
  6962   200002  FF                 	db	255
  6963                           
  6964                           ;Config register IDLOC3 @ 0x200003
  6965                           ;	unspecified, using default values
  6966   200003                     	org	2097155
  6967   200003  FF                 	db	255
  6968                           
  6969                           ;Config register IDLOC4 @ 0x200004
  6970                           ;	unspecified, using default values
  6971   200004                     	org	2097156
  6972   200004  FF                 	db	255
  6973                           
  6974                           ;Config register IDLOC5 @ 0x200005
  6975                           ;	unspecified, using default values
  6976   200005                     	org	2097157
  6977   200005  FF                 	db	255
  6978                           
  6979                           ;Config register IDLOC6 @ 0x200006
  6980                           ;	unspecified, using default values
  6981   200006                     	org	2097158
  6982   200006  FF                 	db	255
  6983                           
  6984                           ;Config register IDLOC7 @ 0x200007
  6985                           ;	unspecified, using default values
  6986   200007                     	org	2097159
  6987   200007  FF                 	db	255
  6988                           
  6989                           	psect	config
  6990                           
  6991                           ; Padding undefined space
  6992   300000                     	org	3145728
  6993   300000  FF                 	db	255
  6994                           
  6995                           ;Config register CONFIG1H @ 0x300001
  6996                           ;	unspecified, using default values
  6997                           ;	Oscillator Selection bits
  6998                           ;	OSC = 0x7, unprogrammed default
  6999                           ;	Fail-Safe Clock Monitor Enable bit
  7000                           ;	FCMEN = 0x0, unprogrammed default
  7001                           ;	Internal/External Oscillator Switchover bit
  7002                           ;	IESO = 0x0, unprogrammed default
  7003   300001                     	org	3145729
  7004   300001  07                 	db	7
  7005                           
  7006                           ;Config register CONFIG2L @ 0x300002
  7007                           ;	unspecified, using default values
  7008                           ;	Power-up Timer Enable bit
  7009                           ;	PWRT = 0x1, unprogrammed default
  7010                           ;	Brown-out Reset Enable bits
  7011                           ;	BOREN = 0x3, unprogrammed default
  7012                           ;	Brown-out Reset Voltage bits
  7013                           ;	BORV = 0x3, unprogrammed default
  7014   300002                     	org	3145730
  7015   300002  1F                 	db	31
  7016                           
  7017                           ;Config register CONFIG2H @ 0x300003
  7018                           ;	unspecified, using default values
  7019                           ;	Watchdog Timer Enable bit
  7020                           ;	WDT = 0x1, unprogrammed default
  7021                           ;	Watchdog Timer Postscale Select bits
  7022                           ;	WDTPS = 0xF, unprogrammed default
  7023   300003                     	org	3145731
  7024   300003  1F                 	db	31
  7025                           
  7026                           ; Padding undefined space
  7027   300004                     	org	3145732
  7028   300004  FF                 	db	255
  7029                           
  7030                           ;Config register CONFIG3H @ 0x300005
  7031                           ;	unspecified, using default values
  7032                           ;	PORTB A/D Enable bit
  7033                           ;	PBADEN = 0x1, unprogrammed default
  7034                           ;	Low-Power Timer 1 Oscillator Enable bit
  7035                           ;	LPT1OSC = 0x0, unprogrammed default
  7036                           ;	MCLR Pin Enable bit
  7037                           ;	MCLRE = 0x1, unprogrammed default
  7038   300005                     	org	3145733
  7039   300005  82                 	db	130
  7040                           
  7041                           ;Config register CONFIG4L @ 0x300006
  7042                           ;	unspecified, using default values
  7043                           ;	Stack Full/Underflow Reset Enable bit
  7044                           ;	STVREN = 0x1, unprogrammed default
  7045                           ;	Single-Supply ICSP Enable bit
  7046                           ;	LVP = 0x1, unprogrammed default
  7047                           ;	Boot Block Size Select bit
  7048                           ;	BBSIZ = 0x0, unprogrammed default
  7049                           ;	Extended Instruction Set Enable bit
  7050                           ;	XINST = 0x0, unprogrammed default
  7051                           ;	Background Debugger Enable bit
  7052                           ;	DEBUG = 0x1, unprogrammed default
  7053   300006                     	org	3145734
  7054   300006  85                 	db	133
  7055                           
  7056                           ; Padding undefined space
  7057   300007                     	org	3145735
  7058   300007  FF                 	db	255
  7059                           
  7060                           ;Config register CONFIG5L @ 0x300008
  7061                           ;	unspecified, using default values
  7062                           ;	Code Protection bit
  7063                           ;	CP0 = 0x1, unprogrammed default
  7064                           ;	Code Protection bit
  7065                           ;	CP1 = 0x1, unprogrammed default
  7066                           ;	Code Protection bit
  7067                           ;	CP2 = 0x1, unprogrammed default
  7068                           ;	Code Protection bit
  7069                           ;	CP3 = 0x1, unprogrammed default
  7070   300008                     	org	3145736
  7071   300008  0F                 	db	15
  7072                           
  7073                           ;Config register CONFIG5H @ 0x300009
  7074                           ;	unspecified, using default values
  7075                           ;	Boot Block Code Protection bit
  7076                           ;	CPB = 0x1, unprogrammed default
  7077                           ;	Data EEPROM Code Protection bit
  7078                           ;	CPD = 0x1, unprogrammed default
  7079   300009                     	org	3145737
  7080   300009  C0                 	db	192
  7081                           
  7082                           ;Config register CONFIG6L @ 0x30000A
  7083                           ;	unspecified, using default values
  7084                           ;	Write Protection bit
  7085                           ;	WRT0 = 0x1, unprogrammed default
  7086                           ;	Write Protection bit
  7087                           ;	WRT1 = 0x1, unprogrammed default
  7088                           ;	Write Protection bit
  7089                           ;	WRT2 = 0x1, unprogrammed default
  7090                           ;	Write Protection bit
  7091                           ;	WRT3 = 0x1, unprogrammed default
  7092   30000A                     	org	3145738
  7093   30000A  0F                 	db	15
  7094                           
  7095                           ;Config register CONFIG6H @ 0x30000B
  7096                           ;	unspecified, using default values
  7097                           ;	Configuration Register Write Protection bit
  7098                           ;	WRTC = 0x1, unprogrammed default
  7099                           ;	Boot Block Write Protection bit
  7100                           ;	WRTB = 0x1, unprogrammed default
  7101                           ;	Data EEPROM Write Protection bit
  7102                           ;	WRTD = 0x1, unprogrammed default
  7103   30000B                     	org	3145739
  7104   30000B  E0                 	db	224
  7105                           
  7106                           ;Config register CONFIG7L @ 0x30000C
  7107                           ;	unspecified, using default values
  7108                           ;	Table Read Protection bit
  7109                           ;	EBTR0 = 0x1, unprogrammed default
  7110                           ;	Table Read Protection bit
  7111                           ;	EBTR1 = 0x1, unprogrammed default
  7112                           ;	Table Read Protection bit
  7113                           ;	EBTR2 = 0x1, unprogrammed default
  7114                           ;	Table Read Protection bit
  7115                           ;	EBTR3 = 0x1, unprogrammed default
  7116   30000C                     	org	3145740
  7117   30000C  0F                 	db	15
  7118                           
  7119                           ;Config register CONFIG7H @ 0x30000D
  7120                           ;	unspecified, using default values
  7121                           ;	Boot Block Table Read Protection bit
  7122                           ;	EBTRB = 0x1, unprogrammed default
  7123   30000D                     	org	3145741
  7124   30000D  40                 	db	64
  7125                           tosu	equ	0xFFF
  7126                           tosh	equ	0xFFE
  7127                           tosl	equ	0xFFD
  7128                           stkptr	equ	0xFFC
  7129                           pclatu	equ	0xFFB
  7130                           pclath	equ	0xFFA
  7131                           pcl	equ	0xFF9
  7132                           tblptru	equ	0xFF8
  7133                           tblptrh	equ	0xFF7
  7134                           tblptrl	equ	0xFF6
  7135                           tablat	equ	0xFF5
  7136                           prodh	equ	0xFF4
  7137                           prodl	equ	0xFF3
  7138                           indf0	equ	0xFEF
  7139                           postinc0	equ	0xFEE
  7140                           postdec0	equ	0xFED
  7141                           preinc0	equ	0xFEC
  7142                           plusw0	equ	0xFEB
  7143                           fsr0h	equ	0xFEA
  7144                           fsr0l	equ	0xFE9
  7145                           wreg	equ	0xFE8
  7146                           indf1	equ	0xFE7
  7147                           postinc1	equ	0xFE6
  7148                           postdec1	equ	0xFE5
  7149                           preinc1	equ	0xFE4
  7150                           plusw1	equ	0xFE3
  7151                           fsr1h	equ	0xFE2
  7152                           fsr1l	equ	0xFE1
  7153                           bsr	equ	0xFE0
  7154                           indf2	equ	0xFDF
  7155                           postinc2	equ	0xFDE
  7156                           postdec2	equ	0xFDD
  7157                           preinc2	equ	0xFDC
  7158                           plusw2	equ	0xFDB
  7159                           fsr2h	equ	0xFDA
  7160                           fsr2l	equ	0xFD9
  7161                           status	equ	0xFD8

Data Sizes:
    Strings     310
    Constant    0
    Data        27
    BSS         204
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      91
    BANK0           160      0      26
    BANK1           256      0     150
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    puts@s	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_21(CODE[3]), STR_20(CODE[21]), 

    clcd_print@data	PTR const unsigned char  size(2) Largest target is 150
		 -> STR_26(CODE[18]), STR_25(CODE[17]), STR_24(CODE[24]), STR_23(CODE[17]), 
		 -> STR_22(CODE[23]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[20]), time_v(BANK1[150]), STR_15(CODE[20]), STR_14(CODE[20]), 
		 -> time(COMRAM[9]), STR_13(CODE[19]), STR_12(CODE[23]), STR_11(CODE[18]), 
		 -> STR_10(CODE[20]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), 
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    menu	PTR unsigned char [4] size(2) Largest target is 23
		 -> STR_13(CODE[19]), STR_12(CODE[23]), STR_11(CODE[18]), STR_10(CODE[20]), 

    arr	PTR unsigned char [9] size(2) Largest target is 3
		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), 
		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    _main->_view_log
    _view_log->_clcd_putch
    _read_external_eeprom->_i2c_write
    _set_time->_clcd_putch
    _get_time->_read_ds1307
    _init_config->_init_ds1307
    _init_ds1307->_write_ds1307
    _write_ds1307->___awdiv
    _read_ds1307->_i2c_write
    _init_clcd->_clcd_write
    _download_logs->_clcd_print
    _puts->_putch
    _display_time->_clcd_print
    _display_speed->_clcd_putch
    _display_menu->_clcd_putch
    _clcd_putch->___lldiv
    _clear_logs->_write_external_eeprom
    _check_matrix_keypad->_log_event
    _log_event->_write_external_eeprom
    _write_external_eeprom->___lldiv
    ___lldiv->___lmul
    _clcd_print->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   84826
                                             34 COMRAM     2     2      0
                _check_matrix_keypad
                         _clcd_print
                         _clcd_write
                         _clear_logs
                       _display_menu
                      _display_speed
                       _display_time
                      _download_logs
                           _get_time
                        _init_config
                      _read_switches
                           _set_time
                           _view_log
 ---------------------------------------------------------------------------------
 (1) _view_log                                             7     7      0   18308
                                             27 COMRAM     7     7      0
                            ___awmod
                             ___wmul
                         _clcd_print
                         _clcd_putch
                         _clcd_write
               _read_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _read_external_eeprom                                 2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _set_time                                             4     4      0   15140
                                             27 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                           _get_time
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (2) _get_time                                             0     0      0      67
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    2124
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _read_switches                                        1     1      0      30
                                              0 COMRAM     1     1      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (2) _scan_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    2678
                           _init_adc
                          _init_clcd
                        _init_ds1307
                           _init_i2c
                 _init_matrix_keypad
                          _init_uart
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     734
                                             10 COMRAM     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (2) _write_ds1307                                         2     1      1     598
                                              8 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_rep_start                                        0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             0     0      0       0
                         _i2c_no_ack
                        _i2c_rx_mode
 ---------------------------------------------------------------------------------
 (4) _i2c_rx_mode                                          0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_no_ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            1     1      0    1944
                                              2 COMRAM     1     1      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _download_logs                                        6     6      0   10311
                                              9 COMRAM     6     6      0
                             ___wmul
                         _clcd_print
                         _clcd_write
                              _putch
                               _puts
 ---------------------------------------------------------------------------------
 (2) _puts                                                 2     0      2     219
                                              1 COMRAM     2     0      2
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    3547
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _display_time                                         0     0      0    4443
                         _clcd_print
 ---------------------------------------------------------------------------------
 (1) _display_speed                                        4     4      0    6395
                                             27 COMRAM     4     4      0
                            ___lldiv
                            ___llmod
                             ___lmul
                         _clcd_putch
                           _read_adc
 ---------------------------------------------------------------------------------
 (2) _read_adc                                             7     5      2      45
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _display_menu                                         0     0      0    9319
                         _clcd_print
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1    4876
                                             25 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lldiv (ARG)
                            ___llmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clear_logs                                           2     2      0    2535
                                             29 COMRAM     2     2      0
                         _clcd_write
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (1) _check_matrix_keypad                                  0     0      0    9213
                         _clcd_print
                          _log_event
 ---------------------------------------------------------------------------------
 (2) _log_event                                            4     4      0    4770
                                             29 COMRAM     4     4      0
                            ___awmod
                            ___lldiv
                            ___llmod
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _write_external_eeprom                                4     3      1     545
                                             25 COMRAM     4     3      1
                            ___lldiv (ARG)
                            ___llmod (ARG)
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     463
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     618
                                             12 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    3032
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    4443
                                              6 COMRAM     3     0      3
                             ___wmul (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_write                                           2     1      1    1944
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _check_matrix_keypad
     _clcd_print
       ___wmul (ARG)
       _clcd_write (ARG)
     _log_event
       ___awmod
       ___lldiv
         ___lmul (ARG)
       ___llmod
       _write_external_eeprom
         ___lldiv (ARG)
         ___llmod (ARG)
         _i2c_start (ARG)
           _i2c_idle
         _i2c_stop (ARG)
           _i2c_idle
         _i2c_write (ARG)
           _i2c_idle
   _clcd_print
   _clcd_write
   _clear_logs
     _clcd_write
     _write_external_eeprom
   _display_menu
     _clcd_print
     _clcd_putch
       ___awdiv (ARG)
       ___awmod (ARG)
       ___lldiv (ARG)
       ___llmod (ARG)
       _clcd_write (ARG)
   _display_speed
     ___lldiv
     ___llmod
     ___lmul
     _clcd_putch
     _read_adc
   _display_time
     _clcd_print
   _download_logs
     ___wmul
     _clcd_print
     _clcd_write
     _putch
     _puts
       _putch
   _get_time
     _read_ds1307
       _i2c_read
         _i2c_no_ack
         _i2c_rx_mode
           _i2c_idle
       _i2c_rep_start
         _i2c_idle
       _i2c_start
       _i2c_stop
       _i2c_write
   _init_config
     _init_adc
     _init_clcd
       _clcd_write
     _init_ds1307
       _read_ds1307
       _write_ds1307
         ___awdiv (ARG)
         ___awmod (ARG)
         _i2c_start (ARG)
         _i2c_stop (ARG)
         _i2c_write (ARG)
     _init_i2c
     _init_matrix_keypad
     _init_uart
   _read_switches
     _scan_key
   _set_time
     ___awdiv
     ___awmod
     _clcd_print
     _clcd_putch
     _get_time
     _write_ds1307
   _view_log
     ___awmod
     ___wmul
     _clcd_print
     _clcd_putch
     _clcd_write
     _read_external_eeprom
       _i2c_read
       _i2c_rep_start
       _i2c_start
       _i2c_stop
       _i2c_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      26        0.0%
BITBIGSFRl         281      0       0      24        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      96       7       58.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      1A       5       16.2%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     24      5B       1       95.8%
BITBIGSFRhhhlhh     27      0       0      17        0.0%
BITBIGSFRhl          F      0       0      23        0.0%
BITBIGSFRhhhh        E      0       0      16        0.0%
BITBIGSFRhhlhhl      9      0       0      20        0.0%
BITBIGSFRhhlhhh      8      0       0      19        0.0%
BITBIGSFRhhll        8      0       0      22        0.0%
BITBIGSFRhhlhhh      7      0       0      18        0.0%
BITBIGSFRhhlhl       2      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10B      25        0.0%
DATA                 0      0     10B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Nov 11 15:34:06 2024

                            _i 0016                              _j 0014          _write_external_eeprom 12D8  
               clcd_print@addr 003F                 clcd_print@data 003D                             l85 1174  
                           _GO 7E11                             l98 1C54                   ___awdiv@sign 003C  
          ___wmul@multiplicand 0039             _init_matrix_keypad 1104                            l101 1A3C  
                          l111 1628                            l200 2EC6                            l106 1102  
                          l300 1AAE                            l212 22FA                            l301 1AEA  
                          l126 1D90                            l310 1B42                            l302 1AC2  
                          l311 1B2E                            l400 112A                            l304 1AD6  
                          l208 24AA                            l161 145C                            l322 15A8  
                          l403 10E0                            l139 20C6                            l307 1B06  
                          l155 28A8                            l172 1F28                            l405 10EE  
                          l413 10AE                            l309 1B1A                            l406 10F0  
                          l422 10D2                            l263 12D2                            l511 1146  
                          l431 10DE                            l264 12D6                            l416 10B6  
                          l520 129C                            l273 1532                            l513 1154  
                          l425 10BE                            l362 1330                            l514 115A  
                          l267 17FC                            l419 10C6                            l451 11AC  
                          l195 2DE2                            l276 1142                            l532 1212  
                          l428 10A6                            l508 11EC                            l292 1A58  
                          l365 135C                            l293 1B44                            l470 1316  
                          l454 123C                            l294 1A94                            l543 14B6  
                          l359 11CC                            l295 1A6C                            l199 2EB6  
                          l544 14C6                            l448 13A4                            l289 1114  
                          l297 1A80                            l473 1266                            l566 1754  
                          l559 1744                            l763 1970                            _CKE 7E3E  
                          l776 18AC                            l952 16A0                            l959 16B0  
                          _RC0 7C10                            _RC1 7C11                            _RC2 7C12  
                ?_display_menu 0037                            _RD7 7C1F                            u300 1A52  
                          u301 1A4E                            u310 1A66                            u311 1A62  
                          u400 1B28                            u320 1A7A                            u401 1B24  
                          u321 1A76                            u410 1B3C                            u330 1A8E  
                          u411 1B38                            u331 1A8A                            u340 1AA8  
                          u341 1AA4                            u350 1ABC                            u351 1AB8  
                          u360 1AD0                            _PEN 7E2A                            u361 1ACC  
                          u370 1AE4                            u371 1AE0                            u380 1B00  
                          u381 1AFC                            u390 1B14                            u391 1B10  
                          _SEN 7E28                            u930 1546                            u931 1542  
                          u940 155C                            u941 1558                            u950 156C  
                          u951 1568                            u960 1586                            u961 1582  
                          _RX9 7D5E                            u970 159E                            u971 159A  
                          _SMP 7E3F                            _TX9 7D66                  ?_display_time 0037  
                  _start_index 0012                            _arr 0060                            _key 002D  
                          _hrs 002B                 clcd_putch@addr 0050                 clcd_putch@data 0051  
                 ___awmod@sign 003C                            wreg 0FE8            ?_init_matrix_keypad 0037  
                         l2011 1536                           l2013 1546                           l2031 159E  
                         l2015 154C                           l2017 155C                           l2025 1576  
                         l3001 2316                           l2211 10B8                           l1411 110E  
                         l2027 1586                           l2035 15A6                           l2019 156C  
                         l3011 2358                           l3003 231E                           l2301 16B2  
                         l2221 10B0                           l1413 11AE                           l2213 10BA  
                         l1421 111A                           l2029 158E                           l3013 235C  
                         l3005 2326                           l2311 16FA                           l2303 16C2  
                         l2223 10B2                           l2231 10CE                           l1415 11C2  
                         l2215 10A2                           l1423 1122                           l1407 1104  
                         l3031 23CA                           l3015 236E                           l3023 238C  
                         l3007 2332                           l2321 173E                           l2313 1704  
                         l2305 16D8                           l2209 10E0                           l2217 10A8  
                         l1417 11CA                           l2401 17CA                           l2233 10D4  
                         l2225 10C0                           l2241 121A                           l1425 1124  
                         l1409 110C                           l1441 11CE                           l3041 2400  
                         l3025 23A0                           l3017 2376                           l3009 2346  
                         l2331 181C                           l2323 17FE                           l2315 1722  
                         l2307 16E0                           l2219 10AA                           l2403 17D2  
                         l2235 10DC                           l2227 10C2                           l2243 1220  
                         l2411 135E                           l1427 1126                           l1419 1116  
                         l1443 11E4                           l1603 1B14                           l3051 2430  
                         l3027 23B4                           l3019 2380                           l2421 14C8  
                         l2341 1854                           l2333 182A                           l2325 1802  
                         l2317 1732                           l2309 16EC                           l2229 10CA  
                         l2261 12F0                           l2253 12DA                           l2405 17DC  
                         l2245 1226                           l2413 1366                           l1429 1128  
                         l1445 11E8                           l2501 1240                           l3061 2484  
                         l3053 2442                           l3029 23B8                           l3037 23D8  
                         l2271 12B6                           l2423 14D6                           l2343 1862  
                         l2351 188C                           l2335 1832                           l2327 1810  
                         l2319 1734                           l2263 12F4                           l2255 12DE  
                         l2407 17EA                           l2247 122A                           l2239 1216  
                         l2415 1372                           l1447 11EA                           l1615 1B3C  
                         l1551 1A3E                           l2511 1260                           l2503 1244  
                         l3063 248E                           l3055 2466                           l3039 23EC  
                         l3047 2408                           l2281 12C0                           l2273 12B8  
                         l2425 14FE                           l2353 189C                           l2345 1878  
                         l2337 1844                           l2329 1818                           l2361 1640  
                         l2265 12FC                           l2257 12E4                           l2441 1F5E  
                         l2601 1BAE                           l2521 1280                           l2409 17F4  
                         l2249 1236                           l2417 1386                           l1609 1B28  
                         l1553 1A52                           l2505 124A                           l3065 2496  
                         l3057 246E                           l3049 241C                           l2283 12C2  
                         l2275 12BA                           l2267 12A0                           l2427 1502  
                         l2355 18A4                           l2347 1880                           l2339 184C  
                         l2371 1690                           l2363 1648                           l2259 12EA  
                         l2451 1FBE                           l2443 1F74                           l2435 1F32  
                         l2611 1BF0                           l2603 1BBA                           l2531 146E  
                         l2523 11EE                           l2515 1268                           l2291 1192  
                         l2419 1390                           l1619 1B42                           l1571 1A8E  
                         l2507 1250                           l3067 249E                           l3059 2472  
                         l2285 12C4                           l2277 12BC                           l2269 12B2  
                         l2349 1886                           l2373 169A                           l2365 1654  
                         l2461 2064                           l2453 1FC2                           l2437 1F46  
                         l2445 1F78                           l2429 1F2A                           l2613 1C04  
                         l2621 1C36                           l2605 1BD6                           l2533 147C  
                         l2525 120A                           l2517 126C                           l2381 1762  
                         l2293 1196                           l1581 1ABC                           l1565 1A7A  
                         l2541 18B2                           l2509 1254                           l2701 263C  
                         l2279 12BE                           l2367 1662                           l2359 162A  
                         l2463 207A                           l2455 1FFC                           l2447 1F7C  
                         l2623 1C48                           l2615 1C10                           l2607 1BDA  
                         l2631 1C56                           l2535 148C                           l2471 131A  
                         l2287 1146                           l2519 127C                           l2391 179E  
                         l2383 1772                           l2375 1756                           l2295 119C  
                         l1575 1AA8                           l1559 1A66                           l2551 18E2  
                         l2543 18C0                           l2711 26B8                           l2703 2640  
                         l2369 1680                           l2465 2082                           l2457 202C  
                         l2449 1F98                           l2625 1C50                           l2617 1C2C  
                         l2609 1BDE                           l2481 112E                           l2641 1CC8  
                         l2633 1C68                           l2537 1496                           l2529 145E  
                         l2473 132E                           l2289 1156                           l2801 1EA4  
                         l2393 17A8                           l2385 177C                           l2377 175A  
                         l2297 11A2                           l1593 1AE4                           l2561 1910  
                         l2553 18E6                           l2545 18C8                           l2721 2734  
                         l2713 26BC                           l2705 2664                           l2467 209E  
                         l2459 2060                           l2619 1C32                           l2651 1D32  
                         l2643 1CEA                           l2635 1C80                           l2475 133E  
                         l2627 1972                           l2811 1F18                           l2803 1EE0  
                         l2395 17AE                           l2387 178C                           l2379 1760  
                         l2299 11A8                           l1587 1AD0                           l2571 1944  
                         l2563 191E                           l2555 18EE                           l2547 18CC  
                         l2539 18AE                           l2491 15F8                           l2483 15AA  
                         l2731 27B0                           l2723 2738                           l2715 26E0  
                         l2707 268C                           l2469 20A6                           l2661 1D6C  
                         l2645 1CFA                           l2637 1C92                           l2477 1354  
                         l2629 10F2                           l2813 1F20                           l2805 1EEC  
                         l2397 17B8                           l2389 1796                           l1597 1B00  
                         l2573 194A                           l2565 1924                           l2557 1900  
                         l2549 18DA                           l2493 15FC                           l2485 15C2  
                         l2901 2DF4                           l2821 2900                           l2733 27B4  
                         l2725 275C                           l2717 2708                           l2709 2690  
                         l2741 2800                           l2591 1B46                           l2663 1D88  
                         l2647 1D0C                           l2655 1D3C                           l2639 1CA6  
                         l2807 1EF0                           l2399 17C0                           l2583 115C  
                         l2567 193A                           l2559 1908                           l2575 1950  
                         l2495 1606                           l2487 15D0                           l2903 2DFC  
                         l2823 293C                           l2831 29CC                           l2815 28AA  
                         l2751 286E                           l2743 2812                           l2735 27D6  
                         l2727 2784                           l2719 270C                           l2671 24E4  
                         l2911 20C8                           l2593 1B68                           l2761 1410  
                         l2657 1D4E                           l2649 1D18                           l2809 1F0E  
                         l2585 1164                           l2577 1960                           l2569 1942  
                         l2497 160E                           l2489 15E6                           l2905 2E36  
                         l2841 2A70                           l2833 2A02                           l2825 2946  
                         l2817 28BA                           l2753 2874                           l2745 283C  
                         l2729 2788                           l2681 2530                           l2737 27DA  
                         l2673 24FC                           l2921 20FE                           l2913 20CC  
                         l2595 1B7A                           l2763 1414                           l2659 1D60  
                         l2771 1DA4                           l2587 1168                           l2579 1968  
                         l2499 1624                           l2907 2E70                           l2843 2AAC  
                         l2851 2B3C                           l2835 2A1A                           l2827 2964  
                         l2819 28CA                           l2755 289C                           l2747 2844  
                         l2739 27F8                           l2691 25C0                           l2683 2550  
                         l2675 2504                           l2667 24B2                           l2931 2120  
                         l2923 2102                           l2915 20D4                           l2597 1B8A  
                         l2765 142A                           l2757 13FA                           l2781 1E12  
                         l2773 1DC4                           l2589 1170                           l2909 2EAA  
                         l2861 2BB6                           l2853 2B72                           l2845 2AB6  
                         l2829 2982                           l2837 2A2A                           l2749 2854  
                         l2693 25C4                           l2685 256C                           l2669 24C4  
                         l2677 2512                           l2941 215E                           l2933 212A  
                         l2925 2106                           l2917 20DC                           l2599 1B9A  
                         l2767 1452                           l2759 1406                           l2791 1E54  
                         l2783 1E2A                           l2775 1DDC                           l2871 2C6E  
                         l2863 2BEC                           l2855 2B8A                           l2847 2AD4  
                         l2839 2A3A                           l2695 25E8                           l2687 2594  
                         l2679 2524                           l2951 21A4                           l2943 2170  
                         l2927 210A                           l2919 20EE                           l2935 2136  
                         l2793 1E5C                           l2785 1E32                           l2777 1DE4  
                         l2769 1D92                           l2881 2D28                           l2865 2C28  
                         l2873 2CB8                           l2849 2AF2                           l2857 2B9A  
                         l2697 2610                           l2689 2598                           l2961 21F8  
                         l2945 2182                           l2953 21B0                           l2937 2148  
                         l2929 210E                           l2795 1E62                           l2787 1E3C  
                         l2779 1DF2                           l2891 2D80                           l2883 2D2A  
                         l2875 2CEE                           l2867 2C32                           l2859 2BA4  
                         l2699 2614                           l2971 2242                           l2963 2202  
                         l2955 21C2                           l2947 218C                           l2939 214C  
                         l2797 1E6E                           l2789 1E48                           l2893 2D90  
                         l2885 2D40                           l2877 2D06                           l2869 2C50  
                         l2981 2298                           l2965 2212                           l2973 224E  
                         l2957 21D4                           l2949 219C                           l2799 1EA0  
                         l2895 2DB0                           l2887 2D50                           l2879 2D16  
                         l2991 22DC                           l2983 22A2                           l2975 2260  
                         l2967 2222                           l2959 21E6                           l2897 2DC2  
                         l2889 2D60                           l2993 22E6                           l2985 22AA  
                         l2977 2272                           l2969 223A                           l2899 2DE2  
                         l2995 22EE                           l2979 2286                           l2987 22B6  
                         l2989 22CA                           l2997 22FA                           l2999 230C  
                         _ADFM 7E07                           _ADON 7E10                           STR_1 2FF9  
                         STR_2 2FF6                           STR_3 2FFC                           STR_4 2FE7  
                         STR_5 2FEA                           STR_6 2FED                           STR_7 2FF0  
                         STR_8 2FF3                           STR_9 2FE4                           _BRGH 7D62  
                         _CREN 7D5C                           u2000 2BEC                           u2001 2BE8  
                         u2010 2CEE                           u2011 2CEA                           u1300 12B0  
                         u2020 2D28                           u2100 2148                           u1301 12AA  
                         u2021 2D24                           u2101 2144                           u2030 2D50  
                         u2110 215E                           u2031 2D4C                           u2111 215A  
                         u1320 12D2                           u1400 1862                           u2040 2D60  
                         u2200 2286                           u2120 2170                           u1321 12CE  
                         u1401 185E                           u2041 2D5C                           u2201 2282  
                         u2121 216C                           u1410 1878                           u1330 1154  
                         u2050 2D90                           u2210 2298                           u2130 2182  
                         u1315 12B2                           u1411 1874                           u1331 1150  
                         u2051 2D8C                           u2211 2294                           u2131 217E  
                         u1420 189C                           u1340 16D8                           u1500 1F5A  
                         u2060 2DC2                           u2300 23CA                           u2220 22CA  
                         u2140 21C2                           u1421 1898                           u1341 16D4  
                         u1501 1F56                           u2061 2DBE                           u2301 23C6  
                         u2221 22C6                           u2141 21BE                           u1350 16FA  
                         u1430 1640                           u1510 1F98                           u2070 2DF4  
                         u2310 23EC                           u2230 22DC                           u2150 21D4  
                         u1351 16F6                           u1431 163C                           u1511 1F94  
                         u2071 2DF0                           u2311 23E8                           u2231 22D8  
                         u2151 21D0                           u1360 1722                           u1440 1662  
                         u1280 10EE                           u1520 207A                           u1600 18DA  
                         u2320 2400                           u2240 230C                           u2160 21E6  
                         u2080 20EE                           u1361 171E                           u1441 165E  
                         u1281 10EA                           u1521 2076                           u1601 18D6  
                         u2321 23FC                           u2241 2308                           u2161 21E2  
                         u2081 20EA                           u1370 1810                           u1450 1680  
                         u1290 1316                           u1530 209E                           u1610 1900  
                         u2330 241C                           u2250 2346                           u2170 21F8  
                         u2090 2120                           u1371 180C                           u1451 167C  
                         u1291 1312                           u1531 209A                           u1611 18FC  
                         u2331 2418                           u2251 2342                           u2171 21F4  
                         u2091 211C                           u1460 14FA                           u1380 182A  
                         u1700 1BF0                           u1540 133E                           u1620 191E  
                         u2340 2430                           u2260 2358                           u2180 2260  
                         u1381 1826                           u1701 1BEC                           u1541 133A  
                         u1621 191A                           u2341 242C                           u2261 2354  
                         u2181 225C                           u1470 1522                           u1390 1844  
                         u1710 1C04                           u1630 193A                           u1550 15D0  
                         u2350 2442                           u2270 236E                           u2190 2272  
                         u1391 1840                           u1711 1C00                           u2407 1782  
                         u1631 1936                           u1551 15CC                           u2351 243E  
                         u2271 236A                           u2191 226E                           u1480 1532  
                         u1720 1C2C                           u1800 1D60                           u1560 129C  
                         u1640 1960                           u2360 2484                           u2280 23A0  
                         u1481 152E                           u1721 1C28                           u1801 1D5C  
                         u1561 1298                           u2417 1798                           u1641 195C  
                         u2361 2480                           u2281 239C                           u1490 1F46  
                         u1730 1C48                           u1650 1B7A                           u1810 1D88  
                         u1570 147C                           u2290 23B4                           u1467 14F0  
                         u1491 1F42                           u1731 1C44                           u1651 1B76  
                         u1811 1D84                           u1571 1478                           u2427 17BA  
                         u2291 23B0                           u1660 1B8A                           u1740 1C68  
                         u1580 14B6                           u1900 1DA4                           u1820 24C4  
                         u1477 1518                           u1661 1B86                           u1741 1C64  
                         u1581 14B2                           u1901 1DA0                           u2437 17CC  
                         u1821 24C0                           u1670 1B9A                           u1750 1C92  
                         u1910 1EE0                           u1590 18C0                           u1830 2524  
                         u1671 1B96                           u1751 1C8E                           u1911 1EDC  
                         u2447 17E2                           u1591 18BC                           u1831 2520  
                         u1680 1BAE                           u1760 1CFA                           u1920 1F0E  
                         u1840 27F8                           u1681 1BAA                           u1761 1CF6  
                         u1921 1F0A                           u2457 17F6                           u1841 27F4  
                         u2377 222C                           u1690 1BD6                           u1770 1D0C  
                         u1930 28CA                           u1850 2812          ?_read_external_eeprom 0037  
                         u1691 1BD2                           u1771 1D08                           u2467 1DCE  
                         u1931 28C6                           u1851 280E                           u2387 24EE  
                         u1780 1D32                           u1940 2900                           u1860 283C  
                         u1781 1D2E                           u2477 1E1C                           u2397 1768  
                         u1941 28FC                           u1861 2838                           u1790 1D4E  
                         u1950 2A02                           u1870 2854                           u1791 1D4A  
                         u1951 29FE                           u1871 2850                           u1960 2A3A  
                         u1880 286E                           u1961 2A36                           u1881 286A  
                         u1890 142A                           u1970 2A70                           u1891 1426  
                         u1971 2A6C                           u1980 2B72                           u1981 2B6E  
                         u1990 2BB6                           u1991 2BB2                           _RCEN 7E2B  
                         _RCIF 7CF5                           _RBPU 7F8F                           _SPEN 7D5F  
                         _RSEN 7E29                           _TXEN 7D65                           _TXIF 7CF4  
                         _SYNC 7D64                 ?_display_speed 0037                           _flag 0022  
                         _main 20C8                           _menu 0072                           _mins 002A  
                         _secs 0029                           _time 002E                           fsr0h 0FEA  
                         indf0 0FEF                           fsr2h 0FDA                           fsr0l 0FE9  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         _puts 1268                           prodh 0FF4                           prodl 0FF3  
                         start 0000           ??_init_matrix_keypad 0037                   ___param_bank 0000  
               clcd_write@byte 0038                  _i2c_rep_start 10C0                  ??_i2c_rx_mode 0037  
                 ?_init_ds1307 0037                 ??_display_menu 0052                          _ADCS0 7E00  
                        _ADCS1 7E01                          _ADCS2 7E02                          ?_main 0037  
                 ?_read_ds1307 0037                          _ACKEN 7E2C                          _ACKDT 7E2D  
               ??_display_time 0040                          _BCLIF 7D0B                          _ACQT0 7E03  
                        _ACQT1 7E04                          _ACQT2 7E05                __end_of___awdiv 1972  
                        STR_10 2ECD                          STR_11 2F9E                          STR_20 2F0F  
                        STR_12 2EF8                          STR_21 2F21                          STR_13 2F8B  
                        STR_14 2F63                          STR_22 2EE1                          STR_23 2FD3  
                        STR_15 2F77                          STR_16 2F63                          STR_24 2EC9  
                        _BRG16 7DC3                          STR_25 2FC2                          STR_17 2F4E  
                        STR_26 2FB0                          STR_18 2F24                          STR_19 2F39  
              __end_of___awmod 18AE                          ?_puts 0038                __end_of___lldiv 1756  
              ___awdiv@divisor 0039                __end_of___llmod 16B2                   ?_init_config 0037  
              ___awdiv@counter 003B                          _VCFG0 7E0C                          _VCFG1 7E0D  
                        _RCREG 0FAE                          _SENDB 7D63                          _SPBRG 0FAF  
                        _PORTB 0F81                          _PORTD 0F83                          _TRISB 0F93  
                        _TRISC 0F94                          _TRISD 0F95                          _SSPIF 7CF3  
                        _TXREG 0FAD            ___lmul@multiplicand 003B      write_external_eeprom@data 0050  
    write_external_eeprom@wait 0051                          _delay 0001                          _feild 002C  
                        _count 0020            _check_matrix_keypad 1B46                          _index 0024  
                        _speed 0005                          _putch 1144                          tablat 0FF5  
                        puts@s 0038                          status 0FD8               init_ds1307@dummy 0041  
                   _i2c_no_ack 10A2                __initialization 13A6                 ?_i2c_rep_start 0037  
       ?_write_external_eeprom 0050                   __end_of_main 24B2           ?_check_matrix_keypad 0037  
                 __end_of_puts 129E               __end_of_i2c_idle 10F2               __end_of_i2c_read 10E0  
             __end_of_i2c_stop 10B8                         ??_main 0059                         ??_puts 003A  
                __activetblptr 0002            __end_of_i2c_rx_mode 10C0                         _ADCON0 0FC2  
                       _ADCON1 0FC1               read_switches@key 0028         ??_read_external_eeprom 0038  
              ??_display_speed 0052               ___llmod@dividend 0037                         _ADRESH 0FC4  
                       _ADRESL 0FC3               ___awdiv@dividend 0037                         ?_putch 0037  
                       _GODONE 7E11                   _write_ds1307 1190                         _SSPADD 0FC8  
                       _TRISC3 7CA3                         _TRISC4 7CA4                         _TRISC6 7CA6  
                       _TRISC7 7CA7                         _TRISD7 7CAF                         _SSPBUF 0FC9  
               clear_logs@addr 0054          ??_check_matrix_keypad 0058               __end_of_get_time 162A  
                       ___lmul 145E                         ___wmul 11EE                      ??___awdiv 003B  
                    ??___awmod 003B                      ??___lldiv 004B                      ??___llmod 003F  
             __end_of_init_i2c 112C               __end_of_init_adc 11CE                         _s_flag 0026  
             __end_of_read_adc 135E                         clear_0 13DE                         clear_1 13EA  
             ___awdiv@quotient 003D                ___awmod@divisor 0039                         isa$std 0001  
             __end_of_scan_key 1B46                         _time_v 0100                ___awmod@counter 003B  
                 __pdataCOMRAM 005B               __end_of_set_time 2EC8                   __mediumconst 2EC8  
                       tblptrh 0FF7                         tblptrl 0FF6                         tblptru 0FF8  
             __end_of_view_log 28AA                  _download_logs 1D92           view_log@view_address 000E  
                   __accesstop 0060        __end_of__initialization 13F0           __end_of_display_menu 1D92  
         __end_of_display_time 1104                  ___rparam_used 0001                ??_i2c_rep_start 0037  
                  ?_i2c_no_ack 0037                 __pcstackCOMRAM 0037                   __pidataBANK0 1176  
                  _i2c_rx_mode 10B8                  __end_of_putch 115C              __end_of_i2c_start 10B0  
            __end_of_i2c_write 10D4                 ?_download_logs 0037                        ??_putch 0037  
                   __pbssBANK1 0100                  _current_index 0010                      ?_i2c_idle 0037  
                    ?_i2c_read 0037                      ?_i2c_stop 0037                     _clcd_print 14C8  
                   _clcd_putch 112C                     _clcd_write 129E   write_external_eeprom@address 0053  
                   _clear_logs 13FA                read_ds1307@data 0039                        ?___lmul 0037  
                      ?___wmul 0037              read_switches@once 005B                        _ACKSTAT 7E2E  
               ___lmul@product 003F                        _SSPCON1 0FC6                      ?_get_time 0037  
                _read_switches 1534                     ??_i2c_idle 0037                     ??_i2c_read 0037  
                   ??_i2c_stop 0037                      ?_init_i2c 0037                      ?_init_adc 0037  
                    ?_read_adc 0037                      ?_scan_key 0037        ??_write_external_eeprom 0051  
                      __Hparam 0000                        __Lparam 0000                      ?_set_time 0037  
                      ___awdiv 18AE                        ___awmod 17FE                      ?_view_log 0037  
                      ___lldiv 16B2                        ___llmod 162A                        __pcinit 13A6  
                      __ramtop 0600                        __ptext0 20C8                        __ptext1 24B2  
                      __ptext2 123E                        __ptext3 28AA                        __ptext4 15AA  
                      __ptext5 18AE                        __ptext6 1534                        __ptext7 1A3E  
                      __ptext8 115C                        __ptext9 11CE              __end_of_init_clcd 17FE  
            __end_of_init_uart 11EE               ___awmod@dividend 0037                ??_download_logs 0040  
            __end_of_log_event 20C8                 ?_read_switches 0037                     ??_get_time 003A  
         end_of_initialization 13F0                     ??_init_i2c 0037                     ??_init_adc 0037  
                __Lmediumconst 2EC8                     ??_read_adc 0039                     ??_scan_key 0037  
                  ?_clcd_print 003D                    ?_clcd_putch 0050                ___lldiv@divisor 0047  
                  ?_clcd_write 0037                ___lldiv@counter 004F                    ?_clear_logs 0037  
                   ??_set_time 0052                        postdec1 0FE5                        postdec2 0FDD  
                      postinc0 0FEE                        postinc2 0FDE                     ??_view_log 0052  
                    _PORTBbits 0F81                read_adc@channel 003D                   _display_menu 1C56  
                 _display_time 10F2                  i2c_write@data 0037                read_adc@reg_val 003B  
               download_logs@i 0044                 download_logs@j 0042          __end_of_display_speed 1A3E  
  __end_of_check_matrix_keypad 1C56       read_external_eeprom@data 0039           display_speed@adc_val 0052  
                 ??_i2c_no_ack 0037              view_log@view_flag 000C                   ?_i2c_rx_mode 0037  
               __end_of___lmul 14C8                 __end_of___wmul 1214                  __pidataCOMRAM 3000  
          start_initialization 13A6                ??_read_switches 0037                      _i2c_start 10A8  
                    _i2c_write 10C8             __end_of_i2c_no_ack 10A8                ___llmod@divisor 003B  
              ___llmod@counter 003F          __end_of_i2c_rep_start 10C8                       ??___lmul 003F  
                     ??___wmul 003B                  ??_init_ds1307 0041                    __pdataBANK0 0060  
                ??_read_ds1307 0038    read_switches@detection_type 0037                  ??_init_config 0042  
                   log_event@i 0056                    __pbssCOMRAM 0001                     ?_i2c_start 0037  
                   ?_i2c_write 0037  __end_of_write_external_eeprom 1318                  __pmediumconst 2EC8  
                     ?___awdiv 0037                       ?___awmod 0037                       ?___lldiv 0043  
           read_ds1307@address 0038                       ?___llmod 0037                      _clock_reg 0009  
          __end_of_init_ds1307 13A6            __end_of_read_ds1307 123E                      _init_clcd 1756  
          __end_of_init_config 1176                      _init_uart 11CE                      _menu_flag 001C  
                    _log_event 1F2A                  ?_write_ds1307 003F                 ___wmul@product 003B  
  read_external_eeprom@address 0038                   ??_clcd_print 0040                   ??_clcd_putch 0051  
   __end_of_init_matrix_keypad 1116                   ??_clcd_write 0038                   ??_clear_logs 0054  
        clcd_write@control_bit 0037              ___wmul@multiplier 0037                    ??_i2c_start 0037  
           __end_of_clcd_print 1534                    ??_i2c_write 0037             __end_of_clcd_putch 1144  
        __end_of_download_logs 1F2A             __end_of_clcd_write 12D8                     ?_init_clcd 0037  
                   ?_init_uart 0037             __end_of_clear_logs 145E              ___lmul@multiplier 0037  
                    copy_data0 13BA                 ??_write_ds1307 0040                     ?_log_event 0037  
               _eeprom_address 001A                       _i2c_idle 10E0                       _i2c_read 10D4  
                     _i2c_stop 10B0                       __Hrparam 0000                       __Lrparam 0000  
 __end_of_read_external_eeprom 1268                    _init_ds1307 135E                    _event_count 001E  
                  _read_ds1307 1214                    _init_config 115C            write_ds1307@address 0040  
                     __ptext10 1104                       __ptext11 1116                       __ptext20 11AE  
                     __ptext12 135E                       __ptext21 1D92                       __ptext13 1190  
                     __ptext30 112C                       __ptext22 1268                       __ptext14 1214  
                     __ptext31 13FA                       __ptext23 1144                       __ptext15 10C0  
                     __ptext40 16B2                       __ptext32 1B46                       __ptext24 11EE  
                     __ptext16 10D4                       __ptext41 17FE                       __ptext33 1F2A  
                     __ptext25 10F2                       __ptext17 10B8                       __ptext42 14C8  
                     __ptext34 12D8                       __ptext26 1972                       __ptext18 10A2  
                     __ptext43 129E                       __ptext35 10C8                       __ptext27 1318  
                     __ptext19 1756                       __ptext36 10B0                       __ptext28 145E  
                     __ptext37 10A8                       __ptext29 1C56                       __ptext38 10E0  
                     __ptext39 162A                       _get_time 15AA                       _init_i2c 1116  
                     _init_adc 11AE                       _read_adc 1318                       _menu_cnt 0018  
                     _scan_key 1A3E                       _set_time 28AA                       isa$xinst 0000  
                     _view_log 24B2                      view_log@i 0057                      putch@byte 0037  
                  ??_init_clcd 0039          __end_of_read_switches 15AA                    ??_init_uart 0037  
                  ??_log_event 0054               ___lldiv@dividend 0043           __end_of_write_ds1307 11AE  
             ___lldiv@quotient 004B            view_log@entry_index 0055               write_ds1307@data 003F  
         _read_external_eeprom 123E                  _display_speed 1972  
